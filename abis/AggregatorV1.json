{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NoAttemptsLeft",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amountInstantBurn",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amountBurn",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "received",
          "type": "uint256"
        }
      ],
      "name": "BurnAggregation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "CanonicalPoolChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DefaultAdminDelayChangeCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "newDelay",
          "type": "uint48"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "effectSchedule",
          "type": "uint48"
        }
      ],
      "name": "DefaultAdminDelayChangeScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DefaultAdminTransferCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "acceptSchedule",
          "type": "uint48"
        }
      ],
      "name": "DefaultAdminTransferScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "swapReceived",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "minted",
          "type": "uint256"
        }
      ],
      "name": "StakeAggregation",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BURNER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FEE_RECIPIENT_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GOVERNOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MANAGER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REBASER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptDefaultAdminTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "beginDefaultAdminTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burner",
      "outputs": [
        {
          "internalType": "contract BurnerV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "targetPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "targetError",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "attempts",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "pool_",
          "type": "address"
        },
        {
          "internalType": "int128",
          "name": "tokenIn",
          "type": "int128"
        },
        {
          "internalType": "int128",
          "name": "tokenOut",
          "type": "int128"
        }
      ],
      "name": "calculatePurchasable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelDefaultAdminTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canonicalPool",
      "outputs": [
        {
          "internalType": "contract IStableSwap",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "newDelay",
          "type": "uint48"
        }
      ],
      "name": "changeDefaultAdminDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultAdminDelay",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultAdminDelayIncreaseWait",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flip",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "burner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "liquidityPool_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "stflip_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "flip_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "gov_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool_",
          "type": "address"
        },
        {
          "internalType": "int128",
          "name": "tokenIn",
          "type": "int128"
        },
        {
          "internalType": "int128",
          "name": "tokenOut",
          "type": "int128"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "marginalCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minter",
      "outputs": [
        {
          "internalType": "contract MinterV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingDefaultAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "schedule",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingDefaultAdminDelay",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "newDelay",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "schedule",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rollbackDefaultAdminDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "flip_",
          "type": "address"
        }
      ],
      "name": "setFlip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool_",
          "type": "address"
        }
      ],
      "name": "setPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "stflip_",
          "type": "address"
        }
      ],
      "name": "setStflip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountTotal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountSwap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minimumAmountSwapOut",
          "type": "uint256"
        }
      ],
      "name": "stakeAggregate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stflip",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountInstantBurn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBurn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountSwap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minimumAmountSwapOut",
          "type": "uint256"
        }
      ],
      "name": "unstakeAggregate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801562000010575f80fd5b506200001b62000021565b620000df565b5f54610100900460ff16156200008d5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b5f5460ff90811614620000dd575f805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6125a780620000ed5f395ff3fe608060405234801561000f575f80fd5b5060043610610229575f3560e01c806391d148541161012a578063cefc1429116100b4578063e63ab1e911610079578063e63ab1e91461052f578063e82748ca14610556578063ec7245b01461057d578063ec87621c14610590578063f025b209146105b7575f80fd5b8063cefc1429146104b7578063cf6eefb7146104bf578063d5391393146104ed578063d547741f14610514578063d602b9fd14610527575f80fd5b8063a217fddf116100fa578063a217fddf1461045b578063cc2a9a5b14610462578063cc8463c814610475578063ccc574901461047d578063cde4efa9146104a4575f80fd5b806391d14854146103fb5780639c3721bc1461040e578063a1eda53c14610421578063a1fed9dc14610448575f80fd5b80633cee0be3116101b657806383eb70e51161017b57806383eb70e51461039557806384ef8ffc146103bc5780638867ed80146103cd5780638da5cb5b146103e05780638dbff07a146103e8575f80fd5b80633cee0be3146103365780634437152a14610349578063470887261461035c578063634e93da1461036f578063649a5ec714610382575f80fd5b8063248a9ca3116101fc578063248a9ca3146102a657806327810b6e146102d6578063282c51f3146102e95780632f2ff15d1461031057806336568abe14610323575f80fd5b806301ffc9a71461022d578063022d63fb1461025557806307546172146102715780630aa6220b1461029c575b5f80fd5b61024061023b3660046120ec565b6105ca565b60405190151581526020015b60405180910390f35b620697805b60405165ffffffffffff909116815260200161024c565b60cb54610284906001600160a01b031681565b6040516001600160a01b03909116815260200161024c565b6102a46105f4565b005b6102c86102b4366004612113565b5f9081526065602052604090206001015490565b60405190815260200161024c565b60cc54610284906001600160a01b031681565b6102c87f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b6102a461031e366004612145565b610609565b6102a4610331366004612145565b610688565b60cd54610284906001600160a01b031681565b6102a461035736600461216f565b610771565b6102a461036a36600461216f565b6109b2565b6102a461037d36600461216f565b6109df565b6102a4610390366004612188565b6109f2565b6102c87f5fde63b561377d1441afa201ff619faac2ff8fed70a7fbdbe7a5cb07768c0b7581565b6098546001600160a01b0316610284565b6102c86103db3660046121be565b610a05565b610284610bda565b6102c86103f6366004612219565b610bf2565b610240610409366004612145565b610c24565b6102a461041c36600461216f565b610c4e565b610429610c7b565b6040805165ffffffffffff93841681529290911660208301520161024c565b6102c8610456366004612261565b610ccd565b6102c85f81565b6102a4610470366004612290565b610f8d565b61025a6112d7565b6102c87f7935bd0ae54bc31f548c14dba4d37c5c64b3f8ca900cb468fb8abd54d5894f5581565b60ca54610284906001600160a01b031681565b6102a4611335565b6104c76113b2565b604080516001600160a01b03909316835265ffffffffffff90911660208301520161024c565b6102c87f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102a4610522366004612145565b6113d3565b6102a4611450565b6102c87f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6102c87fb6edeab710812f8917b946c63c63b900f456e6a1abea66a90b1f8277f035664b81565b6102c861058b3660046122f4565b611462565b6102c87f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0881565b60c954610284906001600160a01b031681565b5f6001600160e01b031982166318a4c3c360e11b14806105ee57506105ee8261162a565b92915050565b5f6105fe8161165e565b610606611668565b50565b8161067a5760405162461bcd60e51b815260206004820152603660248201527f416363657373436f6e74726f6c3a2063616e2774206469726563746c79206772604482015275616e742064656661756c742061646d696e20726f6c6560501b60648201526084015b60405180910390fd5b6106848282611674565b5050565b811580156106a357506098546001600160a01b038281169116145b15610767575f806106b26113b2565b90925090506001600160a01b0382161580156106d5575065ffffffffffff811615155b80156106e857504265ffffffffffff8216105b6107525760405162461bcd60e51b815260206004820152603560248201527f416363657373436f6e74726f6c3a206f6e6c792063616e2072656e6f756e636560448201527420696e2074776f2064656c6179656420737465707360581b6064820152608401610671565b50506097805465ffffffffffff60a01b191690555b610684828261169d565b5f61077b8161165e565b60cd546001600160a01b03161561087b5760ca5460cd5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926107c2929116905f9060040161231d565b6020604051808303815f875af11580156107de573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108029190612336565b5060c95460cd5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392610839929116905f9060040161231d565b6020604051808303815f875af1158015610855573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108799190612336565b505b60cd80546001600160a01b0319166001600160a01b0384811691821790925560ca5460405163095ea7b360e01b815292169163095ea7b3916108c2915f199060040161231d565b6020604051808303815f875af11580156108de573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109029190612336565b5060c95460cd5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39261093a929116905f199060040161231d565b6020604051808303815f875af1158015610956573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061097a9190612336565b506040516001600160a01b038316907f6876f036a9b507fa18967bfbe1cf9e2a93c8b09eb7a3bcbe0a741c428b535cf8905f90a25050565b5f6109bc8161165e565b5060ca80546001600160a01b0319166001600160a01b0392909216919091179055565b5f6109e98161165e565b61068482611717565b5f6109fc8161165e565b61068482611789565b5f806001600160a01b03851615610a1c5784610a29565b60cd546001600160a01b03165b90505f805f836001600160a01b0316634903b0d187600f0b6040518263ffffffff1660e01b8152600401610a5f91815260200190565b602060405180830381865afa158015610a7a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a9e9190612355565b90505f8a81610ab7878b8b670de0b6b3a76400006117f8565b90508d811015610ad0575f975050505050505050610bd0565b8b5f03610af0576040516329939eaf60e21b815260040160405180910390fd5b6002610afc8786612380565b610b069190612393565b9450610b14878b8b886117f8565b92508d831115610b3057610b29856001612380565b9550610b3e565b610b3b6001866123b2565b93505b610b4960018d6123b2565b9b508d831015610b89578d610b6684670de0b6b3a76400006123c5565b610b709190612393565b610b8290670de0b6b3a76400006123b2565b9150610bb4565b670de0b6b3a76400008e610b9d85836123c5565b610ba79190612393565b610bb191906123b2565b91505b8c821015610bcb5784975050505050505050610bd0565b610ad0565b9695505050505050565b5f610bed6098546001600160a01b031690565b905090565b5f806001600160a01b03861615610c095785610c16565b60cd546001600160a01b03165b9050610bd0818686866117f8565b5f9182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b5f610c588161165e565b5060c980546001600160a01b0319166001600160a01b0392909216919091179055565b6098545f90600160d01b900465ffffffffffff168015158015610ca657504265ffffffffffff821610155b610cb1575f80610cc5565b609854600160a01b900465ffffffffffff16815b915091509091565b5f8083610cda8688612380565b610ce49190612380565b60c9546040516323b872dd60e01b8152336004820152306024820152604481018390529192505f916001600160a01b03909116906323b872dd906064016020604051808303815f875af1158015610d3d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d619190612336565b508615610e365760cc54604051632770a7eb60e21b81525f916001600160a01b031690639dc29fac90610d9a9033908c9060040161231d565b6020604051808303815f875af1158015610db6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dda9190612355565b60cc5460405163db006a7560e01b8152600481018390529192506001600160a01b03169063db006a75906024015f604051808303815f87803b158015610e1e575f80fd5b505af1158015610e30573d5f803e3d5ffd5b50505050505b8515610eb05760cc54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac90610e6e9033908a9060040161231d565b6020604051808303815f875af1158015610e8a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610eae9190612355565b505b8415610f3f5760cd5460405163ddc1f59d60e01b8152600160048201525f602482015260448101879052606481018690523360848201526001600160a01b039091169063ddc1f59d9060a4016020604051808303815f875af1158015610f18573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f3c9190612355565b90505b6040513381528190879089907f608dc34fb986fe5144e99748164eac418485bd208817a72a15162f9208312bea9060200160405180910390a4610f828188612380565b979650505050505050565b5f54610100900460ff1615808015610fab57505f54600160ff909116105b80610fc45750303b158015610fc457505f5460ff166001145b6110275760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610671565b5f805460ff191660011790558015611048575f805461ff0019166101001790555b60cb80546001600160a01b03808a166001600160a01b03199283161790925560cc805489841690831617905560cd8054888416908316811790915560ca805487851690841617905560c98054938816939092169290921790551561111b5760ca5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b3906110d99088905f199060040161231d565b6020604051808303815f875af11580156110f5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111199190612336565b505b60ca5460cb5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392611152929116905f199060040161231d565b6020604051808303815f875af115801561116e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111929190612336565b5060c95460cc5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926111ca929116905f199060040161231d565b6020604051808303815f875af11580156111e6573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061120a9190612336565b5060c95460405163095ea7b360e01b81526001600160a01b039091169063095ea7b39061123e9088905f199060040161231d565b6020604051808303815f875af115801561125a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061127e9190612336565b506112895f83611948565b80156112ce575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b6098545f90600160d01b900465ffffffffffff16801515801561130157504265ffffffffffff8216105b61131c57609754600160d01b900465ffffffffffff1661132f565b609854600160a01b900465ffffffffffff165b91505090565b5f61133e6113b2565b509050336001600160a01b038216146113aa5760405162461bcd60e51b815260206004820152602860248201527f416363657373436f6e74726f6c3a2070656e64696e672061646d696e206d75736044820152671d081858d8d95c1d60c21b6064820152608401610671565b610606611978565b6097546001600160a01b03811691600160a01b90910465ffffffffffff1690565b816114465760405162461bcd60e51b815260206004820152603760248201527f416363657373436f6e74726f6c3a2063616e2774206469726563746c7920726560448201527f766f6b652064656661756c742061646d696e20726f6c650000000000000000006064820152608401610671565b6106848282611a40565b5f61145a8161165e565b610606611a64565b60ca546040516323b872dd60e01b8152336004820152306024820152604481018590525f916001600160a01b0316906323b872dd906064016020604051808303815f875af11580156114b6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114da9190612336565b505f806114e785876123b2565b905084156115785760cd5460405163ddc1f59d60e01b81525f60048201526001602482015260448101879052606481018690523360848201526001600160a01b039091169063ddc1f59d9060a4016020604051808303815f875af1158015611551573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115759190612355565b91505b80156115f25760cb546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906115b0903390859060040161231d565b6020604051808303815f875af11580156115cc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115f09190612336565b505b6040518190839033907fe00c8007db5f3df9e7ddad98d6efd78ef0d84277932892e709a79916dfd90fc1905f90a4610bd08282612380565b5f6001600160e01b03198216637965db0b60e01b14806105ee57506301ffc9a760e01b6001600160e01b03198316146105ee565b6106068133611a6e565b6116725f80611ac7565b565b5f8281526065602052604090206001015461168e8161165e565b6116988383611b86565b505050565b6001600160a01b038116331461170d5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610671565b6106848282611c2f565b5f6117206112d7565b61172942611c6a565b61173391906123dc565b905061173f8282611cd4565b60405165ffffffffffff821681526001600160a01b038316907f3377dc44241e779dd06afab5b788a35ca5f3b778836e2990bdb26a2a4b2e5ed69060200160405180910390a25050565b5f61179382611d51565b61179c42611c6a565b6117a691906123dc565b90506117b28282611ac7565b6040805165ffffffffffff8085168252831660208201527ff1038c18cf84a56e432fdbfaf746924b7ea511dfe03a6506a0ceba4888788d9b910160405180910390a15050565b5f818161180d82670de0b6b3a7640000612380565b604051635e0d443f60e01b8152600f88810b600483015287900b6024820152604481018490529091505f906001600160a01b03891690635e0d443f90606401602060405180830381865afa158015611867573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061188b9190612355565b604051635e0d443f60e01b8152600f89810b600483015288900b6024820152604481018490529091505f906001600160a01b038a1690635e0d443f90606401602060405180830381865afa1580156118e5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119099190612355565b905061191584846123b2565b61191f83836123b2565b61193190670de0b6b3a76400006123c5565b61193b9190612393565b9998505050505050505050565b5f54610100900460ff1661196e5760405162461bcd60e51b815260040161067190612402565b6106848282611d9f565b5f806119826113b2565b915091506119978165ffffffffffff16151590565b80156119aa57504265ffffffffffff8216105b611a075760405162461bcd60e51b815260206004820152602860248201527f416363657373436f6e74726f6c3a207472616e736665722064656c6179206e6f6044820152671d081c185cdcd95960c21b6064820152608401610671565b611a225f611a1d6098546001600160a01b031690565b611c2f565b611a2c5f83611b86565b5050609780546001600160d01b0319169055565b5f82815260656020526040902060010154611a5a8161165e565b6116988383611c2f565b6116725f80611cd4565b611a788282610c24565b61068457611a8581611e44565b611a90836020611e56565b604051602001611aa192919061246f565b60408051601f198184030181529082905262461bcd60e51b8252610671916004016124e3565b609854600160d01b900465ffffffffffff168015611b49574265ffffffffffff82161015611b2057609854609780546001600160d01b0316600160a01b90920465ffffffffffff16600160d01b02919091179055611b49565b6040517f2b1fa2edafe6f7b9e97c1a9e0c3660e645beb2dcaa2d45bdbf9beaf5472e1ec5905f90a15b50609880546001600160a01b0316600160a01b65ffffffffffff948516026001600160d01b031617600160d01b9290931691909102919091179055565b81611c25575f611b9e6098546001600160a01b031690565b6001600160a01b031614611c095760405162461bcd60e51b815260206004820152602c60248201527f416363657373436f6e74726f6c3a2064656661756c742061646d696e20616c7260448201526b1958591e4819dc985b9d195960a21b6064820152608401610671565b609880546001600160a01b0319166001600160a01b0383161790555b6106848282611fec565b81158015611c4a57506098546001600160a01b038281169116145b15611c6057609880546001600160a01b03191690555b6106848282612071565b5f65ffffffffffff821115611cd05760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b6064820152608401610671565b5090565b5f611cdd6113b2565b6097805465ffffffffffff8616600160a01b026001600160d01b03199091166001600160a01b038816171790559150611d1f90508165ffffffffffff16151590565b15611698576040517f8886ebfc4259abdbc16601dd8fb5678e54878f47b3c34836cfc51154a9605109905f90a1505050565b5f80611d5b6112d7565b90508065ffffffffffff168365ffffffffffff1611611d8357611d7e8382612515565b611d98565b611d9865ffffffffffff8416620697806120d7565b9392505050565b5f54610100900460ff16611dc55760405162461bcd60e51b815260040161067190612402565b6001600160a01b038116611e1b5760405162461bcd60e51b815260206004820152601e60248201527f416363657373436f6e74726f6c3a20302064656661756c742061646d696e00006044820152606401610671565b609780546001600160d01b0316600160d01b65ffffffffffff8516021790556106845f82611b86565b60606105ee6001600160a01b03831660145b60605f611e648360026123c5565b611e6f906002612380565b67ffffffffffffffff811115611e8757611e87612534565b6040519080825280601f01601f191660200182016040528015611eb1576020820181803683370190505b509050600360fc1b815f81518110611ecb57611ecb612548565b60200101906001600160f81b03191690815f1a905350600f60fb1b81600181518110611ef957611ef9612548565b60200101906001600160f81b03191690815f1a9053505f611f1b8460026123c5565b611f26906001612380565b90505b6001811115611f9d576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611f5a57611f5a612548565b1a60f81b828281518110611f7057611f70612548565b60200101906001600160f81b03191690815f1a90535060049490941c93611f968161255c565b9050611f29565b508315611d985760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610671565b611ff68282610c24565b610684575f8281526065602090815260408083206001600160a01b03851684529091529020805460ff1916600117905561202d3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61207b8282610c24565b15610684575f8281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b5f8183106120e55781611d98565b5090919050565b5f602082840312156120fc575f80fd5b81356001600160e01b031981168114611d98575f80fd5b5f60208284031215612123575f80fd5b5035919050565b80356001600160a01b0381168114612140575f80fd5b919050565b5f8060408385031215612156575f80fd5b823591506121666020840161212a565b90509250929050565b5f6020828403121561217f575f80fd5b611d988261212a565b5f60208284031215612198575f80fd5b813565ffffffffffff81168114611d98575f80fd5b8035600f81900b8114612140575f80fd5b5f805f805f8060c087890312156121d3575f80fd5b8635955060208701359450604087013593506121f16060880161212a565b92506121ff608088016121ad565b915061220d60a088016121ad565b90509295509295509295565b5f805f806080858703121561222c575f80fd5b6122358561212a565b9350612243602086016121ad565b9250612251604086016121ad565b9396929550929360600135925050565b5f805f8060808587031215612274575f80fd5b5050823594602084013594506040840135936060013592509050565b5f805f805f8060c087890312156122a5575f80fd5b6122ae8761212a565b95506122bc6020880161212a565b94506122ca6040880161212a565b93506122d86060880161212a565b92506122e66080880161212a565b915061220d60a0880161212a565b5f805f60608486031215612306575f80fd5b505081359360208301359350604090920135919050565b6001600160a01b03929092168252602082015260400190565b5f60208284031215612346575f80fd5b81518015158114611d98575f80fd5b5f60208284031215612365575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156105ee576105ee61236c565b5f826123ad57634e487b7160e01b5f52601260045260245ffd5b500490565b818103818111156105ee576105ee61236c565b80820281158282048414176105ee576105ee61236c565b65ffffffffffff8181168382160190808211156123fb576123fb61236c565b5092915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b5f5b8381101561246757818101518382015260200161244f565b50505f910152565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081525f83516124a681601785016020880161244d565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516124d781602884016020880161244d565b01602801949350505050565b602081525f825180602084015261250181604085016020870161244d565b601f01601f19169190910160400192915050565b65ffffffffffff8281168282160390808211156123fb576123fb61236c565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b5f8161256a5761256a61236c565b505f19019056fea264697066735822122099625c120b043a6447f1871d5a061adad53c57e99f1578bf3fd5a3e02048df4564736f6c63430008140033",
    "sourceMap": "993:8331:188:-:0;;;1195:54;;;;;;;;;-1:-1:-1;1220:22:188;:20;:22::i;:::-;993:8331;;5939:280:77;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:77;;216:2:230;5998:66:77;;;198:21:230;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:230;;;338:37;392:19;;5998:66:77;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:77;6140:15;6125:30;;;;;;6174:28;;564:36:230;;;6174:28:77;;552:2:230;537:18;6174:28:77;;;;;;;6074:139;5939:280::o;422:184:230:-;993:8331:188;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f80fd5b5060043610610229575f3560e01c806391d148541161012a578063cefc1429116100b4578063e63ab1e911610079578063e63ab1e91461052f578063e82748ca14610556578063ec7245b01461057d578063ec87621c14610590578063f025b209146105b7575f80fd5b8063cefc1429146104b7578063cf6eefb7146104bf578063d5391393146104ed578063d547741f14610514578063d602b9fd14610527575f80fd5b8063a217fddf116100fa578063a217fddf1461045b578063cc2a9a5b14610462578063cc8463c814610475578063ccc574901461047d578063cde4efa9146104a4575f80fd5b806391d14854146103fb5780639c3721bc1461040e578063a1eda53c14610421578063a1fed9dc14610448575f80fd5b80633cee0be3116101b657806383eb70e51161017b57806383eb70e51461039557806384ef8ffc146103bc5780638867ed80146103cd5780638da5cb5b146103e05780638dbff07a146103e8575f80fd5b80633cee0be3146103365780634437152a14610349578063470887261461035c578063634e93da1461036f578063649a5ec714610382575f80fd5b8063248a9ca3116101fc578063248a9ca3146102a657806327810b6e146102d6578063282c51f3146102e95780632f2ff15d1461031057806336568abe14610323575f80fd5b806301ffc9a71461022d578063022d63fb1461025557806307546172146102715780630aa6220b1461029c575b5f80fd5b61024061023b3660046120ec565b6105ca565b60405190151581526020015b60405180910390f35b620697805b60405165ffffffffffff909116815260200161024c565b60cb54610284906001600160a01b031681565b6040516001600160a01b03909116815260200161024c565b6102a46105f4565b005b6102c86102b4366004612113565b5f9081526065602052604090206001015490565b60405190815260200161024c565b60cc54610284906001600160a01b031681565b6102c87f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b6102a461031e366004612145565b610609565b6102a4610331366004612145565b610688565b60cd54610284906001600160a01b031681565b6102a461035736600461216f565b610771565b6102a461036a36600461216f565b6109b2565b6102a461037d36600461216f565b6109df565b6102a4610390366004612188565b6109f2565b6102c87f5fde63b561377d1441afa201ff619faac2ff8fed70a7fbdbe7a5cb07768c0b7581565b6098546001600160a01b0316610284565b6102c86103db3660046121be565b610a05565b610284610bda565b6102c86103f6366004612219565b610bf2565b610240610409366004612145565b610c24565b6102a461041c36600461216f565b610c4e565b610429610c7b565b6040805165ffffffffffff93841681529290911660208301520161024c565b6102c8610456366004612261565b610ccd565b6102c85f81565b6102a4610470366004612290565b610f8d565b61025a6112d7565b6102c87f7935bd0ae54bc31f548c14dba4d37c5c64b3f8ca900cb468fb8abd54d5894f5581565b60ca54610284906001600160a01b031681565b6102a4611335565b6104c76113b2565b604080516001600160a01b03909316835265ffffffffffff90911660208301520161024c565b6102c87f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102a4610522366004612145565b6113d3565b6102a4611450565b6102c87f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6102c87fb6edeab710812f8917b946c63c63b900f456e6a1abea66a90b1f8277f035664b81565b6102c861058b3660046122f4565b611462565b6102c87f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0881565b60c954610284906001600160a01b031681565b5f6001600160e01b031982166318a4c3c360e11b14806105ee57506105ee8261162a565b92915050565b5f6105fe8161165e565b610606611668565b50565b8161067a5760405162461bcd60e51b815260206004820152603660248201527f416363657373436f6e74726f6c3a2063616e2774206469726563746c79206772604482015275616e742064656661756c742061646d696e20726f6c6560501b60648201526084015b60405180910390fd5b6106848282611674565b5050565b811580156106a357506098546001600160a01b038281169116145b15610767575f806106b26113b2565b90925090506001600160a01b0382161580156106d5575065ffffffffffff811615155b80156106e857504265ffffffffffff8216105b6107525760405162461bcd60e51b815260206004820152603560248201527f416363657373436f6e74726f6c3a206f6e6c792063616e2072656e6f756e636560448201527420696e2074776f2064656c6179656420737465707360581b6064820152608401610671565b50506097805465ffffffffffff60a01b191690555b610684828261169d565b5f61077b8161165e565b60cd546001600160a01b03161561087b5760ca5460cd5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926107c2929116905f9060040161231d565b6020604051808303815f875af11580156107de573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108029190612336565b5060c95460cd5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392610839929116905f9060040161231d565b6020604051808303815f875af1158015610855573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108799190612336565b505b60cd80546001600160a01b0319166001600160a01b0384811691821790925560ca5460405163095ea7b360e01b815292169163095ea7b3916108c2915f199060040161231d565b6020604051808303815f875af11580156108de573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109029190612336565b5060c95460cd5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39261093a929116905f199060040161231d565b6020604051808303815f875af1158015610956573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061097a9190612336565b506040516001600160a01b038316907f6876f036a9b507fa18967bfbe1cf9e2a93c8b09eb7a3bcbe0a741c428b535cf8905f90a25050565b5f6109bc8161165e565b5060ca80546001600160a01b0319166001600160a01b0392909216919091179055565b5f6109e98161165e565b61068482611717565b5f6109fc8161165e565b61068482611789565b5f806001600160a01b03851615610a1c5784610a29565b60cd546001600160a01b03165b90505f805f836001600160a01b0316634903b0d187600f0b6040518263ffffffff1660e01b8152600401610a5f91815260200190565b602060405180830381865afa158015610a7a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a9e9190612355565b90505f8a81610ab7878b8b670de0b6b3a76400006117f8565b90508d811015610ad0575f975050505050505050610bd0565b8b5f03610af0576040516329939eaf60e21b815260040160405180910390fd5b6002610afc8786612380565b610b069190612393565b9450610b14878b8b886117f8565b92508d831115610b3057610b29856001612380565b9550610b3e565b610b3b6001866123b2565b93505b610b4960018d6123b2565b9b508d831015610b89578d610b6684670de0b6b3a76400006123c5565b610b709190612393565b610b8290670de0b6b3a76400006123b2565b9150610bb4565b670de0b6b3a76400008e610b9d85836123c5565b610ba79190612393565b610bb191906123b2565b91505b8c821015610bcb5784975050505050505050610bd0565b610ad0565b9695505050505050565b5f610bed6098546001600160a01b031690565b905090565b5f806001600160a01b03861615610c095785610c16565b60cd546001600160a01b03165b9050610bd0818686866117f8565b5f9182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b5f610c588161165e565b5060c980546001600160a01b0319166001600160a01b0392909216919091179055565b6098545f90600160d01b900465ffffffffffff168015158015610ca657504265ffffffffffff821610155b610cb1575f80610cc5565b609854600160a01b900465ffffffffffff16815b915091509091565b5f8083610cda8688612380565b610ce49190612380565b60c9546040516323b872dd60e01b8152336004820152306024820152604481018390529192505f916001600160a01b03909116906323b872dd906064016020604051808303815f875af1158015610d3d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d619190612336565b508615610e365760cc54604051632770a7eb60e21b81525f916001600160a01b031690639dc29fac90610d9a9033908c9060040161231d565b6020604051808303815f875af1158015610db6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dda9190612355565b60cc5460405163db006a7560e01b8152600481018390529192506001600160a01b03169063db006a75906024015f604051808303815f87803b158015610e1e575f80fd5b505af1158015610e30573d5f803e3d5ffd5b50505050505b8515610eb05760cc54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac90610e6e9033908a9060040161231d565b6020604051808303815f875af1158015610e8a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610eae9190612355565b505b8415610f3f5760cd5460405163ddc1f59d60e01b8152600160048201525f602482015260448101879052606481018690523360848201526001600160a01b039091169063ddc1f59d9060a4016020604051808303815f875af1158015610f18573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f3c9190612355565b90505b6040513381528190879089907f608dc34fb986fe5144e99748164eac418485bd208817a72a15162f9208312bea9060200160405180910390a4610f828188612380565b979650505050505050565b5f54610100900460ff1615808015610fab57505f54600160ff909116105b80610fc45750303b158015610fc457505f5460ff166001145b6110275760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610671565b5f805460ff191660011790558015611048575f805461ff0019166101001790555b60cb80546001600160a01b03808a166001600160a01b03199283161790925560cc805489841690831617905560cd8054888416908316811790915560ca805487851690841617905560c98054938816939092169290921790551561111b5760ca5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b3906110d99088905f199060040161231d565b6020604051808303815f875af11580156110f5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111199190612336565b505b60ca5460cb5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392611152929116905f199060040161231d565b6020604051808303815f875af115801561116e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111929190612336565b5060c95460cc5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926111ca929116905f199060040161231d565b6020604051808303815f875af11580156111e6573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061120a9190612336565b5060c95460405163095ea7b360e01b81526001600160a01b039091169063095ea7b39061123e9088905f199060040161231d565b6020604051808303815f875af115801561125a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061127e9190612336565b506112895f83611948565b80156112ce575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b6098545f90600160d01b900465ffffffffffff16801515801561130157504265ffffffffffff8216105b61131c57609754600160d01b900465ffffffffffff1661132f565b609854600160a01b900465ffffffffffff165b91505090565b5f61133e6113b2565b509050336001600160a01b038216146113aa5760405162461bcd60e51b815260206004820152602860248201527f416363657373436f6e74726f6c3a2070656e64696e672061646d696e206d75736044820152671d081858d8d95c1d60c21b6064820152608401610671565b610606611978565b6097546001600160a01b03811691600160a01b90910465ffffffffffff1690565b816114465760405162461bcd60e51b815260206004820152603760248201527f416363657373436f6e74726f6c3a2063616e2774206469726563746c7920726560448201527f766f6b652064656661756c742061646d696e20726f6c650000000000000000006064820152608401610671565b6106848282611a40565b5f61145a8161165e565b610606611a64565b60ca546040516323b872dd60e01b8152336004820152306024820152604481018590525f916001600160a01b0316906323b872dd906064016020604051808303815f875af11580156114b6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114da9190612336565b505f806114e785876123b2565b905084156115785760cd5460405163ddc1f59d60e01b81525f60048201526001602482015260448101879052606481018690523360848201526001600160a01b039091169063ddc1f59d9060a4016020604051808303815f875af1158015611551573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115759190612355565b91505b80156115f25760cb546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906115b0903390859060040161231d565b6020604051808303815f875af11580156115cc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115f09190612336565b505b6040518190839033907fe00c8007db5f3df9e7ddad98d6efd78ef0d84277932892e709a79916dfd90fc1905f90a4610bd08282612380565b5f6001600160e01b03198216637965db0b60e01b14806105ee57506301ffc9a760e01b6001600160e01b03198316146105ee565b6106068133611a6e565b6116725f80611ac7565b565b5f8281526065602052604090206001015461168e8161165e565b6116988383611b86565b505050565b6001600160a01b038116331461170d5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610671565b6106848282611c2f565b5f6117206112d7565b61172942611c6a565b61173391906123dc565b905061173f8282611cd4565b60405165ffffffffffff821681526001600160a01b038316907f3377dc44241e779dd06afab5b788a35ca5f3b778836e2990bdb26a2a4b2e5ed69060200160405180910390a25050565b5f61179382611d51565b61179c42611c6a565b6117a691906123dc565b90506117b28282611ac7565b6040805165ffffffffffff8085168252831660208201527ff1038c18cf84a56e432fdbfaf746924b7ea511dfe03a6506a0ceba4888788d9b910160405180910390a15050565b5f818161180d82670de0b6b3a7640000612380565b604051635e0d443f60e01b8152600f88810b600483015287900b6024820152604481018490529091505f906001600160a01b03891690635e0d443f90606401602060405180830381865afa158015611867573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061188b9190612355565b604051635e0d443f60e01b8152600f89810b600483015288900b6024820152604481018490529091505f906001600160a01b038a1690635e0d443f90606401602060405180830381865afa1580156118e5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119099190612355565b905061191584846123b2565b61191f83836123b2565b61193190670de0b6b3a76400006123c5565b61193b9190612393565b9998505050505050505050565b5f54610100900460ff1661196e5760405162461bcd60e51b815260040161067190612402565b6106848282611d9f565b5f806119826113b2565b915091506119978165ffffffffffff16151590565b80156119aa57504265ffffffffffff8216105b611a075760405162461bcd60e51b815260206004820152602860248201527f416363657373436f6e74726f6c3a207472616e736665722064656c6179206e6f6044820152671d081c185cdcd95960c21b6064820152608401610671565b611a225f611a1d6098546001600160a01b031690565b611c2f565b611a2c5f83611b86565b5050609780546001600160d01b0319169055565b5f82815260656020526040902060010154611a5a8161165e565b6116988383611c2f565b6116725f80611cd4565b611a788282610c24565b61068457611a8581611e44565b611a90836020611e56565b604051602001611aa192919061246f565b60408051601f198184030181529082905262461bcd60e51b8252610671916004016124e3565b609854600160d01b900465ffffffffffff168015611b49574265ffffffffffff82161015611b2057609854609780546001600160d01b0316600160a01b90920465ffffffffffff16600160d01b02919091179055611b49565b6040517f2b1fa2edafe6f7b9e97c1a9e0c3660e645beb2dcaa2d45bdbf9beaf5472e1ec5905f90a15b50609880546001600160a01b0316600160a01b65ffffffffffff948516026001600160d01b031617600160d01b9290931691909102919091179055565b81611c25575f611b9e6098546001600160a01b031690565b6001600160a01b031614611c095760405162461bcd60e51b815260206004820152602c60248201527f416363657373436f6e74726f6c3a2064656661756c742061646d696e20616c7260448201526b1958591e4819dc985b9d195960a21b6064820152608401610671565b609880546001600160a01b0319166001600160a01b0383161790555b6106848282611fec565b81158015611c4a57506098546001600160a01b038281169116145b15611c6057609880546001600160a01b03191690555b6106848282612071565b5f65ffffffffffff821115611cd05760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b6064820152608401610671565b5090565b5f611cdd6113b2565b6097805465ffffffffffff8616600160a01b026001600160d01b03199091166001600160a01b038816171790559150611d1f90508165ffffffffffff16151590565b15611698576040517f8886ebfc4259abdbc16601dd8fb5678e54878f47b3c34836cfc51154a9605109905f90a1505050565b5f80611d5b6112d7565b90508065ffffffffffff168365ffffffffffff1611611d8357611d7e8382612515565b611d98565b611d9865ffffffffffff8416620697806120d7565b9392505050565b5f54610100900460ff16611dc55760405162461bcd60e51b815260040161067190612402565b6001600160a01b038116611e1b5760405162461bcd60e51b815260206004820152601e60248201527f416363657373436f6e74726f6c3a20302064656661756c742061646d696e00006044820152606401610671565b609780546001600160d01b0316600160d01b65ffffffffffff8516021790556106845f82611b86565b60606105ee6001600160a01b03831660145b60605f611e648360026123c5565b611e6f906002612380565b67ffffffffffffffff811115611e8757611e87612534565b6040519080825280601f01601f191660200182016040528015611eb1576020820181803683370190505b509050600360fc1b815f81518110611ecb57611ecb612548565b60200101906001600160f81b03191690815f1a905350600f60fb1b81600181518110611ef957611ef9612548565b60200101906001600160f81b03191690815f1a9053505f611f1b8460026123c5565b611f26906001612380565b90505b6001811115611f9d576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611f5a57611f5a612548565b1a60f81b828281518110611f7057611f70612548565b60200101906001600160f81b03191690815f1a90535060049490941c93611f968161255c565b9050611f29565b508315611d985760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610671565b611ff68282610c24565b610684575f8281526065602090815260408083206001600160a01b03851684529091529020805460ff1916600117905561202d3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61207b8282610c24565b15610684575f8281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b5f8183106120e55781611d98565b5090919050565b5f602082840312156120fc575f80fd5b81356001600160e01b031981168114611d98575f80fd5b5f60208284031215612123575f80fd5b5035919050565b80356001600160a01b0381168114612140575f80fd5b919050565b5f8060408385031215612156575f80fd5b823591506121666020840161212a565b90509250929050565b5f6020828403121561217f575f80fd5b611d988261212a565b5f60208284031215612198575f80fd5b813565ffffffffffff81168114611d98575f80fd5b8035600f81900b8114612140575f80fd5b5f805f805f8060c087890312156121d3575f80fd5b8635955060208701359450604087013593506121f16060880161212a565b92506121ff608088016121ad565b915061220d60a088016121ad565b90509295509295509295565b5f805f806080858703121561222c575f80fd5b6122358561212a565b9350612243602086016121ad565b9250612251604086016121ad565b9396929550929360600135925050565b5f805f8060808587031215612274575f80fd5b5050823594602084013594506040840135936060013592509050565b5f805f805f8060c087890312156122a5575f80fd5b6122ae8761212a565b95506122bc6020880161212a565b94506122ca6040880161212a565b93506122d86060880161212a565b92506122e66080880161212a565b915061220d60a0880161212a565b5f805f60608486031215612306575f80fd5b505081359360208301359350604090920135919050565b6001600160a01b03929092168252602082015260400190565b5f60208284031215612346575f80fd5b81518015158114611d98575f80fd5b5f60208284031215612365575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156105ee576105ee61236c565b5f826123ad57634e487b7160e01b5f52601260045260245ffd5b500490565b818103818111156105ee576105ee61236c565b80820281158282048414176105ee576105ee61236c565b65ffffffffffff8181168382160190808211156123fb576123fb61236c565b5092915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b5f5b8381101561246757818101518382015260200161244f565b50505f910152565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081525f83516124a681601785016020880161244d565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516124d781602884016020880161244d565b01602801949350505050565b602081525f825180602084015261250181604085016020870161244d565b601f01601f19169190910160400192915050565b65ffffffffffff8281168282160390808211156123fb576123fb61236c565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b5f8161256a5761256a61236c565b505f19019056fea264697066735822122099625c120b043a6447f1871d5a061adad53c57e99f1578bf3fd5a3e02048df4564736f6c63430008140033",
    "sourceMap": "993:8331:188:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2929:230:67;;;;;;:::i;:::-;;:::i;:::-;;;470:14:230;;463:22;445:41;;433:2;418:18;2929:230:67;;;;;;;;8070:108;8165:6;8070:108;;;671:14:230;659:27;;;641:46;;629:2;614:18;8070:108:67;497:196:230;1100:22:188;;;;;-1:-1:-1;;;;;1100:22:188;;;;;;-1:-1:-1;;;;;880:32:230;;;862:51;;850:2;835:18;1100:22:188;698:221:230;11184:126:67;;;:::i;:::-;;4834:129:68;;;;;;:::i;:::-;4908:7;4934:12;;;:6;:12;;;;;:22;;;;4834:129;;;;1255:25:230;;;1243:2;1228:18;4834:129:68;1109:177:230;1128:22:188;;;;;-1:-1:-1;;;;;1128:22:188;;;831:62:192;;869:24;831:62;;3471:277:67;;;;;;:::i;:::-;;:::i;4813:605::-;;;;;;:::i;:::-;;:::i;1156:32:188:-;;;;;-1:-1:-1;;;;;1156:32:188;;;8619:469;;;;;;:::i;:::-;;:::i;9094:107::-;;;;;;:::i;:::-;;:::i;8383:150:67:-;;;;;;:::i;:::-;;:::i;10531:145::-;;;;;;:::i;:::-;;:::i;691:64:192:-;;730:25;691:64;;6967:106:67;7046:20;;-1:-1:-1;;;;;7046:20:67;6967:106;;7086:1386:188;;;;;;:::i;:::-;;:::i;3215:93:67:-;;;:::i;5269:267:188:-;;;;;;:::i;:::-;;:::i;3329:145:68:-;;;;;;:::i;:::-;;:::i;9207:115:188:-;;;;;;:::i;:::-;;:::i;7725:261:67:-;;;:::i;:::-;;;;4342:14:230;4383:15;;;4365:34;;4435:15;;;;4430:2;4415:18;;4408:43;4305:18;7725:261:67;4162:295:230;2914:873:188;;;;;;:::i;:::-;;:::i;2450:49:68:-;;2495:4;2450:49;;1255:832:188;;;;;;:::i;:::-;;:::i;7412:229:67:-;;;:::i;464:66:192:-;;504:26;464:66;;1076:18:188;;;;;-1:-1:-1;;;;;1076:18:188;;;9494:254:67;;;:::i;7157:171::-;;;:::i;:::-;;;;-1:-1:-1;;;;;5830:32:230;;;5812:51;;5911:14;5899:27;;;5894:2;5879:18;;5872:55;5785:18;7157:171:67;5640:293:230;762:62:192;;800:24;762:62;;3848:280:67;;;;;;:::i;:::-;;:::i;9043:128::-;;;:::i;900:62:192:-;;938:24;900:62;;608:76;;653:31;608:76;;4317:639:188;;;;;;:::i;:::-;;:::i;537:64:192:-;;576:25;537:64;;1050:20:188;;;;;-1:-1:-1;;;;;1050:20:188;;;2929:230:67;3014:4;-1:-1:-1;;;;;;3037:75:67;;-1:-1:-1;;;3037:75:67;;:115;;;3116:36;3140:11;3116:23;:36::i;:::-;3030:122;2929:230;-1:-1:-1;;2929:230:67:o;11184:126::-;2495:4:68;2928:16;2495:4;2928:10;:16::i;:::-;11275:28:67::1;:26;:28::i;:::-;11184:126:::0;:::o;3471:277::-;3616:4;3608:93;;;;-1:-1:-1;;;3608:93:67;;6461:2:230;3608:93:67;;;6443:21:230;6500:2;6480:18;;;6473:30;6539:34;6519:18;;;6512:62;-1:-1:-1;;;6590:18:230;;;6583:52;6652:19;;3608:93:67;;;;;;;;;3711:30;3727:4;3733:7;3711:15;:30::i;:::-;3471:277;;:::o;4813:605::-;4957:26;;:55;;;;-1:-1:-1;7046:20:67;;-1:-1:-1;;;;;4987:25:67;;;7046:20;;4987:25;4957:55;4953:416;;;5029:23;5054:15;5073:21;:19;:21::i;:::-;5028:66;;-1:-1:-1;5028:66:67;-1:-1:-1;;;;;;5133:29:67;;;:57;;;;-1:-1:-1;14825:13:67;;;;;5166:24;5133:89;;;;-1:-1:-1;15053:15:67;15042:26;;;;5194:28;5108:201;;;;-1:-1:-1;;;5108:201:67;;6884:2:230;5108:201:67;;;6866:21:230;6923:2;6903:18;;;6896:30;6962:34;6942:18;;;6935:62;-1:-1:-1;;;7013:18:230;;;7006:51;7074:19;;5108:201:67;6682:417:230;5108:201:67;-1:-1:-1;;5330:28:67;5323:35;;-1:-1:-1;;;;5323:35:67;;;4953:416;5378:33;5397:4;5403:7;5378:18;:33::i;8619:469:188:-;2495:4:68;2928:16;2495:4;2928:10;:16::i;:::-;8712:13:188::1;::::0;-1:-1:-1;;;;;8712:13:188::1;8704:36:::0;8700:161:::1;;8756:4;::::0;8777:13:::1;::::0;8756:39:::1;::::0;-1:-1:-1;;;8756:39:188;;-1:-1:-1;;;;;8756:4:188;;::::1;::::0;:12:::1;::::0;:39:::1;::::0;8777:13;::::1;::::0;8756:4:::1;::::0;:39:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;8809:6:188::1;::::0;8832:13:::1;::::0;8809:41:::1;::::0;-1:-1:-1;;;8809:41:188;;-1:-1:-1;;;;;8809:6:188;;::::1;::::0;:14:::1;::::0;:41:::1;::::0;8832:13;::::1;::::0;8809:6:::1;::::0;:41:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8700:161;8871:13;:34:::0;;-1:-1:-1;;;;;;8871:34:188::1;-1:-1:-1::0;;;;;8871:34:188;;::::1;::::0;;::::1;::::0;;;8916:4:::1;::::0;:55:::1;::::0;-1:-1:-1;;;8916:55:188;;:4;::::1;::::0;:12:::1;::::0;:55:::1;::::0;-1:-1:-1;;8953:17:188;8916:55:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;8981:6:188::1;::::0;9004:13:::1;::::0;8981:57:::1;::::0;-1:-1:-1;;;8981:57:188;;-1:-1:-1;;;;;8981:6:188;;::::1;::::0;:14:::1;::::0;:57:::1;::::0;9004:13;::::1;::::0;-1:-1:-1;;9020:17:188;8981:57:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;9054:27:188::1;::::0;-1:-1:-1;;;;;9054:27:188;::::1;::::0;::::1;::::0;;;::::1;8619:469:::0;;:::o;9094:107::-;2495:4:68;2928:16;2495:4;2928:10;:16::i;:::-;-1:-1:-1;9174:4:188::1;:20:::0;;-1:-1:-1;;;;;;9174:20:188::1;-1:-1:-1::0;;;;;9174:20:188;;;::::1;::::0;;;::::1;::::0;;9094:107::o;8383:150:67:-;2495:4:68;2928:16;2495:4;2928:10;:16::i;:::-;8490:36:67::1;8517:8;8490:26;:36::i;10531:145::-:0;2495:4:68;2928:16;2495:4;2928:10;:16::i;:::-;10635:34:67::1;10660:8;10635:24;:34::i;7086:1386:188:-:0;7247:7;;-1:-1:-1;;;;;7284:19:188;;;:52;;7331:5;7284:52;;;7314:13;;-1:-1:-1;;;;;7314:13:188;7284:52;7269:67;;7346:13;7369:11;7477:12;7504:4;-1:-1:-1;;;;;7492:26:188;;7534:8;7527:16;;7492:53;;;;;;;;;;;;;1255:25:230;;1243:2;1228:18;;1109:177;7492:53:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7477:68;-1:-1:-1;7555:13:188;7601:11;7555:13;7643:48;7657:4;7663:7;7672:8;7682;7643:13;:48::i;:::-;7622:69;;7719:11;7706:10;:24;7702:63;;;7753:1;7746:8;;;;;;;;;;;7702:63;7806:8;7818:1;7806:13;7802:75;;7846:16;;-1:-1:-1;;;7846:16:188;;;;;;;;;;;7802:75;7911:1;7897:10;7902:5;7897:4;:10;:::i;:::-;7896:16;;;;:::i;:::-;7890:22;;7934:43;7948:4;7954:7;7963:8;7973:3;7934:13;:43::i;:::-;7926:51;;8003:11;7995:5;:19;7991:126;;;8042:7;:3;8048:1;8042:7;:::i;:::-;8034:15;;7991:126;;;8095:7;8101:1;8095:3;:7;:::i;:::-;8088:14;;7991:126;8142:12;8153:1;8142:8;:12;:::i;:::-;8131:23;;8181:11;8173:5;:19;8169:197;;;8250:11;8237:12;:5;8243:6;8237:12;:::i;:::-;:24;;;;:::i;:::-;8227:35;;:6;:35;:::i;:::-;8212:50;;8169:197;;;8345:6;8330:11;8317:12;:5;8345:6;8317:12;:::i;:::-;:24;;;;:::i;:::-;8316:35;;;;:::i;:::-;8301:50;;8169:197;8400:11;8385:12;:26;8381:75;;;8438:3;8431:10;;;;;;;;;;;8381:75;7775:691;;7086:1386;;;;;;;;;:::o;3215:93:67:-;3261:7;3287:14;7046:20;;-1:-1:-1;;;;;7046:20:67;;6967:106;3287:14;3280:21;;3215:93;:::o;5269:267:188:-;5378:7;;-1:-1:-1;;;;;5413:19:188;;;5412:54;;5461:5;5412:54;;;5444:13;;-1:-1:-1;;;;;5444:13:188;5412:54;5397:69;;5483:46;5497:4;5503:7;5512:8;5522:6;5483:13;:46::i;3329:145:68:-;3415:4;3438:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3438:29:68;;;;;;;;;;;;;;;3329:145::o;9207:115:188:-;2495:4:68;2928:16;2495:4;2928:10;:16::i;:::-;-1:-1:-1;9291:6:188::1;:24:::0;;-1:-1:-1;;;;;;9291:24:188::1;-1:-1:-1::0;;;;;9291:24:188;;;::::1;::::0;;;::::1;::::0;;9207:115::o;7725:261:67:-;7845:21;;7790:15;;-1:-1:-1;;;7845:21:67;;;;14825:13;;;7884:57;;;;-1:-1:-1;15053:15:67;15042:26;;;;7912:29;7884:57;7883:96;;7974:1;7977;7883:96;;;7946:13;;-1:-1:-1;;;7946:13:67;;;;7961:8;7883:96;7876:103;;;;7725:261;;:::o;2914:873:188:-;3055:7;;3123:10;3090:30;3110:10;3090:17;:30;:::i;:::-;:43;;;;:::i;:::-;3174:6;;:53;;-1:-1:-1;;;3174:53:188;;3194:10;3174:53;;;9171:34:230;3214:4:188;9221:18:230;;;9214:43;9273:18;;;9266:34;;;3074:59:188;;-1:-1:-1;3143:20:188;;-1:-1:-1;;;;;3174:6:188;;;;:19;;9106:18:230;;3174:53:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3250:22:188;;3246:162;;3312:6;;:42;;-1:-1:-1;;;3312:42:188;;3288:21;;-1:-1:-1;;;;;3312:6:188;;:11;;:42;;3324:10;;3336:17;;3312:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3368:6;;:28;;-1:-1:-1;;;3368:28:188;;;;;1255:25:230;;;3288:66:188;;-1:-1:-1;;;;;;3368:6:188;;:13;;1228:18:230;;3368:28:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3274:134;3246:162;3422:15;;3418:81;;3453:6;;:35;;-1:-1:-1;;;3453:35:188;;-1:-1:-1;;;;;3453:6:188;;;;:11;;:35;;3465:10;;3477;;3453:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3418:81;3513:15;;3509:135;;3559:13;;:74;;-1:-1:-1;;;3559:74:188;;:13;:74;;;9584:41:230;3559:13:188;9641:18:230;;;9634:50;9700:18;;;9693:34;;;9743:18;;;9736:34;;;3622:10:188;9786:19:230;;;9779:61;-1:-1:-1;;;;;3559:13:188;;;;:22;;9556:19:230;;3559:74:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3544:89;;3509:135;3659:71;;3675:10;862:51:230;;3717:12:188;;3705:10;;3686:17;;3659:71;;850:2:230;835:18;3659:71:188;;;;;;;3748:32;3768:12;3748:17;:32;:::i;:::-;3741:39;2914:873;-1:-1:-1;;;;;;;2914:873:188:o;1255:832::-;3279:19:77;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:77;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:77;1713:19:78;:23;;;3387:66:77;;-1:-1:-1;3436:12:77;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:77;;10053:2:230;3325:201:77;;;10035:21:230;10092:2;10072:18;;;10065:30;10131:34;10111:18;;;10104:62;-1:-1:-1;;;10182:18:230;;;10175:44;10236:19;;3325:201:77;9851:410:230;3325:201:77;3536:12;:16;;-1:-1:-1;;3536:16:77;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:77;;;;;3562:65;1454:6:188::1;:26:::0;;-1:-1:-1;;;;;1454:26:188;;::::1;-1:-1:-1::0;;;;;;1454:26:188;;::::1;;::::0;;;1490:6:::1;:26:::0;;;;::::1;::::0;;::::1;;::::0;;1526:13:::1;:43:::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;1579:4:::1;:20:::0;;;;::::1;::::0;;::::1;;::::0;;1609:6:::1;:24:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;1727:28;1723:115:::1;;1771:4;::::0;:56:::1;::::0;-1:-1:-1;;;1771:56:188;;-1:-1:-1;;;;;1771:4:188;;::::1;::::0;:12:::1;::::0;:56:::1;::::0;1792:14;;-1:-1:-1;;1809:17:188;1771:56:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1723:115;1847:4;::::0;1868:6:::1;::::0;1847:48:::1;::::0;-1:-1:-1;;;1847:48:188;;-1:-1:-1;;;;;1847:4:188;;::::1;::::0;:12:::1;::::0;:48:::1;::::0;1868:6;::::1;::::0;-1:-1:-1;;1877:17:188;1847:48:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;1905:6:188::1;::::0;1928::::1;::::0;1905:50:::1;::::0;-1:-1:-1;;;1905:50:188;;-1:-1:-1;;;;;1905:6:188;;::::1;::::0;:14:::1;::::0;:50:::1;::::0;1928:6;::::1;::::0;-1:-1:-1;;1937:17:188;1905:50:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;1965:6:188::1;::::0;:58:::1;::::0;-1:-1:-1;;;1965:58:188;;-1:-1:-1;;;;;1965:6:188;;::::1;::::0;:14:::1;::::0;:58:::1;::::0;1988:14;;-1:-1:-1;;2005:17:188;1965:58:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2034:46;2072:1;2075:4;2034:37;:46::i;:::-;3651:14:77::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:77;;;3721:14;;-1:-1:-1;10418:36:230;;3721:14:77;;10406:2:230;10391:18;3721:14:77;;;;;;;3647:99;3269:483;1255:832:188;;;;;;:::o;7412:229:67:-;7506:21;;7470:6;;-1:-1:-1;;;7506:21:67;;;;14825:13;;;7545:56;;;;-1:-1:-1;15053:15:67;15042:26;;;;7573:28;7544:90;;7621:13;;-1:-1:-1;;;7621:13:67;;;;7544:90;;;7605:13;;-1:-1:-1;;;7605:13:67;;;;7544:90;7537:97;;;7412:229;:::o;9494:254::-;9558:23;9587:21;:19;:21::i;:::-;-1:-1:-1;9557:51:67;-1:-1:-1;929:10:80;-1:-1:-1;;;;;9626:31:67;;;9618:84;;;;-1:-1:-1;;;9618:84:67;;10667:2:230;9618:84:67;;;10649:21:230;10706:2;10686:18;;;10679:30;10745:34;10725:18;;;10718:62;-1:-1:-1;;;10796:18:230;;;10789:38;10844:19;;9618:84:67;10465:404:230;9618:84:67;9712:29;:27;:29::i;7157:171::-;7270:20;;-1:-1:-1;;;;;7270:20:67;;;-1:-1:-1;;;7292:28:67;;;;;;7157:171::o;3848:280::-;3994:4;3986:94;;;;-1:-1:-1;;;3986:94:67;;11076:2:230;3986:94:67;;;11058:21:230;11115:2;11095:18;;;11088:30;11154:34;11134:18;;;11127:62;11225:25;11205:18;;;11198:53;11268:19;;3986:94:67;10874:419:230;3986:94:67;4090:31;4107:4;4113:7;4090:16;:31::i;9043:128::-;2495:4:68;2928:16;2495:4;2928:10;:16::i;:::-;9135:29:67::1;:27;:29::i;4317:639:188:-:0;4449:4;;:57;;-1:-1:-1;;;4449:57:188;;4467:10;4449:57;;;9171:34:230;4487:4:188;9221:18:230;;;9214:43;9273:18;;;9266:34;;;4430:7:188;;-1:-1:-1;;;;;4449:4:188;;:17;;9106:18:230;;4449:57:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4516:20:188;;4567:24;4581:10;4567:11;:24;:::i;:::-;4546:45;-1:-1:-1;4606:15:188;;4602:134;;4651:13;;:74;;-1:-1:-1;;;4651:74:188;;:13;:74;;;9584:41:230;4651:13:188;9641:18:230;;;9634:50;9700:18;;;9693:34;;;9743:18;;;9736:34;;;4714:10:188;9786:19:230;;;9779:61;-1:-1:-1;;;;;4651:13:188;;;;:22;;9556:19:230;;4651:74:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4636:89;;4602:134;4751:15;;4747:81;;4782:6;;:35;;-1:-1:-1;;;4782:35:188;;-1:-1:-1;;;;;4782:6:188;;;;:11;;:35;;4794:10;;4806;;4782:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4747:81;4843:55;;4887:10;;4873:12;;4861:10;;4843:55;;;;;4924:25;4937:12;4924:10;:25;:::i;3029:213:68:-;3114:4;-1:-1:-1;;;;;;3137:58:68;;-1:-1:-1;;;3137:58:68;;:98;;-1:-1:-1;;;;;;;;;;1168:51:85;;;3199:36:68;1060:166:85;3768:103:68;3834:30;3845:4;929:10:80;3834::68;:30::i;11437:94:67:-;11502:22;11519:1;11522;11502:16;:22::i;:::-;11437:94::o;5259:145:68:-;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5372:25:::1;5383:4;5389:7;5372:10;:25::i;:::-;5259:145:::0;;;:::o;6368:214::-;-1:-1:-1;;;;;6463:23:68;;929:10:80;6463:23:68;6455:83;;;;-1:-1:-1;;;6455:83:68;;12040:2:230;6455:83:68;;;12022:21:230;12079:2;12059:18;;;12052:30;12118:34;12098:18;;;12091:62;-1:-1:-1;;;12169:18:230;;;12162:45;12224:19;;6455:83:68;11838:411:230;6455:83:68;6549:26;6561:4;6567:7;6549:11;:26::i;8660:299:67:-;8741:18;8810:19;:17;:19::i;:::-;8762:45;8791:15;8762:28;:45::i;:::-;:67;;;;:::i;:::-;8741:88;;8839:46;8863:8;8873:11;8839:23;:46::i;:::-;8900:52;;671:14:230;659:27;;641:46;;-1:-1:-1;;;;;8900:52:67;;;;;629:2:230;614:18;8900:52:67;;;;;;;8731:228;8660:299;:::o;10801:::-;10879:18;10948:26;10965:8;10948:16;:26::i;:::-;10900:45;10929:15;10900:28;:45::i;:::-;:74;;;;:::i;:::-;10879:95;;10984:39;11001:8;11011:11;10984:16;:39::i;:::-;11038:55;;;4342:14:230;4383:15;;;4365:34;;4435:15;;4430:2;4415:18;;4408:43;11038:55:67;;4305:18:230;11038:55:67;;;;;;;10869:231;10801:299;:::o;5721:394:188:-;5830:7;5863:6;5830:7;5893:15;5863:6;5902;5893:15;:::i;:::-;5934:48;;-1:-1:-1;;;5934:48:188;;12662:2:230;12651:22;;;5934:48:188;;;12633:41:230;12710:22;;;12690:18;;;12683:50;12749:18;;;12742:34;;;5879:29:188;;-1:-1:-1;5919:12:188;;-1:-1:-1;;;;;5934:24:188;;;;;12606:18:230;;5934:48:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6007;;-1:-1:-1;;;6007:48:188;;12662:2:230;12651:22;;;6007:48:188;;;12633:41:230;12710:22;;;12690:18;;;12683:50;12749:18;;;12742:34;;;5919:63:188;;-1:-1:-1;5992:12:188;;-1:-1:-1;;;;;6007:24:188;;;;;12606:18:230;;6007:48:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5992:63;-1:-1:-1;6098:9:188;6104:3;6098;:9;:::i;:::-;6074:11;6081:4;6074;:11;:::i;:::-;6073:21;;6088:6;6073:21;:::i;:::-;:35;;;;:::i;:::-;6066:42;5721:394;-1:-1:-1;;;;;;;;;5721:394:188:o;2309:222:67:-;5374:13:77;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:77;;;;;;;:::i;:::-;2442:82:67::1;2490:12;2504:19;2442:47;:82::i;9876:440::-:0;9943:16;9961:15;9980:21;:19;:21::i;:::-;9942:59;;;;10019:24;10034:8;14825:13;;;;;14739:106;10019:24;:56;;;;-1:-1:-1;15053:15:67;15042:26;;;;10047:28;10011:109;;;;-1:-1:-1;;;10011:109:67;;13401:2:230;10011:109:67;;;13383:21:230;13440:2;13420:18;;;13413:30;13479:34;13459:18;;;13452:62;-1:-1:-1;;;13530:18:230;;;13523:38;13578:19;;10011:109:67;13199:404:230;10011:109:67;10130:47;2495:4:68;10162:14:67;7046:20;;-1:-1:-1;;;;;7046:20:67;;6967:106;10162:14;10130:11;:47::i;:::-;10187:40;2495:4:68;10218:8:67;10187:10;:40::i;:::-;-1:-1:-1;;10244:20:67;10237:27;;-1:-1:-1;;;;;;10274:35:67;;;9876:440::o;5684:147:68:-;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5798:26:::1;5810:4;5816:7;5798:11;:26::i;9299:111:67:-:0;9365:38;9397:1;9401;9365:23;:38::i;4152:501:68:-;4240:22;4248:4;4254:7;4240;:22::i;:::-;4235:412;;4423:39;4454:7;4423:30;:39::i;:::-;4533:49;4572:4;4579:2;4533:30;:49::i;:::-;4330:274;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4330:274:68;;;;;;;;;;-1:-1:-1;;;4278:358:68;;;;;;;:::i;14009:585:67:-;14111:21;;-1:-1:-1;;;14111:21:67;;;;14825:13;;14143:365;;15053:15;15042:26;;;;14190:308;;;14308:13;;14292;:29;;-1:-1:-1;;;;;14292:29:67;-1:-1:-1;;;14308:13:67;;;;;-1:-1:-1;;;14292:29:67;;;;;;;14190:308;;;14450:33;;;;;;;14190:308;-1:-1:-1;14518:13:67;:24;;-1:-1:-1;;;;;14552:35:67;-1:-1:-1;;;14518:24:67;;;;;-1:-1:-1;;;;;14552:35:67;;-1:-1:-1;;;14552:35:67;;;;;;;;;;;;;;14009:585::o;5846:320::-;5937:4;5933:186;;6013:1;5987:14;7046:20;;-1:-1:-1;;;;;7046:20:67;;6967:106;5987:14;-1:-1:-1;;;;;5987:28:67;;5979:85;;;;-1:-1:-1;;;5979:85:67;;15283:2:230;5979:85:67;;;15265:21:230;15322:2;15302:18;;;15295:30;15361:34;15341:18;;;15334:62;-1:-1:-1;;;15412:18:230;;;15405:42;15464:19;;5979:85:67;15081:408:230;5979:85:67;6078:20;:30;;-1:-1:-1;;;;;;6078:30:67;-1:-1:-1;;;;;6078:30:67;;;;;5933:186;6128:31;6145:4;6151:7;6128:16;:31::i;6233:249::-;6325:26;;:55;;;;-1:-1:-1;7046:20:67;;-1:-1:-1;;;;;6355:25:67;;;7046:20;;6355:25;6325:55;6321:113;;;6403:20;6396:27;;-1:-1:-1;;;;;;6396:27:67;;;6321:113;6443:32;6461:4;6467:7;6443:17;:32::i;14251:187:88:-;14307:6;14342:16;14333:25;;;14325:76;;;;-1:-1:-1;;;14325:76:88;;15696:2:230;14325:76:88;;;15678:21:230;15735:2;15715:18;;;15708:30;15774:34;15754:18;;;15747:62;-1:-1:-1;;;15825:18:230;;;15818:36;15871:19;;14325:76:88;15494:402:230;14325:76:88;-1:-1:-1;14425:5:88;14251:187::o;13330:525:67:-;13422:18;13444:21;:19;:21::i;:::-;13476:20;:31;;13517:42;;;-1:-1:-1;;;13517:42:67;-1:-1:-1;;;;;;13517:42:67;;;-1:-1:-1;;;;;13476:31:67;;13517:42;;;;13419:46;-1:-1:-1;13671:27:67;;-1:-1:-1;13419:46:67;14825:13;;;;;14739:106;13671:27;13667:182;;;13808:30;;;;;;;13409:446;13330:525;;:::o;11878:1260::-;11952:6;11970:19;11992;:17;:19::i;:::-;11970:41;;12941:12;12930:23;;:8;:23;;;:201;;13108:23;13123:8;13108:12;:23;:::i;:::-;12930:201;;;12979:62;;;;8165:6;12979:19;:62::i;:::-;12911:220;11878:1260;-1:-1:-1;;;11878:1260:67:o;2537:325::-;5374:13:77;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:77;;;;;;;:::i;:::-;-1:-1:-1;;;;;2688:33:67;::::1;2680:76;;;::::0;-1:-1:-1;;;2680:76:67;;16287:2:230;2680:76:67::1;::::0;::::1;16269:21:230::0;16326:2;16306:18;;;16299:30;16365:32;16345:18;;;16338:60;16415:18;;2680:76:67::1;16085:354:230::0;2680:76:67::1;2766:13;:28:::0;;-1:-1:-1;;;;;2766:28:67::1;-1:-1:-1::0;;;2766:28:67::1;::::0;::::1;;;::::0;;2804:51:::1;-1:-1:-1::0;2835:19:67;2804:10:::1;:51::i;2473:149:82:-:0;2531:13;2563:52;-1:-1:-1;;;;;2575:22:82;;376:2;1884:437;1959:13;1984:19;2016:10;2020:6;2016:1;:10;:::i;:::-;:14;;2029:1;2016:14;:::i;:::-;2006:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2006:25:82;;1984:47;;-1:-1:-1;;;2041:6:82;2048:1;2041:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2041:15:82;;;;;;;;;-1:-1:-1;;;2066:6:82;2073:1;2066:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2066:15:82;;;;;;;;-1:-1:-1;2096:9:82;2108:10;2112:6;2108:1;:10;:::i;:::-;:14;;2121:1;2108:14;:::i;:::-;2096:26;;2091:128;2128:1;2124;:5;2091:128;;;-1:-1:-1;;;2171:5:82;2179:3;2171:11;2162:21;;;;;;;:::i;:::-;;;;2150:6;2157:1;2150:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2150:33:82;;;;;;;;-1:-1:-1;2207:1:82;2197:11;;;;;2131:3;;;:::i;:::-;;;2091:128;;;-1:-1:-1;2236:10:82;;2228:55;;;;-1:-1:-1;;;2228:55:82;;17051:2:230;2228:55:82;;;17033:21:230;;;17070:18;;;17063:30;17129:34;17109:18;;;17102:62;17181:18;;2228:55:82;16849:356:230;7917:233:68;8000:22;8008:4;8014:7;8000;:22::i;:::-;7995:149;;8038:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8038:29:68;;;;;;;;;:36;;-1:-1:-1;;8038:36:68;8070:4;8038:36;;;8120:12;929:10:80;;850:96;8120:12:68;-1:-1:-1;;;;;8093:40:68;8111:7;-1:-1:-1;;;;;8093:40:68;8105:4;8093:40;;;;;;;;;;7917:233;;:::o;8321:234::-;8404:22;8412:4;8418:7;8404;:22::i;:::-;8400:149;;;8474:5;8442:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8442:29:68;;;;;;;;;;:37;;-1:-1:-1;;8442:37:68;;;8498:40;929:10:80;;8442:12:68;;8498:40;;8474:5;8498:40;8321:234;;:::o;599:104:87:-;657:7;687:1;683;:5;:13;;695:1;683:13;;;-1:-1:-1;691:1:87;;676:20;-1:-1:-1;599:104:87:o;14:286:230:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:230;;209:43;;199:71;;266:1;263;256:12;924:180;983:6;1036:2;1024:9;1015:7;1011:23;1007:32;1004:52;;;1052:1;1049;1042:12;1004:52;-1:-1:-1;1075:23:230;;924:180;-1:-1:-1;924:180:230:o;1517:173::-;1585:20;;-1:-1:-1;;;;;1634:31:230;;1624:42;;1614:70;;1680:1;1677;1670:12;1614:70;1517:173;;;:::o;1695:254::-;1763:6;1771;1824:2;1812:9;1803:7;1799:23;1795:32;1792:52;;;1840:1;1837;1830:12;1792:52;1876:9;1863:23;1853:33;;1905:38;1939:2;1928:9;1924:18;1905:38;:::i;:::-;1895:48;;1695:254;;;;;:::o;2183:186::-;2242:6;2295:2;2283:9;2274:7;2270:23;2266:32;2263:52;;;2311:1;2308;2301:12;2263:52;2334:29;2353:9;2334:29;:::i;2374:280::-;2432:6;2485:2;2473:9;2464:7;2460:23;2456:32;2453:52;;;2501:1;2498;2491:12;2453:52;2540:9;2527:23;2590:14;2583:5;2579:26;2572:5;2569:37;2559:65;;2620:1;2617;2610:12;2867:162;2934:20;;2994:2;2983:21;;;2973:32;;2963:60;;3019:1;3016;3009:12;3034:537;3136:6;3144;3152;3160;3168;3176;3229:3;3217:9;3208:7;3204:23;3200:33;3197:53;;;3246:1;3243;3236:12;3197:53;3282:9;3269:23;3259:33;;3339:2;3328:9;3324:18;3311:32;3301:42;;3390:2;3379:9;3375:18;3362:32;3352:42;;3413:38;3447:2;3436:9;3432:18;3413:38;:::i;:::-;3403:48;;3470:38;3503:3;3492:9;3488:19;3470:38;:::i;:::-;3460:48;;3527:38;3560:3;3549:9;3545:19;3527:38;:::i;:::-;3517:48;;3034:537;;;;;;;;:::o;3758:399::-;3842:6;3850;3858;3866;3919:3;3907:9;3898:7;3894:23;3890:33;3887:53;;;3936:1;3933;3926:12;3887:53;3959:29;3978:9;3959:29;:::i;:::-;3949:39;;4007:37;4040:2;4029:9;4025:18;4007:37;:::i;:::-;3997:47;;4063:37;4096:2;4085:9;4081:18;4063:37;:::i;:::-;3758:399;;;;-1:-1:-1;4053:47:230;;4147:2;4132:18;4119:32;;-1:-1:-1;;3758:399:230:o;4462:385::-;4548:6;4556;4564;4572;4625:3;4613:9;4604:7;4600:23;4596:33;4593:53;;;4642:1;4639;4632:12;4593:53;-1:-1:-1;;4665:23:230;;;4735:2;4720:18;;4707:32;;-1:-1:-1;4786:2:230;4771:18;;4758:32;;4837:2;4822:18;4809:32;;-1:-1:-1;4462:385:230;-1:-1:-1;4462:385:230:o;4852:559::-;4956:6;4964;4972;4980;4988;4996;5049:3;5037:9;5028:7;5024:23;5020:33;5017:53;;;5066:1;5063;5056:12;5017:53;5089:29;5108:9;5089:29;:::i;:::-;5079:39;;5137:38;5171:2;5160:9;5156:18;5137:38;:::i;:::-;5127:48;;5194:38;5228:2;5217:9;5213:18;5194:38;:::i;:::-;5184:48;;5251:38;5285:2;5274:9;5270:18;5251:38;:::i;:::-;5241:48;;5308:39;5342:3;5331:9;5327:19;5308:39;:::i;:::-;5298:49;;5366:39;5400:3;5389:9;5385:19;5366:39;:::i;5938:316::-;6015:6;6023;6031;6084:2;6072:9;6063:7;6059:23;6055:32;6052:52;;;6100:1;6097;6090:12;6052:52;-1:-1:-1;;6123:23:230;;;6193:2;6178:18;;6165:32;;-1:-1:-1;6244:2:230;6229:18;;;6216:32;;5938:316;-1:-1:-1;5938:316:230:o;7104:282::-;-1:-1:-1;;;;;7304:32:230;;;;7286:51;;7368:2;7353:18;;7346:34;7274:2;7259:18;;7104:282::o;7391:277::-;7458:6;7511:2;7499:9;7490:7;7486:23;7482:32;7479:52;;;7527:1;7524;7517:12;7479:52;7559:9;7553:16;7612:5;7605:13;7598:21;7591:5;7588:32;7578:60;;7634:1;7631;7624:12;7952:184;8022:6;8075:2;8063:9;8054:7;8050:23;8046:32;8043:52;;;8091:1;8088;8081:12;8043:52;-1:-1:-1;8114:16:230;;7952:184;-1:-1:-1;7952:184:230:o;8141:127::-;8202:10;8197:3;8193:20;8190:1;8183:31;8233:4;8230:1;8223:15;8257:4;8254:1;8247:15;8273:125;8338:9;;;8359:10;;;8356:36;;;8372:18;;:::i;8403:217::-;8443:1;8469;8459:132;;8513:10;8508:3;8504:20;8501:1;8494:31;8548:4;8545:1;8538:15;8576:4;8573:1;8566:15;8459:132;-1:-1:-1;8605:9:230;;8403:217::o;8625:128::-;8692:9;;;8713:11;;;8710:37;;;8727:18;;:::i;8758:168::-;8831:9;;;8862;;8879:15;;;8873:22;;8859:37;8849:71;;8900:18;;:::i;12254:176::-;12321:14;12355:10;;;12367;;;12351:27;;12390:11;;;12387:37;;;12404:18;;:::i;:::-;12387:37;12254:176;;;;:::o;12787:407::-;12989:2;12971:21;;;13028:2;13008:18;;;13001:30;13067:34;13062:2;13047:18;;13040:62;-1:-1:-1;;;13133:2:230;13118:18;;13111:41;13184:3;13169:19;;12787:407::o;13608:250::-;13693:1;13703:113;13717:6;13714:1;13711:13;13703:113;;;13793:11;;;13787:18;13774:11;;;13767:39;13739:2;13732:10;13703:113;;;-1:-1:-1;;13850:1:230;13832:16;;13825:27;13608:250::o;13863:812::-;14274:25;14269:3;14262:38;14244:3;14329:6;14323:13;14345:75;14413:6;14408:2;14403:3;14399:12;14392:4;14384:6;14380:17;14345:75;:::i;:::-;-1:-1:-1;;;14479:2:230;14439:16;;;14471:11;;;14464:40;14529:13;;14551:76;14529:13;14613:2;14605:11;;14598:4;14586:17;;14551:76;:::i;:::-;14647:17;14666:2;14643:26;;13863:812;-1:-1:-1;;;;13863:812:230:o;14680:396::-;14829:2;14818:9;14811:21;14792:4;14861:6;14855:13;14904:6;14899:2;14888:9;14884:18;14877:34;14920:79;14992:6;14987:2;14976:9;14972:18;14967:2;14959:6;14955:15;14920:79;:::i;:::-;15060:2;15039:15;-1:-1:-1;;15035:29:230;15020:45;;;;15067:2;15016:54;;14680:396;-1:-1:-1;;14680:396:230:o;15901:179::-;15969:14;16016:10;;;16004;;;16000:27;;16039:12;;;16036:38;;;16054:18;;:::i;16444:127::-;16505:10;16500:3;16496:20;16493:1;16486:31;16536:4;16533:1;16526:15;16560:4;16557:1;16550:15;16576:127;16637:10;16632:3;16628:20;16625:1;16618:31;16668:4;16665:1;16658:15;16692:4;16689:1;16682:15;16708:136;16747:3;16775:5;16765:39;;16784:18;;:::i;:::-;-1:-1:-1;;;16820:18:230;;16708:136::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BURNER_ROLE()": "282c51f3",
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "FEE_RECIPIENT_ROLE()": "e82748ca",
    "GOVERNOR_ROLE()": "ccc57490",
    "MANAGER_ROLE()": "ec87621c",
    "MINTER_ROLE()": "d5391393",
    "PAUSER_ROLE()": "e63ab1e9",
    "REBASER_ROLE()": "83eb70e5",
    "acceptDefaultAdminTransfer()": "cefc1429",
    "beginDefaultAdminTransfer(address)": "634e93da",
    "burner()": "27810b6e",
    "calculatePurchasable(uint256,uint256,uint256,address,int128,int128)": "8867ed80",
    "cancelDefaultAdminTransfer()": "d602b9fd",
    "canonicalPool()": "3cee0be3",
    "changeDefaultAdminDelay(uint48)": "649a5ec7",
    "defaultAdmin()": "84ef8ffc",
    "defaultAdminDelay()": "cc8463c8",
    "defaultAdminDelayIncreaseWait()": "022d63fb",
    "flip()": "cde4efa9",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(address,address,address,address,address,address)": "cc2a9a5b",
    "marginalCost(address,int128,int128,uint256)": "8dbff07a",
    "minter()": "07546172",
    "owner()": "8da5cb5b",
    "pendingDefaultAdmin()": "cf6eefb7",
    "pendingDefaultAdminDelay()": "a1eda53c",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "rollbackDefaultAdminDelay()": "0aa6220b",
    "setFlip(address)": "47088726",
    "setPool(address)": "4437152a",
    "setStflip(address)": "9c3721bc",
    "stakeAggregate(uint256,uint256,uint256)": "ec7245b0",
    "stflip()": "f025b209",
    "supportsInterface(bytes4)": "01ffc9a7",
    "unstakeAggregate(uint256,uint256,uint256,uint256)": "a1fed9dc"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NoAttemptsLeft\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountInstantBurn\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountBurn\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"received\",\"type\":\"uint256\"}],\"name\":\"BurnAggregation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"CanonicalPoolChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DefaultAdminDelayChangeCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"newDelay\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"effectSchedule\",\"type\":\"uint48\"}],\"name\":\"DefaultAdminDelayChangeScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DefaultAdminTransferCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"acceptSchedule\",\"type\":\"uint48\"}],\"name\":\"DefaultAdminTransferScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"swapReceived\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"minted\",\"type\":\"uint256\"}],\"name\":\"StakeAggregation\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_RECIPIENT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GOVERNOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REBASER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptDefaultAdminTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"beginDefaultAdminTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burner\",\"outputs\":[{\"internalType\":\"contract BurnerV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"targetPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetError\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"attempts\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pool_\",\"type\":\"address\"},{\"internalType\":\"int128\",\"name\":\"tokenIn\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"tokenOut\",\"type\":\"int128\"}],\"name\":\"calculatePurchasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelDefaultAdminTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canonicalPool\",\"outputs\":[{\"internalType\":\"contract IStableSwap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"newDelay\",\"type\":\"uint48\"}],\"name\":\"changeDefaultAdminDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultAdminDelay\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultAdminDelayIncreaseWait\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"burner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityPool_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stflip_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flip_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gov_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool_\",\"type\":\"address\"},{\"internalType\":\"int128\",\"name\":\"tokenIn\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"tokenOut\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"marginalCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"contract MinterV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingDefaultAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"schedule\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingDefaultAdminDelay\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"newDelay\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"schedule\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rollbackDefaultAdminDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"flip_\",\"type\":\"address\"}],\"name\":\"setFlip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool_\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stflip_\",\"type\":\"address\"}],\"name\":\"setStflip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountTotal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountSwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumAmountSwapOut\",\"type\":\"uint256\"}],\"name\":\"stakeAggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stflip\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountInstantBurn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBurn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountSwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumAmountSwapOut\",\"type\":\"uint256\"}],\"name\":\"unstakeAggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DefaultAdminDelayChangeCanceled()\":{\"details\":\"Emitted when a {pendingDefaultAdminDelay} is reset if its schedule didn't pass.\"},\"DefaultAdminDelayChangeScheduled(uint48,uint48)\":{\"details\":\"Emitted when a {defaultAdminDelay} change is started, setting `newDelay` as the next delay to be applied between default admin transfer after `effectSchedule` has passed.\"},\"DefaultAdminTransferCanceled()\":{\"details\":\"Emitted when a {pendingDefaultAdmin} is reset if it was never accepted, regardless of its schedule.\"},\"DefaultAdminTransferScheduled(address,uint48)\":{\"details\":\"Emitted when a {defaultAdmin} transfer is started, setting `newAdmin` as the next address to become the {defaultAdmin} by calling {acceptDefaultAdminTransfer} only after `acceptSchedule` passes.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"acceptDefaultAdminTransfer()\":{\"details\":\"Completes a {defaultAdmin} transfer previously started with {beginDefaultAdminTransfer}. After calling the function: - `DEFAULT_ADMIN_ROLE` should be granted to the caller. - `DEFAULT_ADMIN_ROLE` should be revoked from the previous holder. - {pendingDefaultAdmin} should be reset to zero values. Requirements: - Only can be called by the {pendingDefaultAdmin}'s `newAdmin`. - The {pendingDefaultAdmin}'s `acceptSchedule` should've passed.\"},\"beginDefaultAdminTransfer(address)\":{\"details\":\"Starts a {defaultAdmin} transfer by setting a {pendingDefaultAdmin} scheduled for acceptance after the current timestamp plus a {defaultAdminDelay}. Requirements: - Only can be called by the current {defaultAdmin}. Emits a DefaultAdminRoleChangeStarted event.\"},\"calculatePurchasable(uint256,uint256,uint256,address,int128,int128)\":{\"details\":\"Uses binary search. Must specify number of attempts to prevent infinite loop. This is not a perfect calculation because the marginal cost is not exactly equal to dy. This is a decent approximation though An analytical solution would be ideal but its not easy to get. This is accurate to 1bps, which is good enough because most users are not going to be buying out the entire discount on their own. Even if they are, 1 bps +- is okay. Some possible inaccuracies with very small pool sizes.\",\"params\":{\"attempts\":\"The number of hops within the binary search allowed before reverting\",\"targetError\":\"The acceptable range around `targetPrice` for acceptable return value. 10**18 = 100%\",\"targetPrice\":\"The target price to calculate the amount of stFLIP purchasable until. 10**18 = 1\"}},\"cancelDefaultAdminTransfer()\":{\"details\":\"Cancels a {defaultAdmin} transfer previously started with {beginDefaultAdminTransfer}. A {pendingDefaultAdmin} not yet accepted can also be cancelled with this function. Requirements: - Only can be called by the current {defaultAdmin}. May emit a DefaultAdminTransferCanceled event.\"},\"changeDefaultAdminDelay(uint48)\":{\"details\":\"Initiates a {defaultAdminDelay} update by setting a {pendingDefaultAdminDelay} scheduled for getting into effect after the current timestamp plus a {defaultAdminDelay}. This function guarantees that any call to {beginDefaultAdminTransfer} done between the timestamp this method is called and the {pendingDefaultAdminDelay} effect schedule will use the current {defaultAdminDelay} set before calling. The {pendingDefaultAdminDelay}'s effect schedule is defined in a way that waiting until the schedule and then calling {beginDefaultAdminTransfer} with the new delay will take at least the same as another {defaultAdmin} complete transfer (including acceptance). The schedule is designed for two scenarios: - When the delay is changed for a larger one the schedule is `block.timestamp + newDelay` capped by {defaultAdminDelayIncreaseWait}. - When the delay is changed for a shorter one, the schedule is `block.timestamp + (current delay - new delay)`. A {pendingDefaultAdminDelay} that never got into effect will be canceled in favor of a new scheduled change. Requirements: - Only can be called by the current {defaultAdmin}. Emits a DefaultAdminDelayChangeScheduled event and may emit a DefaultAdminDelayChangeCanceled event.\"},\"defaultAdmin()\":{\"details\":\"Returns the address of the current `DEFAULT_ADMIN_ROLE` holder.\"},\"defaultAdminDelay()\":{\"details\":\"Returns the delay required to schedule the acceptance of a {defaultAdmin} transfer started. This delay will be added to the current timestamp when calling {beginDefaultAdminTransfer} to set the acceptance schedule. NOTE: If a delay change has been scheduled, it will take effect as soon as the schedule passes, making this function returns the new delay. See {changeDefaultAdminDelay}.\"},\"defaultAdminDelayIncreaseWait()\":{\"details\":\"Maximum time in seconds for an increase to {defaultAdminDelay} (that is scheduled using {changeDefaultAdminDelay}) to take effect. Default to 5 days. When the {defaultAdminDelay} is scheduled to be increased, it goes into effect after the new delay has passed with the purpose of giving enough time for reverting any accidental change (i.e. using milliseconds instead of seconds) that may lock the contract. However, to avoid excessive schedules, the wait is capped by this function and it can be overrode for a custom {defaultAdminDelay} increase scheduling. IMPORTANT: Make sure to add a reasonable amount of time while overriding this value, otherwise, there's a risk of setting a high new delay that goes into effect almost immediately without the possibility of human intervention in the case of an input error (eg. set milliseconds instead of seconds).\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"See {AccessControl-grantRole}. Reverts for `DEFAULT_ADMIN_ROLE`.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"marginalCost(address,int128,int128,uint256)\":{\"params\":{\"amount\":\"The unit to calculate at\",\"pool_\":\"The pool to calculate the marginal cost for. If 0, uses the canonical pool\",\"tokenIn\":\"The token index for the in token\",\"tokenOut\":\"Token index for the out token\"}},\"owner()\":{\"details\":\"See {IERC5313-owner}.\"},\"pendingDefaultAdmin()\":{\"details\":\"Returns a tuple of a `newAdmin` and an accept schedule. After the `schedule` passes, the `newAdmin` will be able to accept the {defaultAdmin} role by calling {acceptDefaultAdminTransfer}, completing the role transfer. A zero value only in `acceptSchedule` indicates no pending admin transfer. NOTE: A zero address `newAdmin` means that {defaultAdmin} is being renounced.\"},\"pendingDefaultAdminDelay()\":{\"details\":\"Returns a tuple of `newDelay` and an effect schedule. After the `schedule` passes, the `newDelay` will get into effect immediately for every new {defaultAdmin} transfer started with {beginDefaultAdminTransfer}. A zero value only in `effectSchedule` indicates no pending delay change. NOTE: A zero value only for `newDelay` means that the next {defaultAdminDelay} will be zero after the effect schedule.\"},\"renounceRole(bytes32,address)\":{\"details\":\"See {AccessControl-renounceRole}. For the `DEFAULT_ADMIN_ROLE`, it only allows renouncing in two steps by first calling {beginDefaultAdminTransfer} to the `address(0)`, so it's required that the {pendingDefaultAdmin} schedule has also passed when calling this function. After its execution, it will not be possible to call `onlyRole(DEFAULT_ADMIN_ROLE)` functions. NOTE: Renouncing `DEFAULT_ADMIN_ROLE` will leave the contract without a {defaultAdmin}, thereby disabling any functionality that is only available for it, and the possibility of reassigning a non-administrated role.\"},\"revokeRole(bytes32,address)\":{\"details\":\"See {AccessControl-revokeRole}. Reverts for `DEFAULT_ADMIN_ROLE`.\"},\"rollbackDefaultAdminDelay()\":{\"details\":\"Cancels a scheduled {defaultAdminDelay} change. Requirements: - Only can be called by the current {defaultAdmin}. May emit a DefaultAdminDelayChangeCanceled event.\"},\"setPool(address)\":{\"params\":{\"pool_\":\"Address of the new pool\"}},\"stakeAggregate(uint256,uint256,uint256)\":{\"details\":\"Contract will only swap if `amountSwap > 0`. Contract will only mint if amountSwap < amountTotal.  Use `calculatePurchasable` on frontend to determine route prior to calling this.  \",\"params\":{\"amountSwap\":\"The amount of FLIP to swap for stFLIP.\",\"amountTotal\":\"The total amount of FLIP to spend.\",\"minimumAmountSwapOut\":\"The minimum amount of stFLIP to receive from the swap piece of the route\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"unstakeAggregate(uint256,uint256,uint256,uint256)\":{\"details\":\"Contract will only swap if `amountSwap > 0`. Contract will only mint if amountSwap < amountTotal.\",\"params\":{\"amountBurn\":\"The amount of stFLIP to burn.\",\"amountInstantBurn\":\"The amount of stFLIP to instant burn\",\"amountSwap\":\"The amount of stFLIP to swap for FLIP\",\"minimumAmountSwapOut\":\"The minimum amount of FLIP  to receive from the swap piece of the route\"}}},\"title\":\"Aggregator contract for stFLIP\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calculatePurchasable(uint256,uint256,uint256,address,int128,int128)\":{\"notice\":\"Calculates the total amount of stFLIP purchasable within targetError of a certain targetPrice\"},\"marginalCost(address,int128,int128,uint256)\":{\"notice\":\"Public function for marginal cost\"},\"setPool(address)\":{\"notice\":\"Change the canonical pool used in stakeAggregate/unstakeAggregate\"},\"stakeAggregate(uint256,uint256,uint256)\":{\"notice\":\"Spends FLIP to mint and swap for stFLIP in the same transaction.\"},\"unstakeAggregate(uint256,uint256,uint256,uint256)\":{\"notice\":\"Spends stFLIP for FLIP via swap, instant burn, and unstake request.\"}},\"notice\":\"Allows users to stake/unstake optimally allotting users to add a swap  component to their route or instant burn/ normal burn in one tx. Calls  `BurnerV1` to burn, `MinterV1` to mint and `IStableSwap` to swap. After speaking with the Curve team they have recommended we use the StableSwap pool that will  be released later this month. https://github.com/curvefi/stableswap-ng/pull/30 This might change some of the function or interfaces with the pool.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/AggregatorV1.sol\":\"AggregatorV1\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=lib/frax-governance/node_modules/@chainlink/\",\":@eth-optimism/=lib/frax-governance/node_modules/@eth-optimism/contracts/\",\":@gnosis.pm/=lib/frax-governance/node_modules/@gnosis.pm/\",\":@governance/=lib/frax-governance/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@script-deploy/=script/deploy/\",\":@solmate/=lib/solmate/\",\":@src/=src/\",\":@test/=test/\",\":ds-test/=lib/frax-governance/node_modules/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":frax-governance/=lib/frax-governance/\",\":frax-standard-solidity/=lib/frax-governance/node_modules/frax-standard-solidity/src/\",\":frax-std/=lib/frax-governance/node_modules/frax-standard-solidity/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-solidity/=lib/frax-governance/node_modules/openzeppelin-solidity/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":safe-contracts/=lib/frax-governance/node_modules/@gnosis.pm/safe-contracts/contracts/\",\":safe-tools/=lib/frax-governance/node_modules/safe-tools/src/\",\":solady/=lib/frax-governance/node_modules/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlDefaultAdminRulesUpgradeable.sol\":{\"keccak256\":\"0x11f2411fad76fe0d4704b5cdc294936ef37134e418f7dcc065b0cbe4915220a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3907c9c7d677a91dbbaa806c4ed41b5b4320b889a909e77c87c4301906d7240e\",\"dweb:/ipfs/QmaRUy6eC459XPv7vRuvS38YmncUgQJvrHZuLbYC3s4Fp8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlDefaultAdminRulesUpgradeable.sol\":{\"keccak256\":\"0x6d4b7ecb2cc2ce6fbe36243135c93cbdb5c83627986ca984e492c7cf5e23a512\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://469969128ab03eece200d1b39795b89722c72b47a8b4234cef07664d3ab54113\",\"dweb:/ipfs/QmSrYtMYfAyexPVhrcXGiS7nJxk8hL3e7CxkwVvi9KkH68\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0xccd09723ea79683149efb189c56a122d894fac60711ba51afba1adcf7cefeaed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d62304242f91dd31db43083f05ba4ed058c5d2f5c1dc03b9bcad9edb71c5d9f0\",\"dweb:/ipfs/QmYyPjJusN37F8HnsnNACU8HCeHPFYjsqJCEAZUTwZUE9t\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/governance/utils/VotesUpgradeable.sol\":{\"keccak256\":\"0x117b5a3be1014e7ef434f56e96bc2c00ffcc47b730a5cee07ca83cb4e4aef5fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c878c5ccbc8f15e54a9d3ca59bf014eac58403de5a36d2118505b6743dca7c\",\"dweb:/ipfs/QmYg7auKGQgujUkDcxyTR3J44DCJA4VemLeed3nfM3inic\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5267Upgradeable.sol\":{\"keccak256\":\"0xe562dab443278837fa50faddb76743399e942181881db8dccaea3bd1712994db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79ebe0e661396045cefe94f4256398cf632756d779a6871319db374c9eb128c9\",\"dweb:/ipfs/QmfCTCivb9fFhyCX8hzushzcKunvKL2N9RDsnRNdvbd11M\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5313Upgradeable.sol\":{\"keccak256\":\"0x7bbdfd0cf46f09ca10e42db940e0ae8b54e24beec35429f282d90929ac812f68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://863d4b1341fa392eb0e10ee3ff85db20ab6bdb30054c47ae6bc5c3d1aad334ba\",\"dweb:/ipfs/QmaZspQdbYH19eLQttrt2RisRPAUkMf3gCcCNHQNgsBXe9\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5805Upgradeable.sol\":{\"keccak256\":\"0x19848eec9045c8b91f1ab6b1853966443e3e36bcbc307593ed37a9f0df179d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a07972c1330ee99a5d051b393260e01412ac4c14c7bc4d75d80b7cce291a6412\",\"dweb:/ipfs/QmQx1ZiAo4AbSobN41c1xUEtyX1QejydWCmY7Sj3H5aDNv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC6372Upgradeable.sol\":{\"keccak256\":\"0x3026befd6d69d1b46960bdc35a2ad37c0e1352f26983ee3728dd61fd32aa308a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2001b7209fd4920ec7674f194db7fe163dfea7a7af2dd25fe6c0e5a94dc595c\",\"dweb:/ipfs/QmXX2zTFyiNWoDxivV3trKcKWifAENMqNAB34NgjWq5feX\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/CheckpointsUpgradeable.sol\":{\"keccak256\":\"0x51ea916844ee2c53874c6895ce37acbca0250977b49b48909d75ad439f38f211\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1be66618a68c62dfb767443bccba219ea240ebac287a7a23a32af4d2cbe2d9b9\",\"dweb:/ipfs/QmegRfPREH1UTq56ucSgGByYZqepGoRjKc51Jd3guvqpBJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0xeb8d6be406a373771724922eb41b5d593bc8e2dc705daa22cd1145cfc8f5a3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dcf8f1b2f1869895bffaa1d83ea0e3ab5b42275c97248eda76441e64b343b66\",\"dweb:/ipfs/QmRqs6vX3dnVkRtdXmrxP7a677eaNnTUjY48DT96q6dMcZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x8e99882a991853dc446278576c8cb9b3a5ded84642e9bcc917b1677807c2f18c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310153c1a4c739002ffbc1351ed1dd7488a0d20f5dd816353332fc2c1d81e0a3\",\"dweb:/ipfs/QmcvwXQVUBRTEAoNcvwSVFmhpHUXQ21s2Hfj79hq2uQNVM\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a45c64b97311fabbcbe8dad7e94fa89e06a7f96060d5565326ef706f5f239017\",\"dweb:/ipfs/QmeU2jiBGbHhz9DqRotjbpAx5s2xExDSRQtSD5ENjuHzDq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x4176da81c08b0a6ecb49cd9a1bf3426c364b23f3b1a75ff517d11d33dd492eb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cde1f66dc8121a6f95c4446f4baef237f1aa841ab6ad8526588ee8ff144905af\",\"dweb:/ipfs/QmUXEzNgMNWV224M9Puws38VgiRGthmm2HmhCjexbGyjZX\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"src/mock/IStableSwap.sol\":{\"keccak256\":\"0x6721bd74fd0f30c83712287279ca141b13cd3fb1b3a55bb8cfc24c82fdcceebd\",\"urls\":[\"bzz-raw://4bead6e780a4a44ad9001e2dd6b035a4cc06da1455e000c258787db35f1f22c1\",\"dweb:/ipfs/QmbmmeXi2Thb3h6qzbeHHMCjcoGuwmWEdGxhu6dE7FURoS\"]},\"src/token/stFlip.sol\":{\"keccak256\":\"0xe0e0b926c0b1226d646f86750078ab645646c2c7ee36866434e183be17a0c992\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0ea30e2d396c89f8294765f07ea42be2546b8249f9bda6b08ee90775221ba366\",\"dweb:/ipfs/QmaR1Ka88NqDdCpKtB7ScT3tD2D6SJYrZoRtNs834DM4Rk\"]},\"src/token/tStorage.sol\":{\"keccak256\":\"0xa4bf17a319a6667f08e55a41697bc571a4c3d5efbcd85932f14711085ec03941\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ae252a7fe3e44952a35bea7ce39235e1d2dc8a758ac4ef1bb809851079674254\",\"dweb:/ipfs/QmZUAgwp4b5j2YY7CsBNA37ibXYyLmSCTNhAbuAPM6daFq\"]},\"src/utils/AggregatorV1.sol\":{\"keccak256\":\"0x15f8ebdc8bb6ed47def08d6b104ad4f8464d692cb861b3d5076293b2b41fc072\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bd8e01e0f1fd3f784832e57eb568d074ab60606886d480f4189952c54e8bd049\",\"dweb:/ipfs/QmbVu6ocEuBJpAvB9y6AJYk8RZwjwE18cwpRXjtwSXyBbv\"]},\"src/utils/BurnerV1.sol\":{\"keccak256\":\"0x13a9b1e809fcc643527c7a97de6c32e9bb226fdb08854cd72770b2c89e1f29f1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e183ad96391606079d22a0b54d2df7a0285b5e4d3428217eb5a163ef5f3ee3cd\",\"dweb:/ipfs/QmaFibBP7x9s68TTcRdmXNKSzycEZBo4JmwHNGzMo7wqVT\"]},\"src/utils/MinterV1.sol\":{\"keccak256\":\"0x4cb020ba9867d1818b51b776585b5cf43b70e7a7b8f3b88a62668cf75c600258\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1934a8b3e8049466039fd6027b6755aee56315f589d09ba542e74b2b8b8c6f60\",\"dweb:/ipfs/QmancVr7QpY7mkoFjg4uDe6oPswtZnrFJ6H3YTYA6cRFN1\"]},\"src/utils/Ownership.sol\":{\"keccak256\":\"0x4857f28026b90ca5840340332fecc55f607b5cd3b965d4e8a4dfb949933dac86\",\"urls\":[\"bzz-raw://1a5bdfe7f79d84ed3b3635b1aad48f142270360de2cab3bf8cd2eacae3b60819\",\"dweb:/ipfs/QmUncpNxAiSut3AEGAUUvPhdJxF3Qi7JHfS9abxP8hGZyB\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoAttemptsLeft"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountInstantBurn",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amountBurn",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "received",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BurnAggregation",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pool",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CanonicalPoolChanged",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "DefaultAdminDelayChangeCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "newDelay",
              "type": "uint48",
              "indexed": false
            },
            {
              "internalType": "uint48",
              "name": "effectSchedule",
              "type": "uint48",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultAdminDelayChangeScheduled",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "DefaultAdminTransferCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint48",
              "name": "acceptSchedule",
              "type": "uint48",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultAdminTransferScheduled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "swapReceived",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "minted",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakeAggregation",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BURNER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FEE_RECIPIENT_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "GOVERNOR_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MANAGER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MINTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PAUSER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "REBASER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptDefaultAdminTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beginDefaultAdminTransfer"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "burner",
          "outputs": [
            {
              "internalType": "contract BurnerV1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "targetPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetError",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "attempts",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "pool_",
              "type": "address"
            },
            {
              "internalType": "int128",
              "name": "tokenIn",
              "type": "int128"
            },
            {
              "internalType": "int128",
              "name": "tokenOut",
              "type": "int128"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculatePurchasable",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelDefaultAdminTransfer"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "canonicalPool",
          "outputs": [
            {
              "internalType": "contract IStableSwap",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "newDelay",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeDefaultAdminDelay"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultAdmin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultAdminDelay",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultAdminDelayIncreaseWait",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "flip",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "burner_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "liquidityPool_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "stflip_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "flip_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "gov_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pool_",
              "type": "address"
            },
            {
              "internalType": "int128",
              "name": "tokenIn",
              "type": "int128"
            },
            {
              "internalType": "int128",
              "name": "tokenOut",
              "type": "int128"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "marginalCost",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minter",
          "outputs": [
            {
              "internalType": "contract MinterV1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingDefaultAdmin",
          "outputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "schedule",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingDefaultAdminDelay",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "newDelay",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "schedule",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rollbackDefaultAdminDelay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "flip_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFlip"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pool_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPool"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "stflip_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStflip"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountTotal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountSwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumAmountSwapOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stakeAggregate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stflip",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountInstantBurn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountBurn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountSwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumAmountSwapOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unstakeAggregate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptDefaultAdminTransfer()": {
            "details": "Completes a {defaultAdmin} transfer previously started with {beginDefaultAdminTransfer}. After calling the function: - `DEFAULT_ADMIN_ROLE` should be granted to the caller. - `DEFAULT_ADMIN_ROLE` should be revoked from the previous holder. - {pendingDefaultAdmin} should be reset to zero values. Requirements: - Only can be called by the {pendingDefaultAdmin}'s `newAdmin`. - The {pendingDefaultAdmin}'s `acceptSchedule` should've passed."
          },
          "beginDefaultAdminTransfer(address)": {
            "details": "Starts a {defaultAdmin} transfer by setting a {pendingDefaultAdmin} scheduled for acceptance after the current timestamp plus a {defaultAdminDelay}. Requirements: - Only can be called by the current {defaultAdmin}. Emits a DefaultAdminRoleChangeStarted event."
          },
          "calculatePurchasable(uint256,uint256,uint256,address,int128,int128)": {
            "details": "Uses binary search. Must specify number of attempts to prevent infinite loop. This is not a perfect calculation because the marginal cost is not exactly equal to dy. This is a decent approximation though An analytical solution would be ideal but its not easy to get. This is accurate to 1bps, which is good enough because most users are not going to be buying out the entire discount on their own. Even if they are, 1 bps +- is okay. Some possible inaccuracies with very small pool sizes.",
            "params": {
              "attempts": "The number of hops within the binary search allowed before reverting",
              "targetError": "The acceptable range around `targetPrice` for acceptable return value. 10**18 = 100%",
              "targetPrice": "The target price to calculate the amount of stFLIP purchasable until. 10**18 = 1"
            }
          },
          "cancelDefaultAdminTransfer()": {
            "details": "Cancels a {defaultAdmin} transfer previously started with {beginDefaultAdminTransfer}. A {pendingDefaultAdmin} not yet accepted can also be cancelled with this function. Requirements: - Only can be called by the current {defaultAdmin}. May emit a DefaultAdminTransferCanceled event."
          },
          "changeDefaultAdminDelay(uint48)": {
            "details": "Initiates a {defaultAdminDelay} update by setting a {pendingDefaultAdminDelay} scheduled for getting into effect after the current timestamp plus a {defaultAdminDelay}. This function guarantees that any call to {beginDefaultAdminTransfer} done between the timestamp this method is called and the {pendingDefaultAdminDelay} effect schedule will use the current {defaultAdminDelay} set before calling. The {pendingDefaultAdminDelay}'s effect schedule is defined in a way that waiting until the schedule and then calling {beginDefaultAdminTransfer} with the new delay will take at least the same as another {defaultAdmin} complete transfer (including acceptance). The schedule is designed for two scenarios: - When the delay is changed for a larger one the schedule is `block.timestamp + newDelay` capped by {defaultAdminDelayIncreaseWait}. - When the delay is changed for a shorter one, the schedule is `block.timestamp + (current delay - new delay)`. A {pendingDefaultAdminDelay} that never got into effect will be canceled in favor of a new scheduled change. Requirements: - Only can be called by the current {defaultAdmin}. Emits a DefaultAdminDelayChangeScheduled event and may emit a DefaultAdminDelayChangeCanceled event."
          },
          "defaultAdmin()": {
            "details": "Returns the address of the current `DEFAULT_ADMIN_ROLE` holder."
          },
          "defaultAdminDelay()": {
            "details": "Returns the delay required to schedule the acceptance of a {defaultAdmin} transfer started. This delay will be added to the current timestamp when calling {beginDefaultAdminTransfer} to set the acceptance schedule. NOTE: If a delay change has been scheduled, it will take effect as soon as the schedule passes, making this function returns the new delay. See {changeDefaultAdminDelay}."
          },
          "defaultAdminDelayIncreaseWait()": {
            "details": "Maximum time in seconds for an increase to {defaultAdminDelay} (that is scheduled using {changeDefaultAdminDelay}) to take effect. Default to 5 days. When the {defaultAdminDelay} is scheduled to be increased, it goes into effect after the new delay has passed with the purpose of giving enough time for reverting any accidental change (i.e. using milliseconds instead of seconds) that may lock the contract. However, to avoid excessive schedules, the wait is capped by this function and it can be overrode for a custom {defaultAdminDelay} increase scheduling. IMPORTANT: Make sure to add a reasonable amount of time while overriding this value, otherwise, there's a risk of setting a high new delay that goes into effect almost immediately without the possibility of human intervention in the case of an input error (eg. set milliseconds instead of seconds)."
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "See {AccessControl-grantRole}. Reverts for `DEFAULT_ADMIN_ROLE`."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "marginalCost(address,int128,int128,uint256)": {
            "params": {
              "amount": "The unit to calculate at",
              "pool_": "The pool to calculate the marginal cost for. If 0, uses the canonical pool",
              "tokenIn": "The token index for the in token",
              "tokenOut": "Token index for the out token"
            }
          },
          "owner()": {
            "details": "See {IERC5313-owner}."
          },
          "pendingDefaultAdmin()": {
            "details": "Returns a tuple of a `newAdmin` and an accept schedule. After the `schedule` passes, the `newAdmin` will be able to accept the {defaultAdmin} role by calling {acceptDefaultAdminTransfer}, completing the role transfer. A zero value only in `acceptSchedule` indicates no pending admin transfer. NOTE: A zero address `newAdmin` means that {defaultAdmin} is being renounced."
          },
          "pendingDefaultAdminDelay()": {
            "details": "Returns a tuple of `newDelay` and an effect schedule. After the `schedule` passes, the `newDelay` will get into effect immediately for every new {defaultAdmin} transfer started with {beginDefaultAdminTransfer}. A zero value only in `effectSchedule` indicates no pending delay change. NOTE: A zero value only for `newDelay` means that the next {defaultAdminDelay} will be zero after the effect schedule."
          },
          "renounceRole(bytes32,address)": {
            "details": "See {AccessControl-renounceRole}. For the `DEFAULT_ADMIN_ROLE`, it only allows renouncing in two steps by first calling {beginDefaultAdminTransfer} to the `address(0)`, so it's required that the {pendingDefaultAdmin} schedule has also passed when calling this function. After its execution, it will not be possible to call `onlyRole(DEFAULT_ADMIN_ROLE)` functions. NOTE: Renouncing `DEFAULT_ADMIN_ROLE` will leave the contract without a {defaultAdmin}, thereby disabling any functionality that is only available for it, and the possibility of reassigning a non-administrated role."
          },
          "revokeRole(bytes32,address)": {
            "details": "See {AccessControl-revokeRole}. Reverts for `DEFAULT_ADMIN_ROLE`."
          },
          "rollbackDefaultAdminDelay()": {
            "details": "Cancels a scheduled {defaultAdminDelay} change. Requirements: - Only can be called by the current {defaultAdmin}. May emit a DefaultAdminDelayChangeCanceled event."
          },
          "setPool(address)": {
            "params": {
              "pool_": "Address of the new pool"
            }
          },
          "stakeAggregate(uint256,uint256,uint256)": {
            "details": "Contract will only swap if `amountSwap > 0`. Contract will only mint if amountSwap < amountTotal.  Use `calculatePurchasable` on frontend to determine route prior to calling this.  ",
            "params": {
              "amountSwap": "The amount of FLIP to swap for stFLIP.",
              "amountTotal": "The total amount of FLIP to spend.",
              "minimumAmountSwapOut": "The minimum amount of stFLIP to receive from the swap piece of the route"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "unstakeAggregate(uint256,uint256,uint256,uint256)": {
            "details": "Contract will only swap if `amountSwap > 0`. Contract will only mint if amountSwap < amountTotal.",
            "params": {
              "amountBurn": "The amount of stFLIP to burn.",
              "amountInstantBurn": "The amount of stFLIP to instant burn",
              "amountSwap": "The amount of stFLIP to swap for FLIP",
              "minimumAmountSwapOut": "The minimum amount of FLIP  to receive from the swap piece of the route"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "calculatePurchasable(uint256,uint256,uint256,address,int128,int128)": {
            "notice": "Calculates the total amount of stFLIP purchasable within targetError of a certain targetPrice"
          },
          "marginalCost(address,int128,int128,uint256)": {
            "notice": "Public function for marginal cost"
          },
          "setPool(address)": {
            "notice": "Change the canonical pool used in stakeAggregate/unstakeAggregate"
          },
          "stakeAggregate(uint256,uint256,uint256)": {
            "notice": "Spends FLIP to mint and swap for stFLIP in the same transaction."
          },
          "unstakeAggregate(uint256,uint256,uint256,uint256)": {
            "notice": "Spends stFLIP for FLIP via swap, instant burn, and unstake request."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/frax-governance/node_modules/@chainlink/",
        "@eth-optimism/=lib/frax-governance/node_modules/@eth-optimism/contracts/",
        "@gnosis.pm/=lib/frax-governance/node_modules/@gnosis.pm/",
        "@governance/=lib/frax-governance/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@script-deploy/=script/deploy/",
        "@solmate/=lib/solmate/",
        "@src/=src/",
        "@test/=test/",
        "ds-test/=lib/frax-governance/node_modules/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "frax-governance/=lib/frax-governance/",
        "frax-standard-solidity/=lib/frax-governance/node_modules/frax-standard-solidity/src/",
        "frax-std/=lib/frax-governance/node_modules/frax-standard-solidity/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin-solidity/=lib/frax-governance/node_modules/openzeppelin-solidity/contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "safe-contracts/=lib/frax-governance/node_modules/@gnosis.pm/safe-contracts/contracts/",
        "safe-tools/=lib/frax-governance/node_modules/safe-tools/src/",
        "solady/=lib/frax-governance/node_modules/solady/src/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/utils/AggregatorV1.sol": "AggregatorV1"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlDefaultAdminRulesUpgradeable.sol": {
        "keccak256": "0x11f2411fad76fe0d4704b5cdc294936ef37134e418f7dcc065b0cbe4915220a3",
        "urls": [
          "bzz-raw://3907c9c7d677a91dbbaa806c4ed41b5b4320b889a909e77c87c4301906d7240e",
          "dweb:/ipfs/QmaRUy6eC459XPv7vRuvS38YmncUgQJvrHZuLbYC3s4Fp8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831",
        "urls": [
          "bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709",
          "dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlDefaultAdminRulesUpgradeable.sol": {
        "keccak256": "0x6d4b7ecb2cc2ce6fbe36243135c93cbdb5c83627986ca984e492c7cf5e23a512",
        "urls": [
          "bzz-raw://469969128ab03eece200d1b39795b89722c72b47a8b4234cef07664d3ab54113",
          "dweb:/ipfs/QmSrYtMYfAyexPVhrcXGiS7nJxk8hL3e7CxkwVvi9KkH68"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol": {
        "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
        "urls": [
          "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
          "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/governance/utils/IVotesUpgradeable.sol": {
        "keccak256": "0xccd09723ea79683149efb189c56a122d894fac60711ba51afba1adcf7cefeaed",
        "urls": [
          "bzz-raw://d62304242f91dd31db43083f05ba4ed058c5d2f5c1dc03b9bcad9edb71c5d9f0",
          "dweb:/ipfs/QmYyPjJusN37F8HnsnNACU8HCeHPFYjsqJCEAZUTwZUE9t"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/governance/utils/VotesUpgradeable.sol": {
        "keccak256": "0x117b5a3be1014e7ef434f56e96bc2c00ffcc47b730a5cee07ca83cb4e4aef5fc",
        "urls": [
          "bzz-raw://36c878c5ccbc8f15e54a9d3ca59bf014eac58403de5a36d2118505b6743dca7c",
          "dweb:/ipfs/QmYg7auKGQgujUkDcxyTR3J44DCJA4VemLeed3nfM3inic"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5267Upgradeable.sol": {
        "keccak256": "0xe562dab443278837fa50faddb76743399e942181881db8dccaea3bd1712994db",
        "urls": [
          "bzz-raw://79ebe0e661396045cefe94f4256398cf632756d779a6871319db374c9eb128c9",
          "dweb:/ipfs/QmfCTCivb9fFhyCX8hzushzcKunvKL2N9RDsnRNdvbd11M"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5313Upgradeable.sol": {
        "keccak256": "0x7bbdfd0cf46f09ca10e42db940e0ae8b54e24beec35429f282d90929ac812f68",
        "urls": [
          "bzz-raw://863d4b1341fa392eb0e10ee3ff85db20ab6bdb30054c47ae6bc5c3d1aad334ba",
          "dweb:/ipfs/QmaZspQdbYH19eLQttrt2RisRPAUkMf3gCcCNHQNgsBXe9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5805Upgradeable.sol": {
        "keccak256": "0x19848eec9045c8b91f1ab6b1853966443e3e36bcbc307593ed37a9f0df179d69",
        "urls": [
          "bzz-raw://a07972c1330ee99a5d051b393260e01412ac4c14c7bc4d75d80b7cce291a6412",
          "dweb:/ipfs/QmQx1ZiAo4AbSobN41c1xUEtyX1QejydWCmY7Sj3H5aDNv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC6372Upgradeable.sol": {
        "keccak256": "0x3026befd6d69d1b46960bdc35a2ad37c0e1352f26983ee3728dd61fd32aa308a",
        "urls": [
          "bzz-raw://c2001b7209fd4920ec7674f194db7fe163dfea7a7af2dd25fe6c0e5a94dc595c",
          "dweb:/ipfs/QmXX2zTFyiNWoDxivV3trKcKWifAENMqNAB34NgjWq5feX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/CheckpointsUpgradeable.sol": {
        "keccak256": "0x51ea916844ee2c53874c6895ce37acbca0250977b49b48909d75ad439f38f211",
        "urls": [
          "bzz-raw://1be66618a68c62dfb767443bccba219ea240ebac287a7a23a32af4d2cbe2d9b9",
          "dweb:/ipfs/QmegRfPREH1UTq56ucSgGByYZqepGoRjKc51Jd3guvqpBJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4",
        "urls": [
          "bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c",
          "dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol": {
        "keccak256": "0xeb8d6be406a373771724922eb41b5d593bc8e2dc705daa22cd1145cfc8f5a3a0",
        "urls": [
          "bzz-raw://7dcf8f1b2f1869895bffaa1d83ea0e3ab5b42275c97248eda76441e64b343b66",
          "dweb:/ipfs/QmRqs6vX3dnVkRtdXmrxP7a677eaNnTUjY48DT96q6dMcZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol": {
        "keccak256": "0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b",
        "urls": [
          "bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c",
          "dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90",
        "urls": [
          "bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263",
          "dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d",
        "urls": [
          "bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5",
          "dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2",
        "urls": [
          "bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2",
          "dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol": {
        "keccak256": "0x8e99882a991853dc446278576c8cb9b3a5ded84642e9bcc917b1677807c2f18c",
        "urls": [
          "bzz-raw://310153c1a4c739002ffbc1351ed1dd7488a0d20f5dd816353332fc2c1d81e0a3",
          "dweb:/ipfs/QmcvwXQVUBRTEAoNcvwSVFmhpHUXQ21s2Hfj79hq2uQNVM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
        "keccak256": "0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689",
        "urls": [
          "bzz-raw://a45c64b97311fabbcbe8dad7e94fa89e06a7f96060d5565326ef706f5f239017",
          "dweb:/ipfs/QmeU2jiBGbHhz9DqRotjbpAx5s2xExDSRQtSD5ENjuHzDq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x4176da81c08b0a6ecb49cd9a1bf3426c364b23f3b1a75ff517d11d33dd492eb6",
        "urls": [
          "bzz-raw://cde1f66dc8121a6f95c4446f4baef237f1aa841ab6ad8526588ee8ff144905af",
          "dweb:/ipfs/QmUXEzNgMNWV224M9Puws38VgiRGthmm2HmhCjexbGyjZX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/mock/IStableSwap.sol": {
        "keccak256": "0x6721bd74fd0f30c83712287279ca141b13cd3fb1b3a55bb8cfc24c82fdcceebd",
        "urls": [
          "bzz-raw://4bead6e780a4a44ad9001e2dd6b035a4cc06da1455e000c258787db35f1f22c1",
          "dweb:/ipfs/QmbmmeXi2Thb3h6qzbeHHMCjcoGuwmWEdGxhu6dE7FURoS"
        ],
        "license": null
      },
      "src/token/stFlip.sol": {
        "keccak256": "0xe0e0b926c0b1226d646f86750078ab645646c2c7ee36866434e183be17a0c992",
        "urls": [
          "bzz-raw://0ea30e2d396c89f8294765f07ea42be2546b8249f9bda6b08ee90775221ba366",
          "dweb:/ipfs/QmaR1Ka88NqDdCpKtB7ScT3tD2D6SJYrZoRtNs834DM4Rk"
        ],
        "license": "BUSL-1.1"
      },
      "src/token/tStorage.sol": {
        "keccak256": "0xa4bf17a319a6667f08e55a41697bc571a4c3d5efbcd85932f14711085ec03941",
        "urls": [
          "bzz-raw://ae252a7fe3e44952a35bea7ce39235e1d2dc8a758ac4ef1bb809851079674254",
          "dweb:/ipfs/QmZUAgwp4b5j2YY7CsBNA37ibXYyLmSCTNhAbuAPM6daFq"
        ],
        "license": "BUSL-1.1"
      },
      "src/utils/AggregatorV1.sol": {
        "keccak256": "0x15f8ebdc8bb6ed47def08d6b104ad4f8464d692cb861b3d5076293b2b41fc072",
        "urls": [
          "bzz-raw://bd8e01e0f1fd3f784832e57eb568d074ab60606886d480f4189952c54e8bd049",
          "dweb:/ipfs/QmbVu6ocEuBJpAvB9y6AJYk8RZwjwE18cwpRXjtwSXyBbv"
        ],
        "license": "BUSL-1.1"
      },
      "src/utils/BurnerV1.sol": {
        "keccak256": "0x13a9b1e809fcc643527c7a97de6c32e9bb226fdb08854cd72770b2c89e1f29f1",
        "urls": [
          "bzz-raw://e183ad96391606079d22a0b54d2df7a0285b5e4d3428217eb5a163ef5f3ee3cd",
          "dweb:/ipfs/QmaFibBP7x9s68TTcRdmXNKSzycEZBo4JmwHNGzMo7wqVT"
        ],
        "license": "BUSL-1.1"
      },
      "src/utils/MinterV1.sol": {
        "keccak256": "0x4cb020ba9867d1818b51b776585b5cf43b70e7a7b8f3b88a62668cf75c600258",
        "urls": [
          "bzz-raw://1934a8b3e8049466039fd6027b6755aee56315f589d09ba542e74b2b8b8c6f60",
          "dweb:/ipfs/QmancVr7QpY7mkoFjg4uDe6oPswtZnrFJ6H3YTYA6cRFN1"
        ],
        "license": "BUSL-1.1"
      },
      "src/utils/Ownership.sol": {
        "keccak256": "0x4857f28026b90ca5840340332fecc55f607b5cd3b965d4e8a4dfb949933dac86",
        "urls": [
          "bzz-raw://1a5bdfe7f79d84ed3b3635b1aad48f142270360de2cab3bf8cd2eacae3b60819",
          "dweb:/ipfs/QmUncpNxAiSut3AEGAUUvPhdJxF3Qi7JHfS9abxP8hGZyB"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 45871,
        "contract": "src/utils/AggregatorV1.sol:AggregatorV1",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 45874,
        "contract": "src/utils/AggregatorV1.sol:AggregatorV1",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 47945,
        "contract": "src/utils/AggregatorV1.sol:AggregatorV1",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 48942,
        "contract": "src/utils/AggregatorV1.sol:AggregatorV1",
        "label": "__gap",
        "offset": 0,
        "slot": "51",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 44957,
        "contract": "src/utils/AggregatorV1.sol:AggregatorV1",
        "label": "_roles",
        "offset": 0,
        "slot": "101",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)44952_storage)"
      },
      {
        "astId": 45252,
        "contract": "src/utils/AggregatorV1.sol:AggregatorV1",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 44222,
        "contract": "src/utils/AggregatorV1.sol:AggregatorV1",
        "label": "_pendingDefaultAdmin",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 44224,
        "contract": "src/utils/AggregatorV1.sol:AggregatorV1",
        "label": "_pendingDefaultAdminSchedule",
        "offset": 20,
        "slot": "151",
        "type": "t_uint48"
      },
      {
        "astId": 44226,
        "contract": "src/utils/AggregatorV1.sol:AggregatorV1",
        "label": "_currentDelay",
        "offset": 26,
        "slot": "151",
        "type": "t_uint48"
      },
      {
        "astId": 44228,
        "contract": "src/utils/AggregatorV1.sol:AggregatorV1",
        "label": "_currentDefaultAdmin",
        "offset": 0,
        "slot": "152",
        "type": "t_address"
      },
      {
        "astId": 44230,
        "contract": "src/utils/AggregatorV1.sol:AggregatorV1",
        "label": "_pendingDelay",
        "offset": 20,
        "slot": "152",
        "type": "t_uint48"
      },
      {
        "astId": 44232,
        "contract": "src/utils/AggregatorV1.sol:AggregatorV1",
        "label": "_pendingDelaySchedule",
        "offset": 26,
        "slot": "152",
        "type": "t_uint48"
      },
      {
        "astId": 44916,
        "contract": "src/utils/AggregatorV1.sol:AggregatorV1",
        "label": "__gap",
        "offset": 0,
        "slot": "153",
        "type": "t_array(t_uint256)48_storage"
      },
      {
        "astId": 73332,
        "contract": "src/utils/AggregatorV1.sol:AggregatorV1",
        "label": "stflip",
        "offset": 0,
        "slot": "201",
        "type": "t_contract(IERC20)57630"
      },
      {
        "astId": 73335,
        "contract": "src/utils/AggregatorV1.sol:AggregatorV1",
        "label": "flip",
        "offset": 0,
        "slot": "202",
        "type": "t_contract(IERC20)57630"
      },
      {
        "astId": 73338,
        "contract": "src/utils/AggregatorV1.sol:AggregatorV1",
        "label": "minter",
        "offset": 0,
        "slot": "203",
        "type": "t_contract(MinterV1)74683"
      },
      {
        "astId": 73341,
        "contract": "src/utils/AggregatorV1.sol:AggregatorV1",
        "label": "burner",
        "offset": 0,
        "slot": "204",
        "type": "t_contract(BurnerV1)74564"
      },
      {
        "astId": 73344,
        "contract": "src/utils/AggregatorV1.sol:AggregatorV1",
        "label": "canonicalPool",
        "offset": 0,
        "slot": "205",
        "type": "t_contract(IStableSwap)72058"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)48_storage": {
        "encoding": "inplace",
        "label": "uint256[48]",
        "numberOfBytes": "1536",
        "base": "t_uint256"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(BurnerV1)74564": {
        "encoding": "inplace",
        "label": "contract BurnerV1",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)57630": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IStableSwap)72058": {
        "encoding": "inplace",
        "label": "contract IStableSwap",
        "numberOfBytes": "20"
      },
      "t_contract(MinterV1)74683": {
        "encoding": "inplace",
        "label": "contract MinterV1",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)44952_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)44952_storage"
      },
      "t_struct(RoleData)44952_storage": {
        "encoding": "inplace",
        "label": "struct AccessControlUpgradeable.RoleData",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 44949,
            "contract": "src/utils/AggregatorV1.sol:AggregatorV1",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 44951,
            "contract": "src/utils/AggregatorV1.sol:AggregatorV1",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint48": {
        "encoding": "inplace",
        "label": "uint48",
        "numberOfBytes": "6"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "ast": {
    "absolutePath": "src/utils/AggregatorV1.sol",
    "id": 74057,
    "exportedSymbols": {
      "AccessControlDefaultAdminRulesUpgradeable": [
        44917
      ],
      "AccessControlUpgradeable": [
        45253
      ],
      "Address": [
        58743
      ],
      "AddressUpgradeable": [
        46363
      ],
      "AggregatorV1": [
        74056
      ],
      "BurnerV1": [
        74564
      ],
      "CheckpointsUpgradeable": [
        47904
      ],
      "Context": [
        60462
      ],
      "ContextUpgradeable": [
        47946
      ],
      "CountersUpgradeable": [
        48020
      ],
      "ECDSAUpgradeable": [
        48615
      ],
      "EIP712Upgradeable": [
        48899
      ],
      "ERC165Upgradeable": [
        48943
      ],
      "ERC1967Proxy": [
        56099
      ],
      "ERC1967Upgrade": [
        56403
      ],
      "FixedPointMathLib": [
        64710
      ],
      "IAccessControlDefaultAdminRulesUpgradeable": [
        45338
      ],
      "IAccessControlUpgradeable": [
        45411
      ],
      "IBeacon": [
        56465
      ],
      "IERC165Upgradeable": [
        48955
      ],
      "IERC1822Proxiable": [
        56062
      ],
      "IERC1967": [
        56003
      ],
      "IERC20": [
        57630
      ],
      "IERC20Permit": [
        58019
      ],
      "IERC5267Upgradeable": [
        45830
      ],
      "IERC5313Upgradeable": [
        45840
      ],
      "IERC5805Upgradeable": [
        45849
      ],
      "IERC6372Upgradeable": [
        45864
      ],
      "IStableSwap": [
        72058
      ],
      "ITransparentUpgradeableProxy": [
        56635
      ],
      "IVotesUpgradeable": [
        45449
      ],
      "Initializable": [
        46033
      ],
      "Math": [
        62563
      ],
      "MathUpgradeable": [
        49821
      ],
      "MinterV1": [
        74683
      ],
      "Ownable": [
        51969
      ],
      "Ownership": [
        75911
      ],
      "Proxy": [
        56455
      ],
      "ProxyAdmin": [
        56601
      ],
      "SafeCast": [
        64104
      ],
      "SafeCastUpgradeable": [
        51362
      ],
      "SafeERC20": [
        58395
      ],
      "SignedMathUpgradeable": [
        51467
      ],
      "StorageSlot": [
        60862
      ],
      "StringsUpgradeable": [
        48249
      ],
      "TokenStorage": [
        73316
      ],
      "TransparentUpgradeableProxy": [
        56924
      ],
      "VotesUpgradeable": [
        45805
      ],
      "console": [
        18379
      ],
      "stFlip": [
        73252
      ]
    },
    "nodeType": "SourceUnit",
    "src": "182:9143:188",
    "nodes": [
      {
        "id": 73318,
        "nodeType": "PragmaDirective",
        "src": "182:23:188",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 73319,
        "nodeType": "ImportDirective",
        "src": "207:33:188",
        "nodes": [],
        "absolutePath": "src/mock/IStableSwap.sol",
        "file": "../mock/IStableSwap.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74057,
        "sourceUnit": 72059,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73320,
        "nodeType": "ImportDirective",
        "src": "241:24:188",
        "nodes": [],
        "absolutePath": "src/utils/MinterV1.sol",
        "file": "./MinterV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74057,
        "sourceUnit": 74684,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73321,
        "nodeType": "ImportDirective",
        "src": "266:24:188",
        "nodes": [],
        "absolutePath": "src/utils/BurnerV1.sol",
        "file": "./BurnerV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74057,
        "sourceUnit": 74565,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73322,
        "nodeType": "ImportDirective",
        "src": "291:31:188",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74057,
        "sourceUnit": 18380,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73323,
        "nodeType": "ImportDirective",
        "src": "323:75:188",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74057,
        "sourceUnit": 46034,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73324,
        "nodeType": "ImportDirective",
        "src": "399:66:188",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol",
        "file": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74057,
        "sourceUnit": 56602,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 74056,
        "nodeType": "ContractDefinition",
        "src": "993:8331:188",
        "nodes": [
          {
            "id": 73332,
            "nodeType": "VariableDeclaration",
            "src": "1050:20:188",
            "nodes": [],
            "constant": false,
            "functionSelector": "f025b209",
            "mutability": "mutable",
            "name": "stflip",
            "nameLocation": "1064:6:188",
            "scope": 74056,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$57630",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 73331,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 73330,
                "name": "IERC20",
                "nameLocations": [
                  "1050:6:188"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 57630,
                "src": "1050:6:188"
              },
              "referencedDeclaration": 57630,
              "src": "1050:6:188",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$57630",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 73335,
            "nodeType": "VariableDeclaration",
            "src": "1076:18:188",
            "nodes": [],
            "constant": false,
            "functionSelector": "cde4efa9",
            "mutability": "mutable",
            "name": "flip",
            "nameLocation": "1090:4:188",
            "scope": 74056,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$57630",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 73334,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 73333,
                "name": "IERC20",
                "nameLocations": [
                  "1076:6:188"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 57630,
                "src": "1076:6:188"
              },
              "referencedDeclaration": 57630,
              "src": "1076:6:188",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$57630",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 73338,
            "nodeType": "VariableDeclaration",
            "src": "1100:22:188",
            "nodes": [],
            "constant": false,
            "functionSelector": "07546172",
            "mutability": "mutable",
            "name": "minter",
            "nameLocation": "1116:6:188",
            "scope": 74056,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MinterV1_$74683",
              "typeString": "contract MinterV1"
            },
            "typeName": {
              "id": 73337,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 73336,
                "name": "MinterV1",
                "nameLocations": [
                  "1100:8:188"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 74683,
                "src": "1100:8:188"
              },
              "referencedDeclaration": 74683,
              "src": "1100:8:188",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterV1_$74683",
                "typeString": "contract MinterV1"
              }
            },
            "visibility": "public"
          },
          {
            "id": 73341,
            "nodeType": "VariableDeclaration",
            "src": "1128:22:188",
            "nodes": [],
            "constant": false,
            "functionSelector": "27810b6e",
            "mutability": "mutable",
            "name": "burner",
            "nameLocation": "1144:6:188",
            "scope": 74056,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BurnerV1_$74564",
              "typeString": "contract BurnerV1"
            },
            "typeName": {
              "id": 73340,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 73339,
                "name": "BurnerV1",
                "nameLocations": [
                  "1128:8:188"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 74564,
                "src": "1128:8:188"
              },
              "referencedDeclaration": 74564,
              "src": "1128:8:188",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BurnerV1_$74564",
                "typeString": "contract BurnerV1"
              }
            },
            "visibility": "public"
          },
          {
            "id": 73344,
            "nodeType": "VariableDeclaration",
            "src": "1156:32:188",
            "nodes": [],
            "constant": false,
            "functionSelector": "3cee0be3",
            "mutability": "mutable",
            "name": "canonicalPool",
            "nameLocation": "1175:13:188",
            "scope": 74056,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStableSwap_$72058",
              "typeString": "contract IStableSwap"
            },
            "typeName": {
              "id": 73343,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 73342,
                "name": "IStableSwap",
                "nameLocations": [
                  "1156:11:188"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 72058,
                "src": "1156:11:188"
              },
              "referencedDeclaration": 72058,
              "src": "1156:11:188",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStableSwap_$72058",
                "typeString": "contract IStableSwap"
              }
            },
            "visibility": "public"
          },
          {
            "id": 73351,
            "nodeType": "FunctionDefinition",
            "src": "1195:54:188",
            "nodes": [],
            "body": {
              "id": 73350,
              "nodeType": "Block",
              "src": "1210:39:188",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 73347,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46014,
                      "src": "1220:20:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 73348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:22:188",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73349,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:22:188"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 73345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1207:2:188"
            },
            "returnParameters": {
              "id": 73346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1210:0:188"
            },
            "scope": 74056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 73468,
            "nodeType": "FunctionDefinition",
            "src": "1255:832:188",
            "nodes": [],
            "body": {
              "id": 73467,
              "nodeType": "Block",
              "src": "1399:688:188",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 73372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73368,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73338,
                      "src": "1454:6:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MinterV1_$74683",
                        "typeString": "contract MinterV1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 73370,
                          "name": "minter_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73353,
                          "src": "1472:7:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 73369,
                        "name": "MinterV1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74683,
                        "src": "1463:8:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MinterV1_$74683_$",
                          "typeString": "type(contract MinterV1)"
                        }
                      },
                      "id": 73371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1463:17:188",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MinterV1_$74683",
                        "typeString": "contract MinterV1"
                      }
                    },
                    "src": "1454:26:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MinterV1_$74683",
                      "typeString": "contract MinterV1"
                    }
                  },
                  "id": 73373,
                  "nodeType": "ExpressionStatement",
                  "src": "1454:26:188"
                },
                {
                  "expression": {
                    "id": 73378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73374,
                      "name": "burner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73341,
                      "src": "1490:6:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BurnerV1_$74564",
                        "typeString": "contract BurnerV1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 73376,
                          "name": "burner_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73355,
                          "src": "1508:7:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 73375,
                        "name": "BurnerV1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74564,
                        "src": "1499:8:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BurnerV1_$74564_$",
                          "typeString": "type(contract BurnerV1)"
                        }
                      },
                      "id": 73377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1499:17:188",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BurnerV1_$74564",
                        "typeString": "contract BurnerV1"
                      }
                    },
                    "src": "1490:26:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BurnerV1_$74564",
                      "typeString": "contract BurnerV1"
                    }
                  },
                  "id": 73379,
                  "nodeType": "ExpressionStatement",
                  "src": "1490:26:188"
                },
                {
                  "expression": {
                    "id": 73384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73380,
                      "name": "canonicalPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73344,
                      "src": "1526:13:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStableSwap_$72058",
                        "typeString": "contract IStableSwap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 73382,
                          "name": "liquidityPool_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73357,
                          "src": "1554:14:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 73381,
                        "name": "IStableSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72058,
                        "src": "1542:11:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IStableSwap_$72058_$",
                          "typeString": "type(contract IStableSwap)"
                        }
                      },
                      "id": 73383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1542:27:188",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStableSwap_$72058",
                        "typeString": "contract IStableSwap"
                      }
                    },
                    "src": "1526:43:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStableSwap_$72058",
                      "typeString": "contract IStableSwap"
                    }
                  },
                  "id": 73385,
                  "nodeType": "ExpressionStatement",
                  "src": "1526:43:188"
                },
                {
                  "expression": {
                    "id": 73390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73386,
                      "name": "flip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73335,
                      "src": "1579:4:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$57630",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 73388,
                          "name": "flip_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73361,
                          "src": "1593:5:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 73387,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57630,
                        "src": "1586:6:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$57630_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 73389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1586:13:188",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$57630",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1579:20:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$57630",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 73391,
                  "nodeType": "ExpressionStatement",
                  "src": "1579:20:188"
                },
                {
                  "expression": {
                    "id": 73396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73392,
                      "name": "stflip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73332,
                      "src": "1609:6:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$57630",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 73394,
                          "name": "stflip_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73359,
                          "src": "1625:7:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 73393,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57630,
                        "src": "1618:6:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$57630_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 73395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1618:15:188",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$57630",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1609:24:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$57630",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 73397,
                  "nodeType": "ExpressionStatement",
                  "src": "1609:24:188"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 73403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 73398,
                      "name": "liquidityPool_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73357,
                      "src": "1727:14:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 73401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1753:1:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 73400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1745:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 73399,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1745:7:188",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 73402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1745:10:188",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1727:28:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 73419,
                  "nodeType": "IfStatement",
                  "src": "1723:115:188",
                  "trueBody": {
                    "id": 73418,
                    "nodeType": "Block",
                    "src": "1757:81:188",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 73409,
                                  "name": "liquidityPool_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73357,
                                  "src": "1792:14:188",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 73408,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1784:7:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 73407,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1784:7:188",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 73410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1784:23:188",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 73413,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1814:7:188",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 73412,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1814:7:188",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "id": 73411,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "1809:4:188",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 73414,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1809:13:188",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                                  "typeString": "type(uint256)"
                                }
                              },
                              "id": 73415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1823:3:188",
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "1809:17:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 73404,
                              "name": "flip",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73335,
                              "src": "1771:4:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$57630",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 73406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1776:7:188",
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57617,
                            "src": "1771:12:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 73416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1771:56:188",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 73417,
                        "nodeType": "ExpressionStatement",
                        "src": "1771:56:188"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 73425,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73338,
                            "src": "1868:6:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MinterV1_$74683",
                              "typeString": "contract MinterV1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MinterV1_$74683",
                              "typeString": "contract MinterV1"
                            }
                          ],
                          "id": 73424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1860:7:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 73423,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1860:7:188",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 73426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1860:15:188",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 73429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1882:7:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 73428,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1882:7:188",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 73427,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1877:4:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 73430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1877:13:188",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 73431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1891:3:188",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1877:17:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 73420,
                        "name": "flip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73335,
                        "src": "1847:4:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$57630",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 73422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1852:7:188",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57617,
                      "src": "1847:12:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 73432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1847:48:188",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 73433,
                  "nodeType": "ExpressionStatement",
                  "src": "1847:48:188"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 73439,
                            "name": "burner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73341,
                            "src": "1928:6:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BurnerV1_$74564",
                              "typeString": "contract BurnerV1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BurnerV1_$74564",
                              "typeString": "contract BurnerV1"
                            }
                          ],
                          "id": 73438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1920:7:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 73437,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1920:7:188",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 73440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1920:15:188",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 73443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1942:7:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 73442,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1942:7:188",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 73441,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1937:4:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 73444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1937:13:188",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 73445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1951:3:188",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1937:17:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 73434,
                        "name": "stflip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73332,
                        "src": "1905:6:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$57630",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 73436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1912:7:188",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57617,
                      "src": "1905:14:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 73446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1905:50:188",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 73447,
                  "nodeType": "ExpressionStatement",
                  "src": "1905:50:188"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 73453,
                            "name": "liquidityPool_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73357,
                            "src": "1988:14:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 73452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1980:7:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 73451,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1980:7:188",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 73454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1980:23:188",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 73457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2010:7:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 73456,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2010:7:188",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 73455,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2005:4:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 73458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2005:13:188",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 73459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2019:3:188",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2005:17:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 73448,
                        "name": "stflip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73332,
                        "src": "1965:6:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$57630",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 73450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1972:7:188",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57617,
                      "src": "1965:14:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 73460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1965:58:188",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 73461,
                  "nodeType": "ExpressionStatement",
                  "src": "1965:58:188"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 73463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2072:1:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 73464,
                        "name": "gov_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73363,
                        "src": "2075:4:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 73462,
                      "name": "__AccessControlDefaultAdminRules_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44248,
                      "src": "2034:37:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint48_$_t_address_$returns$__$",
                        "typeString": "function (uint48,address)"
                      }
                    },
                    "id": 73465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2034:46:188",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73466,
                  "nodeType": "ExpressionStatement",
                  "src": "2034:46:188"
                }
              ]
            },
            "functionSelector": "cc2a9a5b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 73366,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 73365,
                  "name": "initializer",
                  "nameLocations": [
                    "1380:11:188"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45935,
                  "src": "1380:11:188"
                },
                "nodeType": "ModifierInvocation",
                "src": "1380:11:188"
              }
            ],
            "name": "initialize",
            "nameLocation": "1264:10:188",
            "parameters": {
              "id": 73364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73353,
                  "mutability": "mutable",
                  "name": "minter_",
                  "nameLocation": "1284:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73468,
                  "src": "1276:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1276:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73355,
                  "mutability": "mutable",
                  "name": "burner_",
                  "nameLocation": "1301:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73468,
                  "src": "1293:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73357,
                  "mutability": "mutable",
                  "name": "liquidityPool_",
                  "nameLocation": "1318:14:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73468,
                  "src": "1310:22:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73356,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1310:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73359,
                  "mutability": "mutable",
                  "name": "stflip_",
                  "nameLocation": "1342:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73468,
                  "src": "1334:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1334:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73361,
                  "mutability": "mutable",
                  "name": "flip_",
                  "nameLocation": "1359:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73468,
                  "src": "1351:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73360,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1351:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73363,
                  "mutability": "mutable",
                  "name": "gov_",
                  "nameLocation": "1374:4:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73468,
                  "src": "1366:12:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73362,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1366:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1275:104:188"
            },
            "returnParameters": {
              "id": 73367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1399:0:188"
            },
            "scope": 74056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 73476,
            "nodeType": "EventDefinition",
            "src": "2093:102:188",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "e00c8007db5f3df9e7ddad98d6efd78ef0d84277932892e709a79916dfd90fc1",
            "name": "StakeAggregation",
            "nameLocation": "2099:16:188",
            "parameters": {
              "id": 73475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73470,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2133:6:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73476,
                  "src": "2117:22:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2117:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73472,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "swapReceived",
                  "nameLocation": "2157:12:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73476,
                  "src": "2141:28:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2141:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73474,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minted",
                  "nameLocation": "2187:6:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73476,
                  "src": "2171:22:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2171:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2116:78:188"
            }
          },
          {
            "id": 73486,
            "nodeType": "EventDefinition",
            "src": "2200:128:188",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "608dc34fb986fe5144e99748164eac418485bd208817a72a15162f9208312bea",
            "name": "BurnAggregation",
            "nameLocation": "2206:15:188",
            "parameters": {
              "id": 73485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73478,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2231:6:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73486,
                  "src": "2223:14:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2223:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73480,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "amountInstantBurn",
                  "nameLocation": "2255:17:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73486,
                  "src": "2239:33:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2239:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73482,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "amountBurn",
                  "nameLocation": "2290:10:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73486,
                  "src": "2274:26:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2274:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73484,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "received",
                  "nameLocation": "2318:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73486,
                  "src": "2302:24:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2302:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2222:105:188"
            }
          },
          {
            "id": 73490,
            "nodeType": "EventDefinition",
            "src": "2333:49:188",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "6876f036a9b507fa18967bfbe1cf9e2a93c8b09eb7a3bcbe0a741c428b535cf8",
            "name": "CanonicalPoolChanged",
            "nameLocation": "2339:20:188",
            "parameters": {
              "id": 73489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73488,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "2376:4:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73490,
                  "src": "2360:20:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73487,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2360:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2359:22:188"
            }
          },
          {
            "id": 73492,
            "nodeType": "ErrorDefinition",
            "src": "2388:23:188",
            "nodes": [],
            "errorSelector": "a64e7abc",
            "name": "NoAttemptsLeft",
            "nameLocation": "2394:14:188",
            "parameters": {
              "id": 73491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2408:2:188"
            }
          },
          {
            "id": 73592,
            "nodeType": "FunctionDefinition",
            "src": "2914:873:188",
            "nodes": [],
            "body": {
              "id": 73591,
              "nodeType": "Block",
              "src": "3064:723:188",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    73507
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73507,
                      "mutability": "mutable",
                      "name": "total",
                      "nameLocation": "3082:5:188",
                      "nodeType": "VariableDeclaration",
                      "scope": 73591,
                      "src": "3074:13:188",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73506,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3074:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73513,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 73512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 73510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 73508,
                        "name": "amountInstantBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73495,
                        "src": "3090:17:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 73509,
                        "name": "amountBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73497,
                        "src": "3110:10:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3090:30:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 73511,
                      "name": "amountSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73499,
                      "src": "3123:10:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3090:43:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3074:59:188"
                },
                {
                  "assignments": [
                    73515
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73515,
                      "mutability": "mutable",
                      "name": "swapReceived",
                      "nameLocation": "3151:12:188",
                      "nodeType": "VariableDeclaration",
                      "scope": 73591,
                      "src": "3143:20:188",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73514,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3143:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73516,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3143:20:188"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 73520,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3194:3:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 73521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3198:6:188",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3194:10:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 73524,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3214:4:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV1_$74056",
                              "typeString": "contract AggregatorV1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AggregatorV1_$74056",
                              "typeString": "contract AggregatorV1"
                            }
                          ],
                          "id": 73523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3206:7:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 73522,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3206:7:188",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 73525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3206:13:188",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73526,
                        "name": "total",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73507,
                        "src": "3221:5:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 73517,
                        "name": "stflip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73332,
                        "src": "3174:6:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$57630",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 73519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3181:12:188",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57629,
                      "src": "3174:19:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 73527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3174:53:188",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 73528,
                  "nodeType": "ExpressionStatement",
                  "src": "3174:53:188"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 73531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 73529,
                      "name": "amountInstantBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73495,
                      "src": "3250:17:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 73530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3271:1:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3250:22:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 73548,
                  "nodeType": "IfStatement",
                  "src": "3246:162:188",
                  "trueBody": {
                    "id": 73547,
                    "nodeType": "Block",
                    "src": "3274:134:188",
                    "statements": [
                      {
                        "assignments": [
                          73533
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 73533,
                            "mutability": "mutable",
                            "name": "instantBurnId",
                            "nameLocation": "3296:13:188",
                            "nodeType": "VariableDeclaration",
                            "scope": 73547,
                            "src": "3288:21:188",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 73532,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3288:7:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 73540,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 73536,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3324:3:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 73537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3328:6:188",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3324:10:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 73538,
                              "name": "amountInstantBurn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73495,
                              "src": "3336:17:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 73534,
                              "name": "burner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73341,
                              "src": "3312:6:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BurnerV1_$74564",
                                "typeString": "contract BurnerV1"
                              }
                            },
                            "id": 73535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3319:4:188",
                            "memberName": "burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 74240,
                            "src": "3312:11:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) external returns (uint256)"
                            }
                          },
                          "id": 73539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3312:42:188",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3288:66:188"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 73544,
                              "name": "instantBurnId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73533,
                              "src": "3382:13:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 73541,
                              "name": "burner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73341,
                              "src": "3368:6:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BurnerV1_$74564",
                                "typeString": "contract BurnerV1"
                              }
                            },
                            "id": 73543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3375:6:188",
                            "memberName": "redeem",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 74286,
                            "src": "3368:13:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 73545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3368:28:188",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 73546,
                        "nodeType": "ExpressionStatement",
                        "src": "3368:28:188"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 73551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 73549,
                      "name": "amountBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73497,
                      "src": "3422:10:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 73550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3436:1:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3422:15:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 73561,
                  "nodeType": "IfStatement",
                  "src": "3418:81:188",
                  "trueBody": {
                    "id": 73560,
                    "nodeType": "Block",
                    "src": "3439:60:188",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 73555,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3465:3:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 73556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3469:6:188",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3465:10:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 73557,
                              "name": "amountBurn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73497,
                              "src": "3477:10:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 73552,
                              "name": "burner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73341,
                              "src": "3453:6:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BurnerV1_$74564",
                                "typeString": "contract BurnerV1"
                              }
                            },
                            "id": 73554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3460:4:188",
                            "memberName": "burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 74240,
                            "src": "3453:11:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) external returns (uint256)"
                            }
                          },
                          "id": 73558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3453:35:188",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 73559,
                        "nodeType": "ExpressionStatement",
                        "src": "3453:35:188"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 73564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 73562,
                      "name": "amountSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73499,
                      "src": "3513:10:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 73563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3527:1:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3513:15:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 73578,
                  "nodeType": "IfStatement",
                  "src": "3509:135:188",
                  "trueBody": {
                    "id": 73577,
                    "nodeType": "Block",
                    "src": "3530:114:188",
                    "statements": [
                      {
                        "expression": {
                          "id": 73575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 73565,
                            "name": "swapReceived",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73515,
                            "src": "3544:12:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 73568,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3582:1:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "30",
                                "id": 73569,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3585:1:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "id": 73570,
                                "name": "amountSwap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73499,
                                "src": "3588:10:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 73571,
                                "name": "minimumAmountSwapOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73501,
                                "src": "3600:20:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 73572,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3622:3:188",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 73573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3626:6:188",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3622:10:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 73566,
                                "name": "canonicalPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73344,
                                "src": "3559:13:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStableSwap_$72058",
                                  "typeString": "contract IStableSwap"
                                }
                              },
                              "id": 73567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3573:8:188",
                              "memberName": "exchange",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71603,
                              "src": "3559:22:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_int128_$_t_int128_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (int128,int128,uint256,uint256,address) external returns (uint256)"
                              }
                            },
                            "id": 73574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3559:74:188",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3544:89:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 73576,
                        "nodeType": "ExpressionStatement",
                        "src": "3544:89:188"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 73580,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3675:3:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 73581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3679:6:188",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3675:10:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73582,
                        "name": "amountInstantBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73495,
                        "src": "3686:17:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 73583,
                        "name": "amountBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73497,
                        "src": "3705:10:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 73584,
                        "name": "swapReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73515,
                        "src": "3717:12:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 73579,
                      "name": "BurnAggregation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73486,
                      "src": "3659:15:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 73585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3659:71:188",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73586,
                  "nodeType": "EmitStatement",
                  "src": "3654:76:188"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 73589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 73587,
                      "name": "amountInstantBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73495,
                      "src": "3748:17:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 73588,
                      "name": "swapReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73515,
                      "src": "3768:12:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3748:32:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 73505,
                  "id": 73590,
                  "nodeType": "Return",
                  "src": "3741:39:188"
                }
              ]
            },
            "documentation": {
              "id": 73493,
              "nodeType": "StructuredDocumentation",
              "src": "2417:492:188",
              "text": " @notice Spends stFLIP for FLIP via swap, instant burn, and unstake request.\n @param amountInstantBurn The amount of stFLIP to instant burn\n @param amountBurn The amount of stFLIP to burn.\n @param amountSwap The amount of stFLIP to swap for FLIP\n @param minimumAmountSwapOut The minimum amount of FLIP  to receive from the swap piece of the route\n @dev Contract will only swap if `amountSwap > 0`. Contract will only mint if amountSwap < amountTotal."
            },
            "functionSelector": "a1fed9dc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstakeAggregate",
            "nameLocation": "2923:16:188",
            "parameters": {
              "id": 73502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73495,
                  "mutability": "mutable",
                  "name": "amountInstantBurn",
                  "nameLocation": "2948:17:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73592,
                  "src": "2940:25:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2940:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73497,
                  "mutability": "mutable",
                  "name": "amountBurn",
                  "nameLocation": "2975:10:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73592,
                  "src": "2967:18:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73496,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2967:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73499,
                  "mutability": "mutable",
                  "name": "amountSwap",
                  "nameLocation": "2995:10:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73592,
                  "src": "2987:18:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2987:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73501,
                  "mutability": "mutable",
                  "name": "minimumAmountSwapOut",
                  "nameLocation": "3015:20:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73592,
                  "src": "3007:28:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3007:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2939:97:188"
            },
            "returnParameters": {
              "id": 73505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73504,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73592,
                  "src": "3055:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3055:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3054:9:188"
            },
            "scope": 74056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 73667,
            "nodeType": "FunctionDefinition",
            "src": "4317:639:188",
            "nodes": [],
            "body": {
              "id": 73666,
              "nodeType": "Block",
              "src": "4439:517:188",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 73607,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4467:3:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 73608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4471:6:188",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4467:10:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 73611,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4487:4:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV1_$74056",
                              "typeString": "contract AggregatorV1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AggregatorV1_$74056",
                              "typeString": "contract AggregatorV1"
                            }
                          ],
                          "id": 73610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4479:7:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 73609,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4479:7:188",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 73612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4479:13:188",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73613,
                        "name": "amountTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73595,
                        "src": "4494:11:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 73604,
                        "name": "flip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73335,
                        "src": "4449:4:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$57630",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 73606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4454:12:188",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57629,
                      "src": "4449:17:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 73614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4449:57:188",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 73615,
                  "nodeType": "ExpressionStatement",
                  "src": "4449:57:188"
                },
                {
                  "assignments": [
                    73617
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73617,
                      "mutability": "mutable",
                      "name": "swapReceived",
                      "nameLocation": "4524:12:188",
                      "nodeType": "VariableDeclaration",
                      "scope": 73666,
                      "src": "4516:20:188",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73616,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4516:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73618,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4516:20:188"
                },
                {
                  "assignments": [
                    73620
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73620,
                      "mutability": "mutable",
                      "name": "mintAmount",
                      "nameLocation": "4554:10:188",
                      "nodeType": "VariableDeclaration",
                      "scope": 73666,
                      "src": "4546:18:188",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73619,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4546:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73624,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 73623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 73621,
                      "name": "amountTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73595,
                      "src": "4567:11:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 73622,
                      "name": "amountSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73597,
                      "src": "4581:10:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4567:24:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4546:45:188"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 73627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 73625,
                      "name": "amountSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73597,
                      "src": "4606:10:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 73626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4620:1:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4606:15:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 73641,
                  "nodeType": "IfStatement",
                  "src": "4602:134:188",
                  "trueBody": {
                    "id": 73640,
                    "nodeType": "Block",
                    "src": "4622:114:188",
                    "statements": [
                      {
                        "expression": {
                          "id": 73638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 73628,
                            "name": "swapReceived",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73617,
                            "src": "4636:12:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 73631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4674:1:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "31",
                                "id": 73632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4677:1:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              {
                                "id": 73633,
                                "name": "amountSwap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73597,
                                "src": "4680:10:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 73634,
                                "name": "minimumAmountSwapOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73599,
                                "src": "4692:20:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 73635,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4714:3:188",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 73636,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4718:6:188",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4714:10:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 73629,
                                "name": "canonicalPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73344,
                                "src": "4651:13:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStableSwap_$72058",
                                  "typeString": "contract IStableSwap"
                                }
                              },
                              "id": 73630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4665:8:188",
                              "memberName": "exchange",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71603,
                              "src": "4651:22:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_int128_$_t_int128_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (int128,int128,uint256,uint256,address) external returns (uint256)"
                              }
                            },
                            "id": 73637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4651:74:188",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4636:89:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 73639,
                        "nodeType": "ExpressionStatement",
                        "src": "4636:89:188"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 73644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 73642,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73620,
                      "src": "4751:10:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 73643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4765:1:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4751:15:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 73654,
                  "nodeType": "IfStatement",
                  "src": "4747:81:188",
                  "trueBody": {
                    "id": 73653,
                    "nodeType": "Block",
                    "src": "4768:60:188",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 73648,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4794:3:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 73649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4798:6:188",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4794:10:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 73650,
                              "name": "mintAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73620,
                              "src": "4806:10:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 73645,
                              "name": "minter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73338,
                              "src": "4782:6:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MinterV1_$74683",
                                "typeString": "contract MinterV1"
                              }
                            },
                            "id": 73647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4789:4:188",
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 74666,
                            "src": "4782:11:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 73651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4782:35:188",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 73652,
                        "nodeType": "ExpressionStatement",
                        "src": "4782:35:188"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 73656,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4861:3:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 73657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4865:6:188",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4861:10:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73658,
                        "name": "swapReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73617,
                        "src": "4873:12:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 73659,
                        "name": "mintAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73620,
                        "src": "4887:10:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 73655,
                      "name": "StakeAggregation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73476,
                      "src": "4843:16:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 73660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4843:55:188",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73661,
                  "nodeType": "EmitStatement",
                  "src": "4838:60:188"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 73664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 73662,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73620,
                      "src": "4924:10:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 73663,
                      "name": "swapReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73617,
                      "src": "4937:12:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4924:25:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 73603,
                  "id": 73665,
                  "nodeType": "Return",
                  "src": "4917:32:188"
                }
              ]
            },
            "documentation": {
              "id": 73593,
              "nodeType": "StructuredDocumentation",
              "src": "3793:519:188",
              "text": " @notice Spends FLIP to mint and swap for stFLIP in the same transaction.\n @param amountTotal The total amount of FLIP to spend.\n @param amountSwap The amount of FLIP to swap for stFLIP.\n @param minimumAmountSwapOut The minimum amount of stFLIP to receive from the swap piece of the route\n @dev Contract will only swap if `amountSwap > 0`. Contract will only mint if amountSwap < amountTotal. \n Use `calculatePurchasable` on frontend to determine route prior to calling this.  "
            },
            "functionSelector": "ec7245b0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeAggregate",
            "nameLocation": "4326:14:188",
            "parameters": {
              "id": 73600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73595,
                  "mutability": "mutable",
                  "name": "amountTotal",
                  "nameLocation": "4349:11:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73667,
                  "src": "4341:19:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73594,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4341:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73597,
                  "mutability": "mutable",
                  "name": "amountSwap",
                  "nameLocation": "4370:10:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73667,
                  "src": "4362:18:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4362:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73599,
                  "mutability": "mutable",
                  "name": "minimumAmountSwapOut",
                  "nameLocation": "4390:20:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73667,
                  "src": "4382:28:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4382:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4340:71:188"
            },
            "returnParameters": {
              "id": 73603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73602,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73667,
                  "src": "4430:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4430:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4429:9:188"
            },
            "scope": 74056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 73705,
            "nodeType": "FunctionDefinition",
            "src": "5269:267:188",
            "nodes": [],
            "body": {
              "id": 73704,
              "nodeType": "Block",
              "src": "5387:149:188",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    73682
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73682,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "5405:4:188",
                      "nodeType": "VariableDeclaration",
                      "scope": 73704,
                      "src": "5397:12:188",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 73681,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5397:7:188",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73696,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 73688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 73683,
                            "name": "pool_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73670,
                            "src": "5413:5:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 73686,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5430:1:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 73685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5422:7:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 73684,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5422:7:188",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 73687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5422:10:188",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5413:19:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 73689,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5412:21:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 73694,
                      "name": "pool_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73670,
                      "src": "5461:5:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 73695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5412:54:188",
                    "trueExpression": {
                      "arguments": [
                        {
                          "id": 73692,
                          "name": "canonicalPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73344,
                          "src": "5444:13:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStableSwap_$72058",
                            "typeString": "contract IStableSwap"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IStableSwap_$72058",
                            "typeString": "contract IStableSwap"
                          }
                        ],
                        "id": 73691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5436:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 73690,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5436:7:188",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 73693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5436:22:188",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5397:69:188"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73698,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73682,
                        "src": "5497:4:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73699,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73672,
                        "src": "5503:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      {
                        "id": 73700,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73674,
                        "src": "5512:8:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      {
                        "id": 73701,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73676,
                        "src": "5522:6:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 73697,
                      "name": "_marginalCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73768,
                      "src": "5483:13:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_int128_$_t_int128_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,int128,int128,uint256) view returns (uint256)"
                      }
                    },
                    "id": 73702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5483:46:188",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 73680,
                  "id": 73703,
                  "nodeType": "Return",
                  "src": "5476:53:188"
                }
              ]
            },
            "documentation": {
              "id": 73668,
              "nodeType": "StructuredDocumentation",
              "src": "4963:301:188",
              "text": " Public function for marginal cost\n @param pool_ The pool to calculate the marginal cost for. If 0, uses the canonical pool\n @param tokenIn The token index for the in token\n @param tokenOut Token index for the out token\n @param amount The unit to calculate at"
            },
            "functionSelector": "8dbff07a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "marginalCost",
            "nameLocation": "5278:12:188",
            "parameters": {
              "id": 73677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73670,
                  "mutability": "mutable",
                  "name": "pool_",
                  "nameLocation": "5299:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73705,
                  "src": "5291:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5291:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73672,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "5313:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73705,
                  "src": "5306:14:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 73671,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "5306:6:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73674,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "5329:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73705,
                  "src": "5322:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 73673,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "5322:6:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73676,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5347:6:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73705,
                  "src": "5339:14:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73675,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5339:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5290:64:188"
            },
            "returnParameters": {
              "id": 73680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73679,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73705,
                  "src": "5378:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5378:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5377:9:188"
            },
            "scope": 74056,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 73768,
            "nodeType": "FunctionDefinition",
            "src": "5721:394:188",
            "nodes": [],
            "body": {
              "id": 73767,
              "nodeType": "Block",
              "src": "5839:276:188",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    73720
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73720,
                      "mutability": "mutable",
                      "name": "dx1",
                      "nameLocation": "5857:3:188",
                      "nodeType": "VariableDeclaration",
                      "scope": 73767,
                      "src": "5849:11:188",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73719,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5849:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73722,
                  "initialValue": {
                    "id": 73721,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73714,
                    "src": "5863:6:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5849:20:188"
                },
                {
                  "assignments": [
                    73724
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73724,
                      "mutability": "mutable",
                      "name": "dx2",
                      "nameLocation": "5887:3:188",
                      "nodeType": "VariableDeclaration",
                      "scope": 73767,
                      "src": "5879:11:188",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73723,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5879:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73730,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 73729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 73725,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73714,
                      "src": "5893:6:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "id": 73728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 73726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5902:2:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "3138",
                        "id": 73727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5906:2:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "src": "5902:6:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "5893:15:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5879:29:188"
                },
                {
                  "assignments": [
                    73732
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73732,
                      "mutability": "mutable",
                      "name": "amt1",
                      "nameLocation": "5927:4:188",
                      "nodeType": "VariableDeclaration",
                      "scope": 73767,
                      "src": "5919:12:188",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73731,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5919:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73741,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 73737,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73710,
                        "src": "5959:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      {
                        "id": 73738,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73712,
                        "src": "5968:8:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      {
                        "id": 73739,
                        "name": "dx1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73720,
                        "src": "5978:3:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 73734,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73708,
                            "src": "5946:4:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 73733,
                          "name": "IStableSwap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72058,
                          "src": "5934:11:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStableSwap_$72058_$",
                            "typeString": "type(contract IStableSwap)"
                          }
                        },
                        "id": 73735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5934:17:188",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStableSwap_$72058",
                          "typeString": "contract IStableSwap"
                        }
                      },
                      "id": 73736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5952:6:188",
                      "memberName": "get_dy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71849,
                      "src": "5934:24:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_int128_$_t_int128_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (int128,int128,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 73740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5934:48:188",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5919:63:188"
                },
                {
                  "assignments": [
                    73743
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73743,
                      "mutability": "mutable",
                      "name": "amt2",
                      "nameLocation": "6000:4:188",
                      "nodeType": "VariableDeclaration",
                      "scope": 73767,
                      "src": "5992:12:188",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73742,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5992:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73752,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 73748,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73710,
                        "src": "6032:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      {
                        "id": 73749,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73712,
                        "src": "6041:8:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      {
                        "id": 73750,
                        "name": "dx2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73724,
                        "src": "6051:3:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 73745,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73708,
                            "src": "6019:4:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 73744,
                          "name": "IStableSwap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72058,
                          "src": "6007:11:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStableSwap_$72058_$",
                            "typeString": "type(contract IStableSwap)"
                          }
                        },
                        "id": 73746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6007:17:188",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStableSwap_$72058",
                          "typeString": "contract IStableSwap"
                        }
                      },
                      "id": 73747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6025:6:188",
                      "memberName": "get_dy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71849,
                      "src": "6007:24:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_int128_$_t_int128_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (int128,int128,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 73751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6007:48:188",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5992:63:188"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 73765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 73760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 73755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 73753,
                              "name": "amt2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73743,
                              "src": "6074:4:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 73754,
                              "name": "amt1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73732,
                              "src": "6081:4:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6074:11:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 73756,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6073:13:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 73759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 73757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6088:2:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "3138",
                          "id": 73758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6092:2:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "6088:6:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "6073:21:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 73763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 73761,
                            "name": "dx2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73724,
                            "src": "6098:3:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 73762,
                            "name": "dx1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73720,
                            "src": "6104:3:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6098:9:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 73764,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6097:11:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6073:35:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 73718,
                  "id": 73766,
                  "nodeType": "Return",
                  "src": "6066:42:188"
                }
              ]
            },
            "documentation": {
              "id": 73706,
              "nodeType": "StructuredDocumentation",
              "src": "5542:174:188",
              "text": " @notice Calculates the marginal cost for the last unit of swap of `amount`\n @param amount The size to calculate marginal cost for the last unit of swap"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_marginalCost",
            "nameLocation": "5730:13:188",
            "parameters": {
              "id": 73715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73708,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "5752:4:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73768,
                  "src": "5744:12:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5744:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73710,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "5765:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73768,
                  "src": "5758:14:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 73709,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "5758:6:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73712,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "5781:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73768,
                  "src": "5774:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 73711,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "5774:6:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73714,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5799:6:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73768,
                  "src": "5791:14:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5791:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5743:63:188"
            },
            "returnParameters": {
              "id": 73718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73717,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73768,
                  "src": "5830:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5830:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5829:9:188"
            },
            "scope": 74056,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 73946,
            "nodeType": "FunctionDefinition",
            "src": "7086:1386:188",
            "nodes": [],
            "body": {
              "id": 73945,
              "nodeType": "Block",
              "src": "7256:1216:188",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    73787
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73787,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "7277:4:188",
                      "nodeType": "VariableDeclaration",
                      "scope": 73945,
                      "src": "7269:12:188",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 73786,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7269:7:188",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73800,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 73793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 73788,
                        "name": "pool_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73777,
                        "src": "7284:5:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 73791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7301:1:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 73790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7293:7:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 73789,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7293:7:188",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 73792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7293:10:188",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7284:19:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 73798,
                      "name": "pool_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73777,
                      "src": "7331:5:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 73799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "7284:52:188",
                    "trueExpression": {
                      "arguments": [
                        {
                          "id": 73796,
                          "name": "canonicalPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73344,
                          "src": "7314:13:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStableSwap_$72058",
                            "typeString": "contract IStableSwap"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IStableSwap_$72058",
                            "typeString": "contract IStableSwap"
                          }
                        ],
                        "id": 73795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7306:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 73794,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7306:7:188",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 73797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7306:22:188",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7269:67:188"
                },
                {
                  "assignments": [
                    73802
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73802,
                      "mutability": "mutable",
                      "name": "first",
                      "nameLocation": "7354:5:188",
                      "nodeType": "VariableDeclaration",
                      "scope": 73945,
                      "src": "7346:13:188",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73801,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7346:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73803,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7346:13:188"
                },
                {
                  "assignments": [
                    73805
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73805,
                      "mutability": "mutable",
                      "name": "mid",
                      "nameLocation": "7377:3:188",
                      "nodeType": "VariableDeclaration",
                      "scope": 73945,
                      "src": "7369:11:188",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73804,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7369:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73806,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7369:11:188"
                },
                {
                  "assignments": [
                    73808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73808,
                      "mutability": "mutable",
                      "name": "last",
                      "nameLocation": "7485:4:188",
                      "nodeType": "VariableDeclaration",
                      "scope": 73945,
                      "src": "7477:12:188",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73807,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7477:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73821,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 73817,
                                "name": "tokenOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73781,
                                "src": "7534:8:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int128",
                                  "typeString": "int128"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int128",
                                  "typeString": "int128"
                                }
                              ],
                              "id": 73816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7527:6:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": {
                                "id": 73815,
                                "name": "int256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7527:6:188",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 73818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7527:16:188",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 73814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7519:7:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 73813,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7519:7:188",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 73819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7519:25:188",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 73810,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73787,
                            "src": "7504:4:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 73809,
                          "name": "IStableSwap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72058,
                          "src": "7492:11:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStableSwap_$72058_$",
                            "typeString": "type(contract IStableSwap)"
                          }
                        },
                        "id": 73811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7492:17:188",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStableSwap_$72058",
                          "typeString": "contract IStableSwap"
                        }
                      },
                      "id": 73812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7510:8:188",
                      "memberName": "balances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71895,
                      "src": "7492:26:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 73820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7492:53:188",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7477:68:188"
                },
                {
                  "assignments": [
                    73823
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73823,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "7563:5:188",
                      "nodeType": "VariableDeclaration",
                      "scope": 73945,
                      "src": "7555:13:188",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73822,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7555:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73824,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7555:13:188"
                },
                {
                  "assignments": [
                    73826
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73826,
                      "mutability": "mutable",
                      "name": "currentError",
                      "nameLocation": "7586:12:188",
                      "nodeType": "VariableDeclaration",
                      "scope": 73945,
                      "src": "7578:20:188",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73825,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7578:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73828,
                  "initialValue": {
                    "id": 73827,
                    "name": "targetError",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73773,
                    "src": "7601:11:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7578:34:188"
                },
                {
                  "assignments": [
                    73830
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73830,
                      "mutability": "mutable",
                      "name": "startPrice",
                      "nameLocation": "7630:10:188",
                      "nodeType": "VariableDeclaration",
                      "scope": 73945,
                      "src": "7622:18:188",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73829,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7622:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73841,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 73832,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73787,
                        "src": "7657:4:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73833,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73779,
                        "src": "7663:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      {
                        "id": 73834,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73781,
                        "src": "7672:8:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 73839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31",
                          "id": 73835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7682:1:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 73838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 73836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7684:2:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 73837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7688:2:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "7684:6:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "7682:8:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 73831,
                      "name": "_marginalCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73768,
                      "src": "7643:13:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_int128_$_t_int128_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,int128,int128,uint256) view returns (uint256)"
                      }
                    },
                    "id": 73840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7643:48:188",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7622:69:188"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 73844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 73842,
                      "name": "startPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73830,
                      "src": "7706:10:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 73843,
                      "name": "targetPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73771,
                      "src": "7719:11:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7706:24:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 73848,
                  "nodeType": "IfStatement",
                  "src": "7702:63:188",
                  "trueBody": {
                    "id": 73847,
                    "nodeType": "Block",
                    "src": "7732:33:188",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 73845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7753:1:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 73785,
                        "id": 73846,
                        "nodeType": "Return",
                        "src": "7746:8:188"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 73943,
                    "nodeType": "Block",
                    "src": "7788:678:188",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 73852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 73850,
                            "name": "attempts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73775,
                            "src": "7806:8:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 73851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7818:1:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7806:13:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 73857,
                        "nodeType": "IfStatement",
                        "src": "7802:75:188",
                        "trueBody": {
                          "id": 73856,
                          "nodeType": "Block",
                          "src": "7821:56:188",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 73853,
                                  "name": "NoAttemptsLeft",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73492,
                                  "src": "7846:14:188",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 73854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7846:16:188",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 73855,
                              "nodeType": "RevertStatement",
                              "src": "7839:23:188"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 73865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 73858,
                            "name": "mid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73805,
                            "src": "7890:3:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 73864,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 73861,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 73859,
                                    "name": "last",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 73808,
                                    "src": "7897:4:188",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 73860,
                                    "name": "first",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 73802,
                                    "src": "7902:5:188",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "7897:10:188",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 73862,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "7896:12:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 73863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7911:1:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "7896:16:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7890:22:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 73866,
                        "nodeType": "ExpressionStatement",
                        "src": "7890:22:188"
                      },
                      {
                        "expression": {
                          "id": 73874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 73867,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73823,
                            "src": "7926:5:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 73869,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73787,
                                "src": "7948:4:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 73870,
                                "name": "tokenIn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73779,
                                "src": "7954:7:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int128",
                                  "typeString": "int128"
                                }
                              },
                              {
                                "id": 73871,
                                "name": "tokenOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73781,
                                "src": "7963:8:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int128",
                                  "typeString": "int128"
                                }
                              },
                              {
                                "id": 73872,
                                "name": "mid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73805,
                                "src": "7973:3:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_int128",
                                  "typeString": "int128"
                                },
                                {
                                  "typeIdentifier": "t_int128",
                                  "typeString": "int128"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 73868,
                              "name": "_marginalCost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73768,
                              "src": "7934:13:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_int128_$_t_int128_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,int128,int128,uint256) view returns (uint256)"
                              }
                            },
                            "id": 73873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7934:43:188",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7926:51:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 73875,
                        "nodeType": "ExpressionStatement",
                        "src": "7926:51:188"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 73878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 73876,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73823,
                            "src": "7995:5:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 73877,
                            "name": "targetPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73771,
                            "src": "8003:11:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7995:19:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 73892,
                          "nodeType": "Block",
                          "src": "8070:47:188",
                          "statements": [
                            {
                              "expression": {
                                "id": 73890,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 73886,
                                  "name": "last",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73808,
                                  "src": "8088:4:188",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 73889,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 73887,
                                    "name": "mid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 73805,
                                    "src": "8095:3:188",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 73888,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8101:1:188",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "8095:7:188",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8088:14:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 73891,
                              "nodeType": "ExpressionStatement",
                              "src": "8088:14:188"
                            }
                          ]
                        },
                        "id": 73893,
                        "nodeType": "IfStatement",
                        "src": "7991:126:188",
                        "trueBody": {
                          "id": 73885,
                          "nodeType": "Block",
                          "src": "8016:48:188",
                          "statements": [
                            {
                              "expression": {
                                "id": 73883,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 73879,
                                  "name": "first",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73802,
                                  "src": "8034:5:188",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 73882,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 73880,
                                    "name": "mid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 73805,
                                    "src": "8042:3:188",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 73881,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8048:1:188",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "8042:7:188",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8034:15:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 73884,
                              "nodeType": "ExpressionStatement",
                              "src": "8034:15:188"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 73898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 73894,
                            "name": "attempts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73775,
                            "src": "8131:8:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 73897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 73895,
                              "name": "attempts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73775,
                              "src": "8142:8:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 73896,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8153:1:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8142:12:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8131:23:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 73899,
                        "nodeType": "ExpressionStatement",
                        "src": "8131:23:188"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 73902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 73900,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73823,
                            "src": "8173:5:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 73901,
                            "name": "targetPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73771,
                            "src": "8181:11:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8173:19:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 73934,
                          "nodeType": "Block",
                          "src": "8283:83:188",
                          "statements": [
                            {
                              "expression": {
                                "id": 73932,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 73919,
                                  "name": "currentError",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73826,
                                  "src": "8301:12:188",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 73931,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 73926,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 73924,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 73920,
                                            "name": "price",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 73823,
                                            "src": "8317:5:188",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                              "typeString": "int_const 1000000000000000000"
                                            },
                                            "id": 73923,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "hexValue": "3130",
                                              "id": 73921,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "8323:2:188",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_10_by_1",
                                                "typeString": "int_const 10"
                                              },
                                              "value": "10"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "**",
                                            "rightExpression": {
                                              "hexValue": "3138",
                                              "id": 73922,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "8327:2:188",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_18_by_1",
                                                "typeString": "int_const 18"
                                              },
                                              "value": "18"
                                            },
                                            "src": "8323:6:188",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                              "typeString": "int_const 1000000000000000000"
                                            }
                                          },
                                          "src": "8317:12:188",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "id": 73925,
                                          "name": "targetPrice",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 73771,
                                          "src": "8330:11:188",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "8317:24:188",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 73927,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "8316:26:188",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000"
                                    },
                                    "id": 73930,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3130",
                                      "id": 73928,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8345:2:188",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "**",
                                    "rightExpression": {
                                      "hexValue": "3138",
                                      "id": 73929,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8349:2:188",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_18_by_1",
                                        "typeString": "int_const 18"
                                      },
                                      "value": "18"
                                    },
                                    "src": "8345:6:188",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000"
                                    }
                                  },
                                  "src": "8316:35:188",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8301:50:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 73933,
                              "nodeType": "ExpressionStatement",
                              "src": "8301:50:188"
                            }
                          ]
                        },
                        "id": 73935,
                        "nodeType": "IfStatement",
                        "src": "8169:197:188",
                        "trueBody": {
                          "id": 73918,
                          "nodeType": "Block",
                          "src": "8194:83:188",
                          "statements": [
                            {
                              "expression": {
                                "id": 73916,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 73903,
                                  "name": "currentError",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73826,
                                  "src": "8212:12:188",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 73915,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000"
                                    },
                                    "id": 73906,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3130",
                                      "id": 73904,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8227:2:188",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "**",
                                    "rightExpression": {
                                      "hexValue": "3138",
                                      "id": 73905,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8231:2:188",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_18_by_1",
                                        "typeString": "int_const 18"
                                      },
                                      "value": "18"
                                    },
                                    "src": "8227:6:188",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 73913,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 73911,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 73907,
                                            "name": "price",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 73823,
                                            "src": "8237:5:188",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                              "typeString": "int_const 1000000000000000000"
                                            },
                                            "id": 73910,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "hexValue": "3130",
                                              "id": 73908,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "8243:2:188",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_10_by_1",
                                                "typeString": "int_const 10"
                                              },
                                              "value": "10"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "**",
                                            "rightExpression": {
                                              "hexValue": "3138",
                                              "id": 73909,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "8247:2:188",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_18_by_1",
                                                "typeString": "int_const 18"
                                              },
                                              "value": "18"
                                            },
                                            "src": "8243:6:188",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                              "typeString": "int_const 1000000000000000000"
                                            }
                                          },
                                          "src": "8237:12:188",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "id": 73912,
                                          "name": "targetPrice",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 73771,
                                          "src": "8250:11:188",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "8237:24:188",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 73914,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "8236:26:188",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8227:35:188",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8212:50:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 73917,
                              "nodeType": "ExpressionStatement",
                              "src": "8212:50:188"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 73938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 73936,
                            "name": "currentError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73826,
                            "src": "8385:12:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 73937,
                            "name": "targetError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73773,
                            "src": "8400:11:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8385:26:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 73942,
                        "nodeType": "IfStatement",
                        "src": "8381:75:188",
                        "trueBody": {
                          "id": 73941,
                          "nodeType": "Block",
                          "src": "8413:43:188",
                          "statements": [
                            {
                              "expression": {
                                "id": 73939,
                                "name": "mid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73805,
                                "src": "8438:3:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 73785,
                              "id": 73940,
                              "nodeType": "Return",
                              "src": "8431:10:188"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "hexValue": "74727565",
                    "id": 73849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7782:4:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "id": 73944,
                  "nodeType": "WhileStatement",
                  "src": "7775:691:188"
                }
              ]
            },
            "documentation": {
              "id": 73769,
              "nodeType": "StructuredDocumentation",
              "src": "6122:959:188",
              "text": " @notice Calculates the total amount of stFLIP purchasable within targetError of a certain targetPrice\n @param targetPrice The target price to calculate the amount of stFLIP purchasable until. 10**18 = 1\n @param targetError The acceptable range around `targetPrice` for acceptable return value. 10**18 = 100%\n @param attempts The number of hops within the binary search allowed before reverting\n @dev Uses binary search. Must specify number of attempts to prevent infinite loop. This is not a perfect\n calculation because the marginal cost is not exactly equal to dy. This is a decent approximation though\n An analytical solution would be ideal but its not easy to get. This is accurate to 1bps, which is good enough\n because most users are not going to be buying out the entire discount on their own. Even if they are, 1 bps +- is okay.\n Some possible inaccuracies with very small pool sizes."
            },
            "functionSelector": "8867ed80",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculatePurchasable",
            "nameLocation": "7095:20:188",
            "parameters": {
              "id": 73782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73771,
                  "mutability": "mutable",
                  "name": "targetPrice",
                  "nameLocation": "7124:11:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73946,
                  "src": "7116:19:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73770,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7116:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73773,
                  "mutability": "mutable",
                  "name": "targetError",
                  "nameLocation": "7145:11:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73946,
                  "src": "7137:19:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7137:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73775,
                  "mutability": "mutable",
                  "name": "attempts",
                  "nameLocation": "7166:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73946,
                  "src": "7158:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7158:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73777,
                  "mutability": "mutable",
                  "name": "pool_",
                  "nameLocation": "7184:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73946,
                  "src": "7176:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73776,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7176:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73779,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "7198:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73946,
                  "src": "7191:14:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 73778,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "7191:6:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73781,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "7214:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 73946,
                  "src": "7207:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 73780,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "7207:6:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7115:108:188"
            },
            "returnParameters": {
              "id": 73785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73784,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73946,
                  "src": "7247:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73783,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7247:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7246:9:188"
            },
            "scope": 74056,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 74025,
            "nodeType": "FunctionDefinition",
            "src": "8619:469:188",
            "nodes": [],
            "body": {
              "id": 74024,
              "nodeType": "Block",
              "src": "8689:399:188",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 73963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 73957,
                          "name": "canonicalPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73344,
                          "src": "8712:13:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStableSwap_$72058",
                            "typeString": "contract IStableSwap"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IStableSwap_$72058",
                            "typeString": "contract IStableSwap"
                          }
                        ],
                        "id": 73956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8704:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 73955,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8704:7:188",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 73958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8704:22:188",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 73961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8738:1:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 73960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8730:7:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 73959,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8730:7:188",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 73962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8730:10:188",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8704:36:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 73985,
                  "nodeType": "IfStatement",
                  "src": "8700:161:188",
                  "trueBody": {
                    "id": 73984,
                    "nodeType": "Block",
                    "src": "8742:119:188",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 73969,
                                  "name": "canonicalPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73344,
                                  "src": "8777:13:188",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStableSwap_$72058",
                                    "typeString": "contract IStableSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IStableSwap_$72058",
                                    "typeString": "contract IStableSwap"
                                  }
                                ],
                                "id": 73968,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8769:7:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 73967,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8769:7:188",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 73970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8769:22:188",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 73971,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8793:1:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 73964,
                              "name": "flip",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73335,
                              "src": "8756:4:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$57630",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 73966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8761:7:188",
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57617,
                            "src": "8756:12:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 73972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8756:39:188",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 73973,
                        "nodeType": "ExpressionStatement",
                        "src": "8756:39:188"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 73979,
                                  "name": "canonicalPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73344,
                                  "src": "8832:13:188",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStableSwap_$72058",
                                    "typeString": "contract IStableSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IStableSwap_$72058",
                                    "typeString": "contract IStableSwap"
                                  }
                                ],
                                "id": 73978,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8824:7:188",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 73977,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8824:7:188",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 73980,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8824:22:188",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 73981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8848:1:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 73974,
                              "name": "stflip",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73332,
                              "src": "8809:6:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$57630",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 73976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8816:7:188",
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57617,
                            "src": "8809:14:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 73982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8809:41:188",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 73983,
                        "nodeType": "ExpressionStatement",
                        "src": "8809:41:188"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 73990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73986,
                      "name": "canonicalPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73344,
                      "src": "8871:13:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStableSwap_$72058",
                        "typeString": "contract IStableSwap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 73988,
                          "name": "pool_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73949,
                          "src": "8899:5:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 73987,
                        "name": "IStableSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72058,
                        "src": "8887:11:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IStableSwap_$72058_$",
                          "typeString": "type(contract IStableSwap)"
                        }
                      },
                      "id": 73989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8887:18:188",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStableSwap_$72058",
                        "typeString": "contract IStableSwap"
                      }
                    },
                    "src": "8871:34:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStableSwap_$72058",
                      "typeString": "contract IStableSwap"
                    }
                  },
                  "id": 73991,
                  "nodeType": "ExpressionStatement",
                  "src": "8871:34:188"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 73997,
                            "name": "canonicalPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73344,
                            "src": "8937:13:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStableSwap_$72058",
                              "typeString": "contract IStableSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IStableSwap_$72058",
                              "typeString": "contract IStableSwap"
                            }
                          ],
                          "id": 73996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8929:7:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 73995,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8929:7:188",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 73998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8929:22:188",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 74001,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8958:7:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 74000,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8958:7:188",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 73999,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "8953:4:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 74002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8953:13:188",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 74003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "8967:3:188",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "8953:17:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 73992,
                        "name": "flip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73335,
                        "src": "8916:4:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$57630",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 73994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8921:7:188",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57617,
                      "src": "8916:12:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 74004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8916:55:188",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74005,
                  "nodeType": "ExpressionStatement",
                  "src": "8916:55:188"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74011,
                            "name": "canonicalPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73344,
                            "src": "9004:13:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStableSwap_$72058",
                              "typeString": "contract IStableSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IStableSwap_$72058",
                              "typeString": "contract IStableSwap"
                            }
                          ],
                          "id": 74010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8996:7:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 74009,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8996:7:188",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 74012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8996:22:188",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 74015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9025:7:188",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 74014,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9025:7:188",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 74013,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "9020:4:188",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 74016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9020:13:188",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 74017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "9034:3:188",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "9020:17:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74006,
                        "name": "stflip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73332,
                        "src": "8981:6:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$57630",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 74008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8988:7:188",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57617,
                      "src": "8981:14:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 74018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8981:57:188",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 74019,
                  "nodeType": "ExpressionStatement",
                  "src": "8981:57:188"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 74021,
                        "name": "pool_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73949,
                        "src": "9075:5:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74020,
                      "name": "CanonicalPoolChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73490,
                      "src": "9054:20:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 74022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9054:27:188",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74023,
                  "nodeType": "EmitStatement",
                  "src": "9049:32:188"
                }
              ]
            },
            "documentation": {
              "id": 73947,
              "nodeType": "StructuredDocumentation",
              "src": "8478:136:188",
              "text": " @notice Change the canonical pool used in stakeAggregate/unstakeAggregate\n @param pool_ Address of the new pool"
            },
            "functionSelector": "4437152a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 73952,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44960,
                    "src": "8669:18:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 73953,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 73951,
                  "name": "onlyRole",
                  "nameLocations": [
                    "8660:8:188"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44971,
                  "src": "8660:8:188"
                },
                "nodeType": "ModifierInvocation",
                "src": "8660:28:188"
              }
            ],
            "name": "setPool",
            "nameLocation": "8628:7:188",
            "parameters": {
              "id": 73950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73949,
                  "mutability": "mutable",
                  "name": "pool_",
                  "nameLocation": "8644:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 74025,
                  "src": "8636:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8636:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8635:15:188"
            },
            "returnParameters": {
              "id": 73954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8689:0:188"
            },
            "scope": 74056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 74040,
            "nodeType": "FunctionDefinition",
            "src": "9094:107:188",
            "nodes": [],
            "body": {
              "id": 74039,
              "nodeType": "Block",
              "src": "9164:37:188",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 74037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74033,
                      "name": "flip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73335,
                      "src": "9174:4:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$57630",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 74035,
                          "name": "flip_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74027,
                          "src": "9188:5:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 74034,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57630,
                        "src": "9181:6:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$57630_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 74036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9181:13:188",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$57630",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "9174:20:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$57630",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 74038,
                  "nodeType": "ExpressionStatement",
                  "src": "9174:20:188"
                }
              ]
            },
            "functionSelector": "47088726",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 74030,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44960,
                    "src": "9144:18:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 74031,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 74029,
                  "name": "onlyRole",
                  "nameLocations": [
                    "9135:8:188"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44971,
                  "src": "9135:8:188"
                },
                "nodeType": "ModifierInvocation",
                "src": "9135:28:188"
              }
            ],
            "name": "setFlip",
            "nameLocation": "9103:7:188",
            "parameters": {
              "id": 74028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74027,
                  "mutability": "mutable",
                  "name": "flip_",
                  "nameLocation": "9119:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 74040,
                  "src": "9111:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9111:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9110:15:188"
            },
            "returnParameters": {
              "id": 74032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9164:0:188"
            },
            "scope": 74056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 74055,
            "nodeType": "FunctionDefinition",
            "src": "9207:115:188",
            "nodes": [],
            "body": {
              "id": 74054,
              "nodeType": "Block",
              "src": "9281:41:188",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 74052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74048,
                      "name": "stflip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73332,
                      "src": "9291:6:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$57630",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 74050,
                          "name": "stflip_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74042,
                          "src": "9307:7:188",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 74049,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57630,
                        "src": "9300:6:188",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$57630_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 74051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9300:15:188",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$57630",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "9291:24:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$57630",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 74053,
                  "nodeType": "ExpressionStatement",
                  "src": "9291:24:188"
                }
              ]
            },
            "functionSelector": "9c3721bc",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 74045,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44960,
                    "src": "9261:18:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 74046,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 74044,
                  "name": "onlyRole",
                  "nameLocations": [
                    "9252:8:188"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44971,
                  "src": "9252:8:188"
                },
                "nodeType": "ModifierInvocation",
                "src": "9252:28:188"
              }
            ],
            "name": "setStflip",
            "nameLocation": "9216:9:188",
            "parameters": {
              "id": 74043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74042,
                  "mutability": "mutable",
                  "name": "stflip_",
                  "nameLocation": "9234:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 74055,
                  "src": "9226:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9226:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9225:17:188"
            },
            "returnParameters": {
              "id": 74047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9281:0:188"
            },
            "scope": 74056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 73326,
              "name": "Initializable",
              "nameLocations": [
                "1018:13:188"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46033,
              "src": "1018:13:188"
            },
            "id": 73327,
            "nodeType": "InheritanceSpecifier",
            "src": "1018:13:188"
          },
          {
            "baseName": {
              "id": 73328,
              "name": "Ownership",
              "nameLocations": [
                "1033:9:188"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 75911,
              "src": "1033:9:188"
            },
            "id": 73329,
            "nodeType": "InheritanceSpecifier",
            "src": "1033:9:188"
          }
        ],
        "canonicalName": "AggregatorV1",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 73325,
          "nodeType": "StructuredDocumentation",
          "src": "467:525:188",
          "text": " @title Aggregator contract for stFLIP\n @notice Allows users to stake/unstake optimally allotting users to add a swap \n component to their route or instant burn/ normal burn in one tx. Calls \n `BurnerV1` to burn, `MinterV1` to mint and `IStableSwap` to swap. After speaking\n with the Curve team they have recommended we use the StableSwap pool that will \n be released later this month. https://github.com/curvefi/stableswap-ng/pull/30\n This might change some of the function or interfaces with the pool."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          74056,
          75911,
          44917,
          45253,
          48943,
          48955,
          45840,
          45338,
          45411,
          47946,
          46033
        ],
        "name": "AggregatorV1",
        "nameLocation": "1002:12:188",
        "scope": 74057,
        "usedErrors": [
          73492
        ],
        "usedEvents": [
          45266,
          45269,
          45276,
          45279,
          45350,
          45359,
          45368,
          45879,
          73476,
          73486,
          73490
        ]
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 188
}