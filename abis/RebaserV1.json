{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "apr",
          "type": "uint256"
        }
      ],
      "name": "AprTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExcessiveFeeClaim",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InputLengthsMustMatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotFeeRecipientOrManager",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RebaseTooSoon",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "decrease",
          "type": "uint256"
        }
      ],
      "name": "SupplyDecreaseTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ValidatorAddressesDoNotMatch",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DefaultAdminDelayChangeCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "newDelay",
          "type": "uint48"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "effectSchedule",
          "type": "uint48"
        }
      ],
      "name": "DefaultAdminDelayChangeScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DefaultAdminTransferCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "acceptSchedule",
          "type": "uint48"
        }
      ],
      "name": "DefaultAdminTransferScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeRecipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "receivedFlip",
          "type": "bool"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "operatorId",
          "type": "uint256"
        }
      ],
      "name": "FeeClaim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newAprThreshold",
          "type": "uint256"
        }
      ],
      "name": "NewAprThreshold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newRebaseInterval",
          "type": "uint256"
        }
      ],
      "name": "NewRebaseInterval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newSlashThreshold",
          "type": "uint256"
        }
      ],
      "name": "NewSlashThreshold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "apr",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "stateChainBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousSupply",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newSupply",
          "type": "uint256"
        }
      ],
      "name": "RebaserRebase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BURNER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FEE_RECIPIENT_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GOVERNOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MANAGER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REBASER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptDefaultAdminTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aprThresholdBps",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "beginDefaultAdminTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelDefaultAdminTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "newDelay",
          "type": "uint48"
        }
      ],
      "name": "changeDefaultAdminDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "max",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "receiveFlip",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "operatorId",
          "type": "uint256"
        }
      ],
      "name": "claimFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "max",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "receiveFlip",
          "type": "bool"
        }
      ],
      "name": "claimServiceFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultAdminDelay",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultAdminDelayIncreaseWait",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flip",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOperators",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint88",
              "name": "rewards",
              "type": "uint88"
            },
            {
              "internalType": "uint80",
              "name": "pendingFee",
              "type": "uint80"
            },
            {
              "internalType": "uint88",
              "name": "slashCounter",
              "type": "uint88"
            }
          ],
          "internalType": "struct RebaserV1.Operator[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[8]",
          "name": "addresses",
          "type": "address[8]"
        },
        {
          "internalType": "uint256",
          "name": "aprThresholdBps_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "slashThresholdBps_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rebaseInterval_",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastRebaseTime",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "operators",
      "outputs": [
        {
          "internalType": "uint88",
          "name": "rewards",
          "type": "uint88"
        },
        {
          "internalType": "uint80",
          "name": "pendingFee",
          "type": "uint80"
        },
        {
          "internalType": "uint88",
          "name": "slashCounter",
          "type": "uint88"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingDefaultAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "schedule",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingDefaultAdminDelay",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "newDelay",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "schedule",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "validatorBalances",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "addresses",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool",
          "name": "takeFee",
          "type": "bool"
        }
      ],
      "name": "rebase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rebaseInterval",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rollbackDefaultAdminDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "servicePendingFee",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "aprThresholdBps_",
          "type": "uint256"
        }
      ],
      "name": "setAprThresholdBps",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rebaseInterval_",
          "type": "uint256"
        }
      ],
      "name": "setRebaseInterval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "slashThresholdBps_",
          "type": "uint256"
        }
      ],
      "name": "setSlashThresholdBps",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slashThresholdBps",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stflip",
      "outputs": [
        {
          "internalType": "contract stFlip",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalOperatorPendingFee",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrappedBurnerProxy",
      "outputs": [
        {
          "internalType": "contract BurnerV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrappedMinterProxy",
      "outputs": [
        {
          "internalType": "contract MinterV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrappedOutputProxy",
      "outputs": [
        {
          "internalType": "contract OutputV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801562000010575f80fd5b506200001b62000021565b620000df565b5f54610100900460ff16156200008d5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b5f5460ff90811614620000dd575f805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6133c180620000ed5f395ff3fe608060405234801561000f575f80fd5b5060043610610276575f3560e01c80638da5cb5b11610156578063d547741f116100ca578063e82748ca11610084578063e82748ca146106b4578063e83cbe39146106db578063ec87621c146106f5578063ef037fb914610709578063f025b2091461071c578063f063b32d1461072f575f80fd5b8063d547741f146105b6578063d602b9fd146105c9578063d81b3a2b146105d1578063e28d4906146105e4578063e33b89751461065b578063e63ab1e91461068d575f80fd5b8063cc8463c81161011b578063cc8463c814610517578063ccc574901461051f578063cde4efa914610546578063cefc142914610559578063cf6eefb714610561578063d53913931461058f575f80fd5b80638da5cb5b146104bb57806391d14854146104c3578063a1eda53c146104d6578063a217fddf146104fd578063b8c8fb2114610504575f80fd5b8063282c51f3116101ed5780634754b7a1116101b25780634754b7a114610433578063634e93da14610446578063649a5ec71461045957806383eb70e51461046c57806384ef8ffc1461049357806389edeb74146104a4575f80fd5b8063282c51f3146103bf5780632f2ff15d146103e657806336568abe146103f95780633f6c17ad1461040c57806343a1c54714610420575f80fd5b806310e481d51161023e57806310e481d5146102ee57806310fe237e1461030f5780631924063e1461033a578063248a9ca314610367578063258373851461039757806327a099d8146103aa575f80fd5b806301ffc9a71461027a578063022d63fb146102a2578063064d9d3d146102be5780630aa6220b146102d3578063109fc167146102db575b5f80fd5b61028d610288366004612b75565b610742565b60405190151581526020015b60405180910390f35b620697805b60405165ffffffffffff9091168152602001610299565b6102d16102cc366004612b9c565b61076c565b005b6102d16107c3565b6102d16102e9366004612bc0565b6107d8565b60c9546102fc9061ffff1681565b60405161ffff9091168152602001610299565b60cc54610322906001600160a01b031681565b6040516001600160a01b039091168152602001610299565b60c95461035290640100000000900463ffffffff1681565b60405163ffffffff9091168152602001610299565b610389610375366004612b9c565b5f9081526065602052604090206001015490565b604051908152602001610299565b6102d16103a5366004612b9c565b610ad2565b6103b2610b32565b6040516102999190612c05565b6103897f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b6102d16103f4366004612c87565b610ca4565b6102d1610407366004612c87565b610d23565b60c9546102fc9062010000900461ffff1681565b6102d161042e366004612cb5565b610e0c565b6102d1610441366004612cf5565b611122565b6102d1610454366004612d34565b61133e565b6102d1610467366004612d4f565b611351565b6103897f5fde63b561377d1441afa201ff619faac2ff8fed70a7fbdbe7a5cb07768c0b7581565b6098546001600160a01b0316610322565b60c95461035290600160401b900463ffffffff1681565b610322611364565b61028d6104d1366004612c87565b61137c565b6104de6113a6565b6040805165ffffffffffff938416815292909116602083015201610299565b6103895f81565b60ca54610322906001600160a01b031681565b6102a76113f8565b6103897f7935bd0ae54bc31f548c14dba4d37c5c64b3f8ca900cb468fb8abd54d5894f5581565b60cd54610322906001600160a01b031681565b6102d1611456565b6105696114d3565b604080516001600160a01b03909316835265ffffffffffff909116602083015201610299565b6103897f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102d16105c4366004612c87565b6114f4565b6102d1611571565b60cb54610322906001600160a01b031681565b6106296105f2366004612b9c565b60cf6020525f90815260409020546001600160581b03808216916001600160501b03600160581b82041691600160a81b9091041683565b604080516001600160581b0394851681526001600160501b039093166020840152921691810191909152606001610299565b60c95461067590600160601b90046001600160501b031681565b6040516001600160501b039091168152602001610299565b6103897f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6103897fb6edeab710812f8917b946c63c63b900f456e6a1abea66a90b1f8277f035664b81565b60c95461067590600160b01b90046001600160501b031681565b6103895f8051602061336c83398151915281565b6102d1610717366004612b9c565b611583565b60ce54610322906001600160a01b031681565b6102d161073d366004612dbc565b6115ee565b5f6001600160e01b031982166318a4c3c360e11b1480610766575061076682611949565b92915050565b5f6107768161197d565b61077f82611987565b60c9805461ffff191661ffff9290921691909117905560405182907f7c7727b8bcaa6689ef7201134e70a50faa03adb9d4cf96a905dffa8ea06047dd905f90a25050565b5f6107cd8161197d565b6107d56119ed565b50565b5f81815260cf60205260408082205460cb549151630c3e8d1160e31b8152600481018590528392600160581b9092046001600160501b0316916001600160a01b0316906361f46888906024016040805180830381865afa15801561083e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108629190612e42565b90935091508515801561087457508087115b156108925760405163968af5a360e01b815260040160405180910390fd5b336001600160a01b038316148015906108b45750336001600160a01b03841614155b156108d2576040516310e9258960e11b815260040160405180910390fd5b5f866108de57876108e0565b815b90506108eb816119f9565b5f86815260cf602052604090208054600b90610918908490600160581b90046001600160501b0316612e83565b92506101000a8154816001600160501b0302191690836001600160501b03160217905550610945816119f9565b60c98054601690610967908490600160b01b90046001600160501b0316612e83565b92506101000a8154816001600160501b0302191690836001600160501b031602179055508515156001151503610a195760cd5460cb546040516323b872dd60e01b81526001600160a01b039182166004820152336024820152604481018490529116906323b872dd906064016020604051808303815f875af11580156109ef573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a139190612eb3565b50610a8d565b60ce546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f19906044016020604051808303815f875af1158015610a67573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a8b9190612eb3565b505b60405133815285908715159083907f170c902c4edcafb19ffe45aca96f240dcab1cc90c1f852ac1b9a8645bc105d079060200160405180910390a45050505050505050565b5f610adc8161197d565b610ae582611987565b60c9805461ffff92909216620100000263ffff00001990921691909117905560405182907fe4b0ed8ccd0452d63e30d46c6da86090092d34892df8b873ab5ba7b4aa060eee905f90a25050565b60605f60cb5f9054906101000a90046001600160a01b03166001600160a01b0316631a4a7c616040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b85573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ba99190612ece565b90505f8167ffffffffffffffff811115610bc557610bc5612ee5565b604051908082528060200260200182016040528015610c0e57816020015b604080516060810182525f80825260208083018290529282015282525f19909201910181610be35790505b5090505f5b82811015610c9d575f81815260cf6020908152604091829020825160608101845290546001600160581b0380821683526001600160501b03600160581b83041693830193909352600160a81b9004909116918101919091528251839083908110610c7f57610c7f612ef9565b60200260200101819052508080610c9590612f0d565b915050610c13565b5092915050565b81610d155760405162461bcd60e51b815260206004820152603660248201527f416363657373436f6e74726f6c3a2063616e2774206469726563746c79206772604482015275616e742064656661756c742061646d696e20726f6c6560501b60648201526084015b60405180910390fd5b610d1f8282611a60565b5050565b81158015610d3e57506098546001600160a01b038281169116145b15610e02575f80610d4d6114d3565b90925090506001600160a01b038216158015610d70575065ffffffffffff811615155b8015610d8357504265ffffffffffff8216105b610ded5760405162461bcd60e51b815260206004820152603560248201527f416363657373436f6e74726f6c3a206f6e6c792063616e2072656e6f756e636560448201527420696e2074776f2064656c6179656420737465707360581b6064820152608401610d0c565b50506097805465ffffffffffff60a01b191690555b610d1f8282611a89565b5f54610100900460ff1615808015610e2a57505f54600160ff909116105b80610e435750303b158015610e4357505f5460ff166001145b610ea65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610d0c565b5f805460ff191660011790558015610ec7575f805461ff0019166101001790555b610ed46020860186612d34565b60cd80546001600160a01b0319166001600160a01b0392909216919091179055610f046040860160208701612d34565b60ca80546001600160a01b0319166001600160a01b0392909216919091179055610f3d5f610f386060880160408901612d34565b611b03565b610f6a5f8051602061336c8339815191528660025b602002016020810190610f659190612d34565b611b33565b610f835f8051602061336c833981519152866004610f52565b610faf7fb6edeab710812f8917b946c63c63b900f456e6a1abea66a90b1f8277f035664b866003610f52565b610fbf60c0860160a08701612d34565b60ce80546001600160a01b0319166001600160a01b0392909216919091179055610fef60e0860160c08701612d34565b60cb80546001600160a01b0319166001600160a01b0392909216919091179055611020610100860160e08701612d34565b60cc80546001600160a01b0319166001600160a01b039290921691909117905561104983611987565b60c960026101000a81548161ffff021916908361ffff16021790555061106e84611987565b60c9805461ffff191661ffff9290921691909117905561108d82611bdc565b60c960086101000a81548163ffffffff021916908363ffffffff1602179055506110b642611bdc565b60c960046101000a81548163ffffffff021916908363ffffffff160217905550801561111b575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b7fb6edeab710812f8917b946c63c63b900f456e6a1abea66a90b1f8277f035664b61114c8161197d565b8215801561116b575060c954600160601b90046001600160501b031684115b156111895760405163968af5a360e01b815260040160405180910390fd5b5f8361119557846111a9565b60c954600160601b90046001600160501b03165b90506111b4816119f9565b60c98054600c906111d6908490600160601b90046001600160501b0316612e83565b92506101000a8154816001600160501b0302191690836001600160501b0316021790555082151560011515036112885760cd5460cb546040516323b872dd60e01b81526001600160a01b039182166004820152336024820152604481018490529116906323b872dd906064016020604051808303815f875af115801561125e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112829190612eb3565b506112fc565b60ce546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f19906044016020604051808303815f875af11580156112d6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112fa9190612eb3565b505b6040513381525f908415159083907f170c902c4edcafb19ffe45aca96f240dcab1cc90c1f852ac1b9a8645bc105d079060200160405180910390a45050505050565b5f6113488161197d565b610d1f82611c40565b5f61135b8161197d565b610d1f82611cb2565b5f6113776098546001600160a01b031690565b905090565b5f9182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6098545f90600160d01b900465ffffffffffff1680151580156113d157504265ffffffffffff821610155b6113dc575f806113f0565b609854600160a01b900465ffffffffffff16815b915091509091565b6098545f90600160d01b900465ffffffffffff16801515801561142257504265ffffffffffff8216105b61143d57609754600160d01b900465ffffffffffff16611450565b609854600160a01b900465ffffffffffff165b91505090565b5f61145f6114d3565b509050336001600160a01b038216146114cb5760405162461bcd60e51b815260206004820152602860248201527f416363657373436f6e74726f6c3a2070656e64696e672061646d696e206d75736044820152671d081858d8d95c1d60c21b6064820152608401610d0c565b6107d5611d21565b6097546001600160a01b03811691600160a01b90910465ffffffffffff1690565b816115675760405162461bcd60e51b815260206004820152603760248201527f416363657373436f6e74726f6c3a2063616e2774206469726563746c7920726560448201527f766f6b652064656661756c742061646d696e20726f6c650000000000000000006064820152608401610d0c565b610d1f8282611de9565b5f61157b8161197d565b6107d5611e0d565b5f61158d8161197d565b61159682611bdc565b60c9805463ffffffff92909216600160401b026bffffffff00000000000000001990921691909117905560405182907fa2f43834a98afe051fecdf3ad4e6e49e5269d09038972451b2daf178cc7b46cc905f90a25050565b5f8051602061336c8339815191526116058161197d565b60c9545f9061162290640100000000900463ffffffff1642612f25565b60c954909150600160401b900463ffffffff168110156116555760405163bb6e6ce160e01b815260040160405180910390fd5b8584146116755760405163125c95b960e01b815260040160405180910390fd5b5f806116848989898989611e17565b915091505f60ce5f9054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116d9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116fd9190612ece565b60c95460ca5460408051632fe3188160e11b815290519394505f938693600160601b90046001600160501b0316926001600160a01b031691635fc631029160048083019260209291908290030181865afa15801561175d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117819190612ece565b60cd5460cb546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa1580156117cb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117ef9190612ece565b6117f99088612f38565b6118039190612f25565b61180d9190612f25565b6118179190612f25565b90505f61182586848461208b565b905060ce5f9054906101000a90046001600160a01b03166001600160a01b0316638f490d708e8460c960089054906101000a900463ffffffff166040518463ffffffff1660e01b815260040161189493929190928352602083019190915263ffffffff16604082015260600190565b6020604051808303815f875af11580156118b0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118d49190612eb3565b506118de42611bdc565b60c960046101000a81548163ffffffff021916908363ffffffff1602179055508185827f4bebbc153c41fda68c534243bcaa82e56806356863b729e66205708d51cf5cce8660405161193291815260200190565b60405180910390a450505050505050505050505050565b5f6001600160e01b03198216637965db0b60e01b148061076657506301ffc9a760e01b6001600160e01b0319831614610766565b6107d581336121b0565b5f61ffff8211156119e95760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203160448201526536206269747360d01b6064820152608401610d0c565b5090565b6119f75f80612209565b565b5f6001600160501b038211156119e95760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203860448201526530206269747360d01b6064820152608401610d0c565b5f82815260656020526040902060010154611a7a8161197d565b611a848383611b33565b505050565b6001600160a01b0381163314611af95760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610d0c565b610d1f82826122c8565b5f54610100900460ff16611b295760405162461bcd60e51b8152600401610d0c90612f4b565b610d1f8282612303565b81611bd2575f611b4b6098546001600160a01b031690565b6001600160a01b031614611bb65760405162461bcd60e51b815260206004820152602c60248201527f416363657373436f6e74726f6c3a2064656661756c742061646d696e20616c7260448201526b1958591e4819dc985b9d195960a21b6064820152608401610d0c565b609880546001600160a01b0319166001600160a01b0383161790555b610d1f82826123a8565b5f63ffffffff8211156119e95760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610d0c565b5f611c496113f8565b611c524261242d565b611c5c9190612f96565b9050611c688282612493565b60405165ffffffffffff821681526001600160a01b038316907f3377dc44241e779dd06afab5b788a35ca5f3b778836e2990bdb26a2a4b2e5ed69060200160405180910390a25050565b5f611cbc82612510565b611cc54261242d565b611ccf9190612f96565b9050611cdb8282612209565b6040805165ffffffffffff8085168252831660208201527ff1038c18cf84a56e432fdbfaf746924b7ea511dfe03a6506a0ceba4888788d9b910160405180910390a15050565b5f80611d2b6114d3565b91509150611d408165ffffffffffff16151590565b8015611d5357504265ffffffffffff8216105b611db05760405162461bcd60e51b815260206004820152602860248201527f416363657373436f6e74726f6c3a207472616e736665722064656c6179206e6f6044820152671d081c185cdcd95960c21b6064820152608401610d0c565b611dcb5f611dc66098546001600160a01b031690565b6122c8565b611dd55f83611b33565b5050609780546001600160d01b0319169055565b5f82815260656020526040902060010154611e038161197d565b611a8483836122c8565b6119f75f80612493565b60cb54604051636797b49560e11b81525f9182918291829182918291829182916001600160a01b039091169063cf2f692a90611e59908e908e90600401612fb5565b5f60405180830381865afa158015611e73573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052611e9a9190810190613046565b9250925092505f8267ffffffffffffffff811115611eba57611eba612ee5565b604051908082528060200260200182016040528015611ee3578160200160208202803683370190505b5090508115155f03611f08576040516308d8296f60e01b815260040160405180910390fd5b8c8b14611f285760405163125c95b960e01b815260040160405180910390fd5b83515f5b81811015611ff557858181518110611f4657611f46612ef9565b60200260200101516020015115156001151503611fe5578f8f82818110611f6f57611f6f612ef9565b9050602002013583878381518110611f8957611f89612ef9565b60200260200101515f015160ff1681518110611fa757611fa7612ef9565b60200260200101818151611fbb9190612f38565b9052508f8f82818110611fd057611fd0612ef9565b9050602002013589611fe29190612f38565b98505b611fee81612f0d565b9050611f2c565b50600195505b838610156120455761202782878151811061201857612018612ef9565b6020026020010151878d61255e565b6120319088612f38565b96508561203d81612f0d565b965050611ffb565b61204e876119f9565b60c980546001600160501b0392909216600160b01b026001600160b01b039092169190911790555095975093955050505050509550959350505050565b5f808383111561215057655af3107a40006301e133806120b387670de0b6b3a7640000613141565b6120bd9190613158565b670de0b6b3a7640000866120d18783613141565b6120db9190613158565b6120e59190612f25565b6120f790670de0b6b3a7640000613141565b6121019190613158565b61210b9190613158565b60c95490915061ffff16612120826001612f38565b1061214b57612130816001612f38565b60405162f637e760e51b8152600401610d0c91815260200190565b6121a8565b5f8461215e85612710613141565b6121689190613158565b61217490612710612f25565b60c95490915062010000900461ffff1681106121a65760405163e27d543960e01b815260048101829052602401610d0c565b505b949350505050565b6121ba828261137c565b610d1f576121c7816128eb565b6121d28360206128fd565b6040516020016121e3929190613199565b60408051601f198184030181529082905262461bcd60e51b8252610d0c9160040161320d565b609854600160d01b900465ffffffffffff16801561228b574265ffffffffffff8216101561226257609854609780546001600160d01b0316600160a01b90920465ffffffffffff16600160d01b0291909117905561228b565b6040517f2b1fa2edafe6f7b9e97c1a9e0c3660e645beb2dcaa2d45bdbf9beaf5472e1ec5905f90a15b50609880546001600160a01b0316600160a01b65ffffffffffff948516026001600160d01b031617600160d01b9290931691909102919091179055565b811580156122e357506098546001600160a01b038281169116145b156122f957609880546001600160a01b03191690555b610d1f8282612a93565b5f54610100900460ff166123295760405162461bcd60e51b8152600401610d0c90612f4b565b6001600160a01b03811661237f5760405162461bcd60e51b815260206004820152601e60248201527f416363657373436f6e74726f6c3a20302064656661756c742061646d696e00006044820152606401610d0c565b609780546001600160d01b0316600160d01b65ffffffffffff851602179055610d1f5f82611b33565b6123b2828261137c565b610d1f575f8281526065602090815260408083206001600160a01b03851684529091529020805460ff191660011790556123e93390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b5f65ffffffffffff8211156119e95760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b6064820152608401610d0c565b5f61249c6114d3565b6097805465ffffffffffff8616600160a01b026001600160d01b03199091166001600160a01b0388161717905591506124de90508165ffffffffffff16151590565b15611a84576040517f8886ebfc4259abdbc16601dd8fb5678e54878f47b3c34836cfc51154a9605109905f90a1505050565b5f8061251a6113f8565b90508065ffffffffffff168365ffffffffffff16116125425761253d838261323f565b612557565b61255765ffffffffffff841662069780612af9565b9392505050565b60cb54604051634deda15b60e11b8152600481018490525f91829182918291829182916001600160a01b0390911690639bdb42b690602401608060405180830381865afa1580156125b1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906125d59190613285565b5f8c815260cf602052604081205494985092965090945092506001600160581b03600160a81b830481169261260b9116876132d6565b6001600160601b031690505f82866001600160601b031661262c9190612f38565b905081612639828e612f38565b1061284e5780821115612661576126508183612f25565b61265a908d612f25565b9750612678565b61266b8282612f25565b612675908d612f38565b97505b828811156127ef5782156126ad576126908389612f25565b5f8c815260cf6020526040902080546001600160a81b0316905597505b6126b6886119f9565b5f8c815260cf6020526040812080546001600160501b0393909316929091906126e99084906001600160581b03166132f6565b92506101000a8154816001600160581b0302191690836001600160581b0316021790555089151560011515036127ea5761273c61271061272d61ffff87168b613141565b6127379190613158565b6119f9565b5f8c815260cf602052604090208054600b90612769908490600160581b90046001600160501b0316613316565b92506101000a8154816001600160501b0302191690836001600160501b031602179055506127a36127108661ffff168a61272d9190613141565b60c98054600c906127c5908490600160601b90046001600160501b0316613316565b92506101000a8154816001600160501b0302191690836001600160501b031602179055505b6128bd565b6127f888612b0e565b5f8c815260cf602052604090208054601590612825908490600160a81b90046001600160581b0316613336565b92506101000a8154816001600160581b0302191690836001600160581b031602179055506128bd565b61286b8c61285c8385612f25565b6128669190612f25565b612b0e565b5f8c815260cf602052604090208054601590612898908490600160a81b90046001600160581b03166132f6565b92506101000a8154816001600160581b0302191690836001600160581b031602179055505b5050505f978852505060cf6020525050604090932054600160581b90046001600160501b0316949350505050565b60606107666001600160a01b03831660145b60605f61290b836002613141565b612916906002612f38565b67ffffffffffffffff81111561292e5761292e612ee5565b6040519080825280601f01601f191660200182016040528015612958576020820181803683370190505b509050600360fc1b815f8151811061297257612972612ef9565b60200101906001600160f81b03191690815f1a905350600f60fb1b816001815181106129a0576129a0612ef9565b60200101906001600160f81b03191690815f1a9053505f6129c2846002613141565b6129cd906001612f38565b90505b6001811115612a44576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612a0157612a01612ef9565b1a60f81b828281518110612a1757612a17612ef9565b60200101906001600160f81b03191690815f1a90535060049490941c93612a3d81613356565b90506129d0565b5083156125575760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610d0c565b612a9d828261137c565b15610d1f575f8281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b5f818310612b075781612557565b5090919050565b5f6001600160581b038211156119e95760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203860448201526538206269747360d01b6064820152608401610d0c565b5f60208284031215612b85575f80fd5b81356001600160e01b031981168114612557575f80fd5b5f60208284031215612bac575f80fd5b5035919050565b80151581146107d5575f80fd5b5f805f8060808587031215612bd3575f80fd5b843593506020850135612be581612bb3565b92506040850135612bf581612bb3565b9396929550929360600135925050565b602080825282518282018190525f919060409081850190868401855b82811015612c6657815180516001600160581b039081168652878201516001600160501b03168887015290860151168585015260609093019290850190600101612c21565b5091979650505050505050565b6001600160a01b03811681146107d5575f80fd5b5f8060408385031215612c98575f80fd5b823591506020830135612caa81612c73565b809150509250929050565b5f805f806101608587031215612cc9575f80fd5b610100850186811115612cda575f80fd5b94969435955050506101208501359261014086013592509050565b5f805f60608486031215612d07575f80fd5b833592506020840135612d1981612bb3565b91506040840135612d2981612bb3565b809150509250925092565b5f60208284031215612d44575f80fd5b813561255781612c73565b5f60208284031215612d5f575f80fd5b813565ffffffffffff81168114612557575f80fd5b5f8083601f840112612d84575f80fd5b50813567ffffffffffffffff811115612d9b575f80fd5b6020830191508360208260051b8501011115612db5575f80fd5b9250929050565b5f805f805f8060808789031215612dd1575f80fd5b86359550602087013567ffffffffffffffff80821115612def575f80fd5b612dfb8a838b01612d74565b90975095506040890135915080821115612e13575f80fd5b50612e2089828a01612d74565b9094509250506060870135612e3481612bb3565b809150509295509295509295565b5f8060408385031215612e53575f80fd5b8251612e5e81612c73565b6020840151909250612caa81612c73565b634e487b7160e01b5f52601160045260245ffd5b6001600160501b03828116828216039080821115610c9d57610c9d612e6f565b8051612eae81612bb3565b919050565b5f60208284031215612ec3575f80fd5b815161255781612bb3565b5f60208284031215612ede575f80fd5b5051919050565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b5f60018201612f1e57612f1e612e6f565b5060010190565b8181038181111561076657610766612e6f565b8082018082111561076657610766612e6f565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b65ffffffffffff818116838216019080821115610c9d57610c9d612e6f565b602080825281018290525f6001600160fb1b03831115612fd3575f80fd5b8260051b80856040850137919091016040019392505050565b6040805190810167ffffffffffffffff8111828210171561300f5761300f612ee5565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561303e5761303e612ee5565b604052919050565b5f805f60608486031215613058575f80fd5b835167ffffffffffffffff8082111561306f575f80fd5b818601915086601f830112613082575f80fd5b815160208282111561309657613096612ee5565b6130a4818360051b01613015565b828152818101935060069290921b8401810191898311156130c3575f80fd5b938101935b8285101561311e576040858b0312156130e0575f8081fd5b6130e8612fec565b855160ff811681146130f9575f8081fd5b81528583015161310881612bb3565b81840152845260409490940193928101926130c8565b809750508088015195505050505061313860408501612ea3565b90509250925092565b808202811582820484141761076657610766612e6f565b5f8261317257634e487b7160e01b5f52601260045260245ffd5b500490565b5f5b83811015613191578181015183820152602001613179565b50505f910152565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081525f83516131d0816017850160208801613177565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351613201816028840160208801613177565b01602801949350505050565b602081525f825180602084015261322b816040850160208701613177565b601f01601f19169190910160400192915050565b65ffffffffffff828116828216039080821115610c9d57610c9d612e6f565b80516001600160601b0381168114612eae575f80fd5b805161ffff81168114612eae575f80fd5b5f805f8060808587031215613298575f80fd5b6132a18561325e565b93506132af6020860161325e565b92506132bd60408601613274565b91506132cb60608601613274565b905092959194509250565b6001600160601b03818116838216019080821115610c9d57610c9d612e6f565b6001600160581b03818116838216019080821115610c9d57610c9d612e6f565b6001600160501b03818116838216019080821115610c9d57610c9d612e6f565b6001600160581b03828116828216039080821115610c9d57610c9d612e6f565b5f8161336457613364612e6f565b505f19019056fe241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08a26469706673582212204af0679f72c3899b26c5094b7e444e0cba53d77894fe2c9b4ecd6f405510942e64736f6c63430008140033",
    "sourceMap": "913:16870:193:-:0;;;2549:56;;;;;;;;;-1:-1:-1;2575:22:193;:20;:22::i;:::-;913:16870;;5939:280:77;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:77;;216:2:230;5998:66:77;;;198:21:230;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:230;;;338:37;392:19;;5998:66:77;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:77;6140:15;6125:30;;;;;;6174:28;;564:36:230;;;6174:28:77;;552:2:230;537:18;6174:28:77;;;;;;;6074:139;5939:280::o;422:184:230:-;913:16870:193;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f80fd5b5060043610610276575f3560e01c80638da5cb5b11610156578063d547741f116100ca578063e82748ca11610084578063e82748ca146106b4578063e83cbe39146106db578063ec87621c146106f5578063ef037fb914610709578063f025b2091461071c578063f063b32d1461072f575f80fd5b8063d547741f146105b6578063d602b9fd146105c9578063d81b3a2b146105d1578063e28d4906146105e4578063e33b89751461065b578063e63ab1e91461068d575f80fd5b8063cc8463c81161011b578063cc8463c814610517578063ccc574901461051f578063cde4efa914610546578063cefc142914610559578063cf6eefb714610561578063d53913931461058f575f80fd5b80638da5cb5b146104bb57806391d14854146104c3578063a1eda53c146104d6578063a217fddf146104fd578063b8c8fb2114610504575f80fd5b8063282c51f3116101ed5780634754b7a1116101b25780634754b7a114610433578063634e93da14610446578063649a5ec71461045957806383eb70e51461046c57806384ef8ffc1461049357806389edeb74146104a4575f80fd5b8063282c51f3146103bf5780632f2ff15d146103e657806336568abe146103f95780633f6c17ad1461040c57806343a1c54714610420575f80fd5b806310e481d51161023e57806310e481d5146102ee57806310fe237e1461030f5780631924063e1461033a578063248a9ca314610367578063258373851461039757806327a099d8146103aa575f80fd5b806301ffc9a71461027a578063022d63fb146102a2578063064d9d3d146102be5780630aa6220b146102d3578063109fc167146102db575b5f80fd5b61028d610288366004612b75565b610742565b60405190151581526020015b60405180910390f35b620697805b60405165ffffffffffff9091168152602001610299565b6102d16102cc366004612b9c565b61076c565b005b6102d16107c3565b6102d16102e9366004612bc0565b6107d8565b60c9546102fc9061ffff1681565b60405161ffff9091168152602001610299565b60cc54610322906001600160a01b031681565b6040516001600160a01b039091168152602001610299565b60c95461035290640100000000900463ffffffff1681565b60405163ffffffff9091168152602001610299565b610389610375366004612b9c565b5f9081526065602052604090206001015490565b604051908152602001610299565b6102d16103a5366004612b9c565b610ad2565b6103b2610b32565b6040516102999190612c05565b6103897f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b6102d16103f4366004612c87565b610ca4565b6102d1610407366004612c87565b610d23565b60c9546102fc9062010000900461ffff1681565b6102d161042e366004612cb5565b610e0c565b6102d1610441366004612cf5565b611122565b6102d1610454366004612d34565b61133e565b6102d1610467366004612d4f565b611351565b6103897f5fde63b561377d1441afa201ff619faac2ff8fed70a7fbdbe7a5cb07768c0b7581565b6098546001600160a01b0316610322565b60c95461035290600160401b900463ffffffff1681565b610322611364565b61028d6104d1366004612c87565b61137c565b6104de6113a6565b6040805165ffffffffffff938416815292909116602083015201610299565b6103895f81565b60ca54610322906001600160a01b031681565b6102a76113f8565b6103897f7935bd0ae54bc31f548c14dba4d37c5c64b3f8ca900cb468fb8abd54d5894f5581565b60cd54610322906001600160a01b031681565b6102d1611456565b6105696114d3565b604080516001600160a01b03909316835265ffffffffffff909116602083015201610299565b6103897f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102d16105c4366004612c87565b6114f4565b6102d1611571565b60cb54610322906001600160a01b031681565b6106296105f2366004612b9c565b60cf6020525f90815260409020546001600160581b03808216916001600160501b03600160581b82041691600160a81b9091041683565b604080516001600160581b0394851681526001600160501b039093166020840152921691810191909152606001610299565b60c95461067590600160601b90046001600160501b031681565b6040516001600160501b039091168152602001610299565b6103897f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6103897fb6edeab710812f8917b946c63c63b900f456e6a1abea66a90b1f8277f035664b81565b60c95461067590600160b01b90046001600160501b031681565b6103895f8051602061336c83398151915281565b6102d1610717366004612b9c565b611583565b60ce54610322906001600160a01b031681565b6102d161073d366004612dbc565b6115ee565b5f6001600160e01b031982166318a4c3c360e11b1480610766575061076682611949565b92915050565b5f6107768161197d565b61077f82611987565b60c9805461ffff191661ffff9290921691909117905560405182907f7c7727b8bcaa6689ef7201134e70a50faa03adb9d4cf96a905dffa8ea06047dd905f90a25050565b5f6107cd8161197d565b6107d56119ed565b50565b5f81815260cf60205260408082205460cb549151630c3e8d1160e31b8152600481018590528392600160581b9092046001600160501b0316916001600160a01b0316906361f46888906024016040805180830381865afa15801561083e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108629190612e42565b90935091508515801561087457508087115b156108925760405163968af5a360e01b815260040160405180910390fd5b336001600160a01b038316148015906108b45750336001600160a01b03841614155b156108d2576040516310e9258960e11b815260040160405180910390fd5b5f866108de57876108e0565b815b90506108eb816119f9565b5f86815260cf602052604090208054600b90610918908490600160581b90046001600160501b0316612e83565b92506101000a8154816001600160501b0302191690836001600160501b03160217905550610945816119f9565b60c98054601690610967908490600160b01b90046001600160501b0316612e83565b92506101000a8154816001600160501b0302191690836001600160501b031602179055508515156001151503610a195760cd5460cb546040516323b872dd60e01b81526001600160a01b039182166004820152336024820152604481018490529116906323b872dd906064016020604051808303815f875af11580156109ef573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a139190612eb3565b50610a8d565b60ce546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f19906044016020604051808303815f875af1158015610a67573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a8b9190612eb3565b505b60405133815285908715159083907f170c902c4edcafb19ffe45aca96f240dcab1cc90c1f852ac1b9a8645bc105d079060200160405180910390a45050505050505050565b5f610adc8161197d565b610ae582611987565b60c9805461ffff92909216620100000263ffff00001990921691909117905560405182907fe4b0ed8ccd0452d63e30d46c6da86090092d34892df8b873ab5ba7b4aa060eee905f90a25050565b60605f60cb5f9054906101000a90046001600160a01b03166001600160a01b0316631a4a7c616040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b85573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ba99190612ece565b90505f8167ffffffffffffffff811115610bc557610bc5612ee5565b604051908082528060200260200182016040528015610c0e57816020015b604080516060810182525f80825260208083018290529282015282525f19909201910181610be35790505b5090505f5b82811015610c9d575f81815260cf6020908152604091829020825160608101845290546001600160581b0380821683526001600160501b03600160581b83041693830193909352600160a81b9004909116918101919091528251839083908110610c7f57610c7f612ef9565b60200260200101819052508080610c9590612f0d565b915050610c13565b5092915050565b81610d155760405162461bcd60e51b815260206004820152603660248201527f416363657373436f6e74726f6c3a2063616e2774206469726563746c79206772604482015275616e742064656661756c742061646d696e20726f6c6560501b60648201526084015b60405180910390fd5b610d1f8282611a60565b5050565b81158015610d3e57506098546001600160a01b038281169116145b15610e02575f80610d4d6114d3565b90925090506001600160a01b038216158015610d70575065ffffffffffff811615155b8015610d8357504265ffffffffffff8216105b610ded5760405162461bcd60e51b815260206004820152603560248201527f416363657373436f6e74726f6c3a206f6e6c792063616e2072656e6f756e636560448201527420696e2074776f2064656c6179656420737465707360581b6064820152608401610d0c565b50506097805465ffffffffffff60a01b191690555b610d1f8282611a89565b5f54610100900460ff1615808015610e2a57505f54600160ff909116105b80610e435750303b158015610e4357505f5460ff166001145b610ea65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610d0c565b5f805460ff191660011790558015610ec7575f805461ff0019166101001790555b610ed46020860186612d34565b60cd80546001600160a01b0319166001600160a01b0392909216919091179055610f046040860160208701612d34565b60ca80546001600160a01b0319166001600160a01b0392909216919091179055610f3d5f610f386060880160408901612d34565b611b03565b610f6a5f8051602061336c8339815191528660025b602002016020810190610f659190612d34565b611b33565b610f835f8051602061336c833981519152866004610f52565b610faf7fb6edeab710812f8917b946c63c63b900f456e6a1abea66a90b1f8277f035664b866003610f52565b610fbf60c0860160a08701612d34565b60ce80546001600160a01b0319166001600160a01b0392909216919091179055610fef60e0860160c08701612d34565b60cb80546001600160a01b0319166001600160a01b0392909216919091179055611020610100860160e08701612d34565b60cc80546001600160a01b0319166001600160a01b039290921691909117905561104983611987565b60c960026101000a81548161ffff021916908361ffff16021790555061106e84611987565b60c9805461ffff191661ffff9290921691909117905561108d82611bdc565b60c960086101000a81548163ffffffff021916908363ffffffff1602179055506110b642611bdc565b60c960046101000a81548163ffffffff021916908363ffffffff160217905550801561111b575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b7fb6edeab710812f8917b946c63c63b900f456e6a1abea66a90b1f8277f035664b61114c8161197d565b8215801561116b575060c954600160601b90046001600160501b031684115b156111895760405163968af5a360e01b815260040160405180910390fd5b5f8361119557846111a9565b60c954600160601b90046001600160501b03165b90506111b4816119f9565b60c98054600c906111d6908490600160601b90046001600160501b0316612e83565b92506101000a8154816001600160501b0302191690836001600160501b0316021790555082151560011515036112885760cd5460cb546040516323b872dd60e01b81526001600160a01b039182166004820152336024820152604481018490529116906323b872dd906064016020604051808303815f875af115801561125e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112829190612eb3565b506112fc565b60ce546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f19906044016020604051808303815f875af11580156112d6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112fa9190612eb3565b505b6040513381525f908415159083907f170c902c4edcafb19ffe45aca96f240dcab1cc90c1f852ac1b9a8645bc105d079060200160405180910390a45050505050565b5f6113488161197d565b610d1f82611c40565b5f61135b8161197d565b610d1f82611cb2565b5f6113776098546001600160a01b031690565b905090565b5f9182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6098545f90600160d01b900465ffffffffffff1680151580156113d157504265ffffffffffff821610155b6113dc575f806113f0565b609854600160a01b900465ffffffffffff16815b915091509091565b6098545f90600160d01b900465ffffffffffff16801515801561142257504265ffffffffffff8216105b61143d57609754600160d01b900465ffffffffffff16611450565b609854600160a01b900465ffffffffffff165b91505090565b5f61145f6114d3565b509050336001600160a01b038216146114cb5760405162461bcd60e51b815260206004820152602860248201527f416363657373436f6e74726f6c3a2070656e64696e672061646d696e206d75736044820152671d081858d8d95c1d60c21b6064820152608401610d0c565b6107d5611d21565b6097546001600160a01b03811691600160a01b90910465ffffffffffff1690565b816115675760405162461bcd60e51b815260206004820152603760248201527f416363657373436f6e74726f6c3a2063616e2774206469726563746c7920726560448201527f766f6b652064656661756c742061646d696e20726f6c650000000000000000006064820152608401610d0c565b610d1f8282611de9565b5f61157b8161197d565b6107d5611e0d565b5f61158d8161197d565b61159682611bdc565b60c9805463ffffffff92909216600160401b026bffffffff00000000000000001990921691909117905560405182907fa2f43834a98afe051fecdf3ad4e6e49e5269d09038972451b2daf178cc7b46cc905f90a25050565b5f8051602061336c8339815191526116058161197d565b60c9545f9061162290640100000000900463ffffffff1642612f25565b60c954909150600160401b900463ffffffff168110156116555760405163bb6e6ce160e01b815260040160405180910390fd5b8584146116755760405163125c95b960e01b815260040160405180910390fd5b5f806116848989898989611e17565b915091505f60ce5f9054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116d9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116fd9190612ece565b60c95460ca5460408051632fe3188160e11b815290519394505f938693600160601b90046001600160501b0316926001600160a01b031691635fc631029160048083019260209291908290030181865afa15801561175d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117819190612ece565b60cd5460cb546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa1580156117cb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117ef9190612ece565b6117f99088612f38565b6118039190612f25565b61180d9190612f25565b6118179190612f25565b90505f61182586848461208b565b905060ce5f9054906101000a90046001600160a01b03166001600160a01b0316638f490d708e8460c960089054906101000a900463ffffffff166040518463ffffffff1660e01b815260040161189493929190928352602083019190915263ffffffff16604082015260600190565b6020604051808303815f875af11580156118b0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118d49190612eb3565b506118de42611bdc565b60c960046101000a81548163ffffffff021916908363ffffffff1602179055508185827f4bebbc153c41fda68c534243bcaa82e56806356863b729e66205708d51cf5cce8660405161193291815260200190565b60405180910390a450505050505050505050505050565b5f6001600160e01b03198216637965db0b60e01b148061076657506301ffc9a760e01b6001600160e01b0319831614610766565b6107d581336121b0565b5f61ffff8211156119e95760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203160448201526536206269747360d01b6064820152608401610d0c565b5090565b6119f75f80612209565b565b5f6001600160501b038211156119e95760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203860448201526530206269747360d01b6064820152608401610d0c565b5f82815260656020526040902060010154611a7a8161197d565b611a848383611b33565b505050565b6001600160a01b0381163314611af95760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610d0c565b610d1f82826122c8565b5f54610100900460ff16611b295760405162461bcd60e51b8152600401610d0c90612f4b565b610d1f8282612303565b81611bd2575f611b4b6098546001600160a01b031690565b6001600160a01b031614611bb65760405162461bcd60e51b815260206004820152602c60248201527f416363657373436f6e74726f6c3a2064656661756c742061646d696e20616c7260448201526b1958591e4819dc985b9d195960a21b6064820152608401610d0c565b609880546001600160a01b0319166001600160a01b0383161790555b610d1f82826123a8565b5f63ffffffff8211156119e95760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610d0c565b5f611c496113f8565b611c524261242d565b611c5c9190612f96565b9050611c688282612493565b60405165ffffffffffff821681526001600160a01b038316907f3377dc44241e779dd06afab5b788a35ca5f3b778836e2990bdb26a2a4b2e5ed69060200160405180910390a25050565b5f611cbc82612510565b611cc54261242d565b611ccf9190612f96565b9050611cdb8282612209565b6040805165ffffffffffff8085168252831660208201527ff1038c18cf84a56e432fdbfaf746924b7ea511dfe03a6506a0ceba4888788d9b910160405180910390a15050565b5f80611d2b6114d3565b91509150611d408165ffffffffffff16151590565b8015611d5357504265ffffffffffff8216105b611db05760405162461bcd60e51b815260206004820152602860248201527f416363657373436f6e74726f6c3a207472616e736665722064656c6179206e6f6044820152671d081c185cdcd95960c21b6064820152608401610d0c565b611dcb5f611dc66098546001600160a01b031690565b6122c8565b611dd55f83611b33565b5050609780546001600160d01b0319169055565b5f82815260656020526040902060010154611e038161197d565b611a8483836122c8565b6119f75f80612493565b60cb54604051636797b49560e11b81525f9182918291829182918291829182916001600160a01b039091169063cf2f692a90611e59908e908e90600401612fb5565b5f60405180830381865afa158015611e73573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052611e9a9190810190613046565b9250925092505f8267ffffffffffffffff811115611eba57611eba612ee5565b604051908082528060200260200182016040528015611ee3578160200160208202803683370190505b5090508115155f03611f08576040516308d8296f60e01b815260040160405180910390fd5b8c8b14611f285760405163125c95b960e01b815260040160405180910390fd5b83515f5b81811015611ff557858181518110611f4657611f46612ef9565b60200260200101516020015115156001151503611fe5578f8f82818110611f6f57611f6f612ef9565b9050602002013583878381518110611f8957611f89612ef9565b60200260200101515f015160ff1681518110611fa757611fa7612ef9565b60200260200101818151611fbb9190612f38565b9052508f8f82818110611fd057611fd0612ef9565b9050602002013589611fe29190612f38565b98505b611fee81612f0d565b9050611f2c565b50600195505b838610156120455761202782878151811061201857612018612ef9565b6020026020010151878d61255e565b6120319088612f38565b96508561203d81612f0d565b965050611ffb565b61204e876119f9565b60c980546001600160501b0392909216600160b01b026001600160b01b039092169190911790555095975093955050505050509550959350505050565b5f808383111561215057655af3107a40006301e133806120b387670de0b6b3a7640000613141565b6120bd9190613158565b670de0b6b3a7640000866120d18783613141565b6120db9190613158565b6120e59190612f25565b6120f790670de0b6b3a7640000613141565b6121019190613158565b61210b9190613158565b60c95490915061ffff16612120826001612f38565b1061214b57612130816001612f38565b60405162f637e760e51b8152600401610d0c91815260200190565b6121a8565b5f8461215e85612710613141565b6121689190613158565b61217490612710612f25565b60c95490915062010000900461ffff1681106121a65760405163e27d543960e01b815260048101829052602401610d0c565b505b949350505050565b6121ba828261137c565b610d1f576121c7816128eb565b6121d28360206128fd565b6040516020016121e3929190613199565b60408051601f198184030181529082905262461bcd60e51b8252610d0c9160040161320d565b609854600160d01b900465ffffffffffff16801561228b574265ffffffffffff8216101561226257609854609780546001600160d01b0316600160a01b90920465ffffffffffff16600160d01b0291909117905561228b565b6040517f2b1fa2edafe6f7b9e97c1a9e0c3660e645beb2dcaa2d45bdbf9beaf5472e1ec5905f90a15b50609880546001600160a01b0316600160a01b65ffffffffffff948516026001600160d01b031617600160d01b9290931691909102919091179055565b811580156122e357506098546001600160a01b038281169116145b156122f957609880546001600160a01b03191690555b610d1f8282612a93565b5f54610100900460ff166123295760405162461bcd60e51b8152600401610d0c90612f4b565b6001600160a01b03811661237f5760405162461bcd60e51b815260206004820152601e60248201527f416363657373436f6e74726f6c3a20302064656661756c742061646d696e00006044820152606401610d0c565b609780546001600160d01b0316600160d01b65ffffffffffff851602179055610d1f5f82611b33565b6123b2828261137c565b610d1f575f8281526065602090815260408083206001600160a01b03851684529091529020805460ff191660011790556123e93390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b5f65ffffffffffff8211156119e95760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b6064820152608401610d0c565b5f61249c6114d3565b6097805465ffffffffffff8616600160a01b026001600160d01b03199091166001600160a01b0388161717905591506124de90508165ffffffffffff16151590565b15611a84576040517f8886ebfc4259abdbc16601dd8fb5678e54878f47b3c34836cfc51154a9605109905f90a1505050565b5f8061251a6113f8565b90508065ffffffffffff168365ffffffffffff16116125425761253d838261323f565b612557565b61255765ffffffffffff841662069780612af9565b9392505050565b60cb54604051634deda15b60e11b8152600481018490525f91829182918291829182916001600160a01b0390911690639bdb42b690602401608060405180830381865afa1580156125b1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906125d59190613285565b5f8c815260cf602052604081205494985092965090945092506001600160581b03600160a81b830481169261260b9116876132d6565b6001600160601b031690505f82866001600160601b031661262c9190612f38565b905081612639828e612f38565b1061284e5780821115612661576126508183612f25565b61265a908d612f25565b9750612678565b61266b8282612f25565b612675908d612f38565b97505b828811156127ef5782156126ad576126908389612f25565b5f8c815260cf6020526040902080546001600160a81b0316905597505b6126b6886119f9565b5f8c815260cf6020526040812080546001600160501b0393909316929091906126e99084906001600160581b03166132f6565b92506101000a8154816001600160581b0302191690836001600160581b0316021790555089151560011515036127ea5761273c61271061272d61ffff87168b613141565b6127379190613158565b6119f9565b5f8c815260cf602052604090208054600b90612769908490600160581b90046001600160501b0316613316565b92506101000a8154816001600160501b0302191690836001600160501b031602179055506127a36127108661ffff168a61272d9190613141565b60c98054600c906127c5908490600160601b90046001600160501b0316613316565b92506101000a8154816001600160501b0302191690836001600160501b031602179055505b6128bd565b6127f888612b0e565b5f8c815260cf602052604090208054601590612825908490600160a81b90046001600160581b0316613336565b92506101000a8154816001600160581b0302191690836001600160581b031602179055506128bd565b61286b8c61285c8385612f25565b6128669190612f25565b612b0e565b5f8c815260cf602052604090208054601590612898908490600160a81b90046001600160581b03166132f6565b92506101000a8154816001600160581b0302191690836001600160581b031602179055505b5050505f978852505060cf6020525050604090932054600160581b90046001600160501b0316949350505050565b60606107666001600160a01b03831660145b60605f61290b836002613141565b612916906002612f38565b67ffffffffffffffff81111561292e5761292e612ee5565b6040519080825280601f01601f191660200182016040528015612958576020820181803683370190505b509050600360fc1b815f8151811061297257612972612ef9565b60200101906001600160f81b03191690815f1a905350600f60fb1b816001815181106129a0576129a0612ef9565b60200101906001600160f81b03191690815f1a9053505f6129c2846002613141565b6129cd906001612f38565b90505b6001811115612a44576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612a0157612a01612ef9565b1a60f81b828281518110612a1757612a17612ef9565b60200101906001600160f81b03191690815f1a90535060049490941c93612a3d81613356565b90506129d0565b5083156125575760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610d0c565b612a9d828261137c565b15610d1f575f8281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b5f818310612b075781612557565b5090919050565b5f6001600160581b038211156119e95760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203860448201526538206269747360d01b6064820152608401610d0c565b5f60208284031215612b85575f80fd5b81356001600160e01b031981168114612557575f80fd5b5f60208284031215612bac575f80fd5b5035919050565b80151581146107d5575f80fd5b5f805f8060808587031215612bd3575f80fd5b843593506020850135612be581612bb3565b92506040850135612bf581612bb3565b9396929550929360600135925050565b602080825282518282018190525f919060409081850190868401855b82811015612c6657815180516001600160581b039081168652878201516001600160501b03168887015290860151168585015260609093019290850190600101612c21565b5091979650505050505050565b6001600160a01b03811681146107d5575f80fd5b5f8060408385031215612c98575f80fd5b823591506020830135612caa81612c73565b809150509250929050565b5f805f806101608587031215612cc9575f80fd5b610100850186811115612cda575f80fd5b94969435955050506101208501359261014086013592509050565b5f805f60608486031215612d07575f80fd5b833592506020840135612d1981612bb3565b91506040840135612d2981612bb3565b809150509250925092565b5f60208284031215612d44575f80fd5b813561255781612c73565b5f60208284031215612d5f575f80fd5b813565ffffffffffff81168114612557575f80fd5b5f8083601f840112612d84575f80fd5b50813567ffffffffffffffff811115612d9b575f80fd5b6020830191508360208260051b8501011115612db5575f80fd5b9250929050565b5f805f805f8060808789031215612dd1575f80fd5b86359550602087013567ffffffffffffffff80821115612def575f80fd5b612dfb8a838b01612d74565b90975095506040890135915080821115612e13575f80fd5b50612e2089828a01612d74565b9094509250506060870135612e3481612bb3565b809150509295509295509295565b5f8060408385031215612e53575f80fd5b8251612e5e81612c73565b6020840151909250612caa81612c73565b634e487b7160e01b5f52601160045260245ffd5b6001600160501b03828116828216039080821115610c9d57610c9d612e6f565b8051612eae81612bb3565b919050565b5f60208284031215612ec3575f80fd5b815161255781612bb3565b5f60208284031215612ede575f80fd5b5051919050565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b5f60018201612f1e57612f1e612e6f565b5060010190565b8181038181111561076657610766612e6f565b8082018082111561076657610766612e6f565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b65ffffffffffff818116838216019080821115610c9d57610c9d612e6f565b602080825281018290525f6001600160fb1b03831115612fd3575f80fd5b8260051b80856040850137919091016040019392505050565b6040805190810167ffffffffffffffff8111828210171561300f5761300f612ee5565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561303e5761303e612ee5565b604052919050565b5f805f60608486031215613058575f80fd5b835167ffffffffffffffff8082111561306f575f80fd5b818601915086601f830112613082575f80fd5b815160208282111561309657613096612ee5565b6130a4818360051b01613015565b828152818101935060069290921b8401810191898311156130c3575f80fd5b938101935b8285101561311e576040858b0312156130e0575f8081fd5b6130e8612fec565b855160ff811681146130f9575f8081fd5b81528583015161310881612bb3565b81840152845260409490940193928101926130c8565b809750508088015195505050505061313860408501612ea3565b90509250925092565b808202811582820484141761076657610766612e6f565b5f8261317257634e487b7160e01b5f52601260045260245ffd5b500490565b5f5b83811015613191578181015183820152602001613179565b50505f910152565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081525f83516131d0816017850160208801613177565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351613201816028840160208801613177565b01602801949350505050565b602081525f825180602084015261322b816040850160208701613177565b601f01601f19169190910160400192915050565b65ffffffffffff828116828216039080821115610c9d57610c9d612e6f565b80516001600160601b0381168114612eae575f80fd5b805161ffff81168114612eae575f80fd5b5f805f8060808587031215613298575f80fd5b6132a18561325e565b93506132af6020860161325e565b92506132bd60408601613274565b91506132cb60608601613274565b905092959194509250565b6001600160601b03818116838216019080821115610c9d57610c9d612e6f565b6001600160581b03818116838216019080821115610c9d57610c9d612e6f565b6001600160501b03818116838216019080821115610c9d57610c9d612e6f565b6001600160581b03828116828216039080821115610c9d57610c9d612e6f565b5f8161336457613364612e6f565b505f19019056fe241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08a26469706673582212204af0679f72c3899b26c5094b7e444e0cba53d77894fe2c9b4ecd6f405510942e64736f6c63430008140033",
    "sourceMap": "913:16870:193:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2929:230:67;;;;;;:::i;:::-;;:::i;:::-;;;470:14:230;;463:22;445:41;;433:2;418:18;2929:230:67;;;;;;;;8070:108;8165:6;8070:108;;;671:14:230;659:27;;;641:46;;629:2;614:18;8070:108:67;497:196:230;4048:215:193;;;;;;:::i;:::-;;:::i;:::-;;11184:126:67;;;:::i;15327:1004:193:-;;;;;;:::i;:::-;;:::i;1018:29::-;;;;;;;;;;;;1698:6:230;1686:19;;;1668:38;;1656:2;1641:18;1018:29:193;1524:188:230;1474:34:193;;;;;-1:-1:-1;;;;;1474:34:193;;;;;;-1:-1:-1;;;;;1899:32:230;;;1881:51;;1869:2;1854:18;1474:34:193;1717:221:230;1148:28:193;;;;;;;;;;;;;;;2117:10:230;2105:23;;;2087:42;;2075:2;2060:18;1148:28:193;1943:192:230;4834:129:68;;;;;;:::i;:::-;4908:7;4934:12;;;:6;:12;;;;;:22;;;;4834:129;;;;2471:25:230;;;2459:2;2444:18;4834:129:68;2325:177:230;4572:227:193;;;;;;:::i;:::-;;:::i;17400:376::-;;;:::i;:::-;;;;;;;:::i;831:62:192:-;;869:24;831:62;;3471:277:67;;;;;;:::i;:::-;;:::i;4813:605::-;;;;;;:::i;:::-;;:::i;1083:31:193:-;;;;;;;;;;;;2956:889;;;;;;:::i;:::-;;:::i;16575:761::-;;;;;;:::i;:::-;;:::i;8383:150:67:-;;;;;;:::i;:::-;;:::i;10531:145::-;;;;;;:::i;:::-;;:::i;691:64:192:-;;730:25;691:64;;6967:106:67;7046:20;;-1:-1:-1;;;;;7046:20:67;6967:106;;1213:28:193;;;;;-1:-1:-1;;;1213:28:193;;;;;;3215:93:67;;;:::i;3329:145:68:-;;;;;;:::i;:::-;;:::i;7725:261:67:-;;;:::i;:::-;;;;5752:14:230;5793:15;;;5775:34;;5845:15;;;;5840:2;5825:18;;5818:43;5715:18;7725:261:67;5572:295:230;2450:49:68;;2495:4;2450:49;;1392:34:193;;;;;-1:-1:-1;;;;;1392:34:193;;;7412:229:67;;;:::i;464:66:192:-;;504:26;464:66;;1517:18:193;;;;;-1:-1:-1;;;;;1517:18:193;;;9494:254:67;;;:::i;7157:171::-;;;:::i;:::-;;;;-1:-1:-1;;;;;6512:32:230;;;6494:51;;6593:14;6581:27;;;6576:2;6561:18;;6554:55;6467:18;7157:171:67;6322:293:230;762:62:192;;800:24;762:62;;3848:280:67;;;;;;:::i;:::-;;:::i;9043:128::-;;;:::i;1433:34:193:-;;;;;-1:-1:-1;;;;;1433:34:193;;;1775:45;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1775:45:193;;;;-1:-1:-1;;;;;;;;1775:45:193;;;;-1:-1:-1;;;1775:45:193;;;;;;;;;;-1:-1:-1;;;;;7103:15:230;;;7085:34;;-1:-1:-1;;;;;7155:35:230;;;7150:2;7135:18;;7128:63;7227:15;;7207:18;;;7200:43;;;;7030:2;7015:18;1775:45:193;6846:403:230;1278:31:193;;;;;-1:-1:-1;;;1278:31:193;;-1:-1:-1;;;;;1278:31:193;;;;;;-1:-1:-1;;;;;7416:35:230;;;7398:54;;7386:2;7371:18;1278:31:193;7254:204:230;900:62:192;;938:24;900:62;;608:76;;653:31;608:76;;1346:37:193;;;;;-1:-1:-1;;;1346:37:193;;-1:-1:-1;;;;;1346:37:193;;;537:64:192;;-1:-1:-1;;;;;;;;;;;537:64:192;;5000:212:193;;;;;;:::i;:::-;;:::i;1542:20::-;;;;;-1:-1:-1;;;;;1542:20:193;;;6350:1048;;;;;;:::i;:::-;;:::i;2929:230:67:-;3014:4;-1:-1:-1;;;;;;3037:75:67;;-1:-1:-1;;;3037:75:67;;:115;;;3116:36;3140:11;3116:23;:36::i;:::-;3030:122;2929:230;-1:-1:-1;;2929:230:67:o;4048:215:193:-;2495:4:68;2928:16;2495:4;2928:10;:16::i;:::-;4169:35:193::1;4187:16;4169:17;:35::i;:::-;4151:15;:53:::0;;-1:-1:-1;;4151:53:193::1;;::::0;;;::::1;::::0;;;::::1;::::0;;4222:33:::1;::::0;4238:16;;4222:33:::1;::::0;-1:-1:-1;;4222:33:193::1;4048:215:::0;;:::o;11184:126:67:-;2495:4:68;2928:16;2495:4;2928:10;:16::i;:::-;11275:28:67::1;:26;:28::i;:::-;11184:126:::0;:::o;15327:1004:193:-;15430:15;15508:21;;;:9;:21;;;;;;:32;15576:18;;:51;;-1:-1:-1;;;15576:51:193;;;;;2471:25:230;;;15430:15:193;;-1:-1:-1;;;15508:32:193;;;-1:-1:-1;;;;;15508:32:193;;-1:-1:-1;;;;;15576:18:193;;:39;;2444:18:230;;15576:51:193;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15551:76;;-1:-1:-1;15551:76:193;-1:-1:-1;15652:12:193;;;;:35;;;15677:10;15668:6;:19;15652:35;15648:67;;;15696:19;;-1:-1:-1;;;15696:19:193;;;;;;;;;;;15648:67;15730:10;-1:-1:-1;;;;;15730:26:193;;;;;;:51;;-1:-1:-1;15760:10:193;-1:-1:-1;;;;;15760:21:193;;;;15730:51;15726:90;;;15790:26;;-1:-1:-1;;;15790:26:193;;;;;;;;;;;15726:90;15829:21;15853:3;:25;;15872:6;15853:25;;;15859:10;15853:25;15829:49;;15927:32;15945:13;15927:17;:32::i;:::-;15891:21;;;;:9;:21;;;;;:68;;:32;;:68;;;;-1:-1:-1;;;15891:68:193;;-1:-1:-1;;;;;15891:68:193;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;15891:68:193;;;;;-1:-1:-1;;;;;15891:68:193;;;;;;15997:32;16015:13;15997:17;:32::i;:::-;15970:23;:59;;:23;;:59;;;;-1:-1:-1;;;15970:59:193;;-1:-1:-1;;;;;15970:59:193;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;15970:59:193;;;;;-1:-1:-1;;;;;15970:59:193;;;;;;16054:11;:19;;16069:4;16054:19;;;16050:196;;16090:4;;16116:18;;16090:73;;-1:-1:-1;;;16090:73:193;;-1:-1:-1;;;;;16116:18:193;;;16090:73;;;10171:34:230;16137:10:193;10221:18:230;;;10214:43;10273:18;;;10266:34;;;16090:4:193;;;:17;;10106:18:230;;16090:73:193;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;16050:196;;;16196:6;;:38;;-1:-1:-1;;;16196:38:193;;16208:10;16196:38;;;10872:51:230;10939:18;;;10932:34;;;-1:-1:-1;;;;;16196:6:193;;;;:11;;10845:18:230;;16196:38:193;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;16050:196;16263:60;;16272:10;1881:51:230;;16312:10:193;;16263:60;;;;16284:13;;16263:60;;1869:2:230;1854:18;16263:60:193;;;;;;;15419:912;;;;15327:1004;;;;:::o;4572:227::-;2495:4:68;2928:16;2495:4;2928:10;:16::i;:::-;4699:37:193::1;4717:18;4699:17;:37::i;:::-;4679:17;:57:::0;;::::1;::::0;;;::::1;::::0;::::1;-1:-1:-1::0;;4679:57:193;;::::1;::::0;;;::::1;::::0;;4754:37:::1;::::0;4772:18;;4754:37:::1;::::0;-1:-1:-1;;4754:37:193::1;4572:227:::0;;:::o;17400:376::-;17447:17;17477:21;17501:18;;;;;;;;;-1:-1:-1;;;;;17501:18:193;-1:-1:-1;;;;;17501:35:193;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17477:61;;17549:21;17588:13;17573:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;17573:29:193;;-1:-1:-1;;17573:29:193;;;;;;;;;;;;17549:53;;17618:18;17613:133;17651:13;17638:10;:26;17613:133;;;17713:21;;;;:9;:21;;;;;;;;;17695:39;;;;;;;;;-1:-1:-1;;;;;17695:39:193;;;;;-1:-1:-1;;;;;;;;17695:39:193;;;;;;;;;;-1:-1:-1;;;17695:39:193;;;;;;;;;;;;:15;;:3;;17723:10;;17695:15;;;;;;:::i;:::-;;;;;;:39;;;;17666:12;;;;;:::i;:::-;;;;17613:133;;;-1:-1:-1;17765:3:193;17400:376;-1:-1:-1;;17400:376:193:o;3471:277:67:-;3616:4;3608:93;;;;-1:-1:-1;;;3608:93:67;;11772:2:230;3608:93:67;;;11754:21:230;11811:2;11791:18;;;11784:30;11850:34;11830:18;;;11823:62;-1:-1:-1;;;11901:18:230;;;11894:52;11963:19;;3608:93:67;;;;;;;;;3711:30;3727:4;3733:7;3711:15;:30::i;:::-;3471:277;;:::o;4813:605::-;4957:26;;:55;;;;-1:-1:-1;7046:20:67;;-1:-1:-1;;;;;4987:25:67;;;7046:20;;4987:25;4957:55;4953:416;;;5029:23;5054:15;5073:21;:19;:21::i;:::-;5028:66;;-1:-1:-1;5028:66:67;-1:-1:-1;;;;;;5133:29:67;;;:57;;;;-1:-1:-1;14825:13:67;;;;;5166:24;5133:89;;;;-1:-1:-1;15053:15:67;15042:26;;;;5194:28;5108:201;;;;-1:-1:-1;;;5108:201:67;;12195:2:230;5108:201:67;;;12177:21:230;12234:2;12214:18;;;12207:30;12273:34;12253:18;;;12246:62;-1:-1:-1;;;12324:18:230;;;12317:51;12385:19;;5108:201:67;11993:417:230;5108:201:67;-1:-1:-1;;5330:28:67;5323:35;;-1:-1:-1;;;;5323:35:67;;;4953:416;5378:33;5397:4;5403:7;5378:18;:33::i;2956:889:193:-;3279:19:77;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:77;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:77;1713:19:78;:23;;;3387:66:77;;-1:-1:-1;3436:12:77;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:77;;12617:2:230;3325:201:77;;;12599:21:230;12656:2;12636:18;;;12629:30;12695:34;12675:18;;;12668:62;-1:-1:-1;;;12746:18:230;;;12739:44;12800:19;;3325:201:77;12415:410:230;3325:201:77;3536:12;:16;;-1:-1:-1;;3536:16:77;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:77;;;;;3562:65;3130:12:193::1;;::::0;::::1;:9:::0;:12:::1;:::i;:::-;3116:4;:27:::0;;-1:-1:-1;;;;;;3116:27:193::1;-1:-1:-1::0;;;;;3116:27:193;;;::::1;::::0;;;::::1;::::0;;3184:12:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;3154:18;:43:::0;;-1:-1:-1;;;;;;3154:43:193::1;-1:-1:-1::0;;;;;3154:43:193;;;::::1;::::0;;;::::1;::::0;;3218:54:::1;-1:-1:-1::0;3259:12:193::1;::::0;;;;;::::1;;:::i;:::-;3218:37;:54::i;:::-;3283:38;-1:-1:-1::0;;;;;;;;;;;3308:9:193;3318:1:::1;3308:12;;;;;;;;;;;;:::i;:::-;3283:10;:38::i;:::-;3332;-1:-1:-1::0;;;;;;;;;;;3357:9:193;3367:1:::1;3357:12;::::0;3332:38:::1;3381:44;653:31:192;3412:9:193::0;3422:1:::1;3412:12;::::0;3381:44:::1;3454:12;::::0;;;;;::::1;;:::i;:::-;3438:6;:29:::0;;-1:-1:-1;;;;;;3438:29:193::1;-1:-1:-1::0;;;;;3438:29:193;;;::::1;::::0;;;::::1;::::0;;3508:12:::1;::::0;;;;;::::1;;:::i;:::-;3478:18;:43:::0;;-1:-1:-1;;;;;;3478:43:193::1;-1:-1:-1::0;;;;;3478:43:193;;;::::1;::::0;;;::::1;::::0;;3562:12:::1;::::0;;;;;::::1;;:::i;:::-;3532:18;:43:::0;;-1:-1:-1;;;;;;3532:43:193::1;-1:-1:-1::0;;;;;3532:43:193;;;::::1;::::0;;;::::1;::::0;;3608:37:::1;3626:18:::0;3608:17:::1;:37::i;:::-;3588:17;;:57;;;;;;;;;;;;;;;;;;3674:35;3692:16;3674:17;:35::i;:::-;3656:15;:53:::0;;-1:-1:-1;;3656:53:193::1;;::::0;;;::::1;::::0;;;::::1;::::0;;3737:34:::1;3755:15:::0;3737:17:::1;:34::i;:::-;3720:14;;:51;;;;;;;;;;;;;;;;;;3803:34;3821:15;3803:17;:34::i;:::-;3786:14;;:51;;;;;;;;;;;;;;;;;;3651:14:77::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:77;;;3721:14;;-1:-1:-1;12982:36:230;;3721:14:77;;12970:2:230;12955:18;3721:14:77;;;;;;;3647:99;3269:483;2956:889:193;;;;:::o;16575:761::-;653:31:192;2928:16:68;2939:4;2928:10;:16::i;:::-;16697:12:193;::::1;::::0;::::1;:42;;-1:-1:-1::0;16722:17:193::1;::::0;-1:-1:-1;;;16722:17:193;::::1;-1:-1:-1::0;;;;;16722:17:193::1;16713:26:::0;::::1;16697:42;16693:74;;;16748:19;;-1:-1:-1::0;;;16748:19:193::1;;;;;;;;;;;16693:74;16780:21;16804:3;:32;;16830:6;16804:32;;;16810:17;::::0;-1:-1:-1;;;16810:17:193;::::1;-1:-1:-1::0;;;;;16810:17:193::1;16804:32;16780:56;;16870:32;16888:13;16870:17;:32::i;:::-;16849:17;:53:::0;;:17:::1;::::0;:53:::1;::::0;;;-1:-1:-1;;;16849:53:193;::::1;-1:-1:-1::0;;;;;16849:53:193::1;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;16849:53:193::1;;;;;-1:-1:-1::0;;;;;16849:53:193::1;;;;;;16919:11;:19;;16934:4;16919:19;;::::0;16915:196:::1;;16955:4;::::0;16981:18:::1;::::0;16955:73:::1;::::0;-1:-1:-1;;;16955:73:193;;-1:-1:-1;;;;;16981:18:193;;::::1;16955:73;::::0;::::1;10171:34:230::0;17002:10:193::1;10221:18:230::0;;;10214:43;10273:18;;;10266:34;;;16955:4:193;::::1;::::0;:17:::1;::::0;10106:18:230;;16955:73:193::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;16915:196;;;17061:6;::::0;:38:::1;::::0;-1:-1:-1;;;17061:38:193;;17073:10:::1;17061:38;::::0;::::1;10872:51:230::0;10939:18;;;10932:34;;;-1:-1:-1;;;;;17061:6:193;;::::1;::::0;:11:::1;::::0;10845:18:230;;17061:38:193::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;16915:196;17128:51;::::0;17137:10:::1;1881:51:230::0;;17177:1:193::1;::::0;17128:51;::::1;;::::0;17149:13;;17128:51:::1;::::0;1869:2:230;1854:18;17128:51:193::1;;;;;;;16682:654;16575:761:::0;;;;:::o;8383:150:67:-;2495:4:68;2928:16;2495:4;2928:10;:16::i;:::-;8490:36:67::1;8517:8;8490:26;:36::i;10531:145::-:0;2495:4:68;2928:16;2495:4;2928:10;:16::i;:::-;10635:34:67::1;10660:8;10635:24;:34::i;3215:93::-:0;3261:7;3287:14;7046:20;;-1:-1:-1;;;;;7046:20:67;;6967:106;3287:14;3280:21;;3215:93;:::o;3329:145:68:-;3415:4;3438:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3438:29:68;;;;;;;;;;;;;;;3329:145::o;7725:261:67:-;7845:21;;7790:15;;-1:-1:-1;;;7845:21:67;;;;14825:13;;;7884:57;;;;-1:-1:-1;15053:15:67;15042:26;;;;7912:29;7884:57;7883:96;;7974:1;7977;7883:96;;;7946:13;;-1:-1:-1;;;7946:13:67;;;;7961:8;7883:96;7876:103;;;;7725:261;;:::o;7412:229::-;7506:21;;7470:6;;-1:-1:-1;;;7506:21:67;;;;14825:13;;;7545:56;;;;-1:-1:-1;15053:15:67;15042:26;;;;7573:28;7544:90;;7621:13;;-1:-1:-1;;;7621:13:67;;;;7544:90;;;7605:13;;-1:-1:-1;;;7605:13:67;;;;7544:90;7537:97;;;7412:229;:::o;9494:254::-;9558:23;9587:21;:19;:21::i;:::-;-1:-1:-1;9557:51:67;-1:-1:-1;929:10:80;-1:-1:-1;;;;;9626:31:67;;;9618:84;;;;-1:-1:-1;;;9618:84:67;;13231:2:230;9618:84:67;;;13213:21:230;13270:2;13250:18;;;13243:30;13309:34;13289:18;;;13282:62;-1:-1:-1;;;13360:18:230;;;13353:38;13408:19;;9618:84:67;13029:404:230;9618:84:67;9712:29;:27;:29::i;7157:171::-;7270:20;;-1:-1:-1;;;;;7270:20:67;;;-1:-1:-1;;;7292:28:67;;;;;;7157:171::o;3848:280::-;3994:4;3986:94;;;;-1:-1:-1;;;3986:94:67;;13640:2:230;3986:94:67;;;13622:21:230;13679:2;13659:18;;;13652:30;13718:34;13698:18;;;13691:62;13789:25;13769:18;;;13762:53;13832:19;;3986:94:67;13438:419:230;3986:94:67;4090:31;4107:4;4113:7;4090:16;:31::i;9043:128::-;2495:4:68;2928:16;2495:4;2928:10;:16::i;:::-;9135:29:67::1;:27;:29::i;5000:212:193:-:0;2495:4:68;2928:16;2495:4;2928:10;:16::i;:::-;5118:34:193::1;5136:15;5118:17;:34::i;:::-;5101:14;:51:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;5101:51:193::1;-1:-1:-1::0;;5101:51:193;;::::1;::::0;;;::::1;::::0;;5170:34:::1;::::0;5188:15;;5170:34:::1;::::0;-1:-1:-1;;5170:34:193::1;5000:212:::0;;:::o;6350:1048::-;-1:-1:-1;;;;;;;;;;;2928:16:68;2939:4;2928:10;:16::i;:::-;6547:14:193::1;::::0;6507:19:::1;::::0;6529:32:::1;::::0;6547:14;;::::1;;;6529:15;:32;:::i;:::-;6590:14;::::0;6507:54;;-1:-1:-1;;;;6590:14:193;::::1;;;6576:28:::0;::::1;6572:56;;;6613:15;;-1:-1:-1::0;;;6613:15:193::1;;;;;;;;;;;6572:56;6643:44:::0;;::::1;6639:80;;6696:23;;-1:-1:-1::0;;;6696:23:193::1;;;;;;;;;;;6639:80;6733:25;6760:32:::0;6796:55:::1;6813:17;;6832:9;;6843:7;6796:16;:55::i;:::-;6732:119;;;;6862:21;6886:6;;;;;;;;;-1:-1:-1::0;;;;;6886:6:193::1;-1:-1:-1::0;;;;;6886:18:193::1;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7046:17;::::0;7005:18:::1;::::0;:38:::1;::::0;;-1:-1:-1;;;7005:38:193;;;;6862:44;;-1:-1:-1;6919:17:193::1;::::0;7066:24;;-1:-1:-1;;;7046:17:193;::::1;-1:-1:-1::0;;;;;7046:17:193::1;::::0;-1:-1:-1;;;;;7005:18:193::1;::::0;:36:::1;::::0;:38:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:18;:38:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6959:4;::::0;6982:18:::1;::::0;6959:43:::1;::::0;-1:-1:-1;;;6959:43:193;;-1:-1:-1;;;;;6982:18:193;;::::1;6959:43;::::0;::::1;1881:51:230::0;6959:4:193;::::1;::::0;:14:::1;::::0;1854:18:230;;6959:43:193::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6939:63;::::0;:17;:63:::1;:::i;:::-;:104;;;;:::i;:::-;:124;;;;:::i;:::-;:151;;;;:::i;:::-;6919:171;;7101:11;7115:60;7137:11;7150:13;7165:9;7115:21;:60::i;:::-;7101:74;;7196:6;;;;;;;;;-1:-1:-1::0;;;;;7196:6:193::1;-1:-1:-1::0;;;;;7196:17:193::1;;7214:5;7221:9;7232:14;;;;;;;;;;;7196:51;;;;;;;;;;;;;;;;14326:25:230::0;;;14382:2;14367:18;;14360:34;;;;14442:10;14430:23;14425:2;14410:18;;14403:51;14314:2;14299:18;;14125:335;7196:51:193::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7275:34;7293:15;7275:17;:34::i;:::-;7258:14;;:51;;;;;;;;;;;;;;;;;;7380:9;7346:17;7341:3;7327:63;7365:13;7327:63;;;;2471:25:230::0;;2459:2;2444:18;;2325:177;7327:63:193::1;;;;;;;;6496:902;;;;;;6350:1048:::0;;;;;;;:::o;3029:213:68:-;3114:4;-1:-1:-1;;;;;;3137:58:68;;-1:-1:-1;;;3137:58:68;;:98;;-1:-1:-1;;;;;;;;;;1168:51:85;;;3199:36:68;1060:166:85;3768:103:68;3834:30;3845:4;929:10:80;3834::68;:30::i;16288:187:133:-;16344:6;16379:16;16370:25;;;16362:76;;;;-1:-1:-1;;;16362:76:133;;14667:2:230;16362:76:133;;;14649:21:230;14706:2;14686:18;;;14679:30;14745:34;14725:18;;;14718:62;-1:-1:-1;;;14796:18:230;;;14789:36;14842:19;;16362:76:133;14465:402:230;16362:76:133;-1:-1:-1;16462:5:133;16288:187::o;11437:94:67:-;11502:22;11519:1;11522;11502:16;:22::i;:::-;11437:94::o;12192:187:133:-;12248:6;-1:-1:-1;;;;;12274:25:133;;;12266:76;;;;-1:-1:-1;;;12266:76:133;;15074:2:230;12266:76:133;;;15056:21:230;15113:2;15093:18;;;15086:30;15152:34;15132:18;;;15125:62;-1:-1:-1;;;15203:18:230;;;15196:36;15249:19;;12266:76:133;14872:402:230;5259:145:68;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5372:25:::1;5383:4;5389:7;5372:10;:25::i;:::-;5259:145:::0;;;:::o;6368:214::-;-1:-1:-1;;;;;6463:23:68;;929:10:80;6463:23:68;6455:83;;;;-1:-1:-1;;;6455:83:68;;15481:2:230;6455:83:68;;;15463:21:230;15520:2;15500:18;;;15493:30;15559:34;15539:18;;;15532:62;-1:-1:-1;;;15610:18:230;;;15603:45;15665:19;;6455:83:68;15279:411:230;6455:83:68;6549:26;6561:4;6567:7;6549:11;:26::i;2309:222:67:-;5374:13:77;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:77;;;;;;;:::i;:::-;2442:82:67::1;2490:12;2504:19;2442:47;:82::i;5846:320::-:0;5937:4;5933:186;;6013:1;5987:14;7046:20;;-1:-1:-1;;;;;7046:20:67;;6967:106;5987:14;-1:-1:-1;;;;;5987:28:67;;5979:85;;;;-1:-1:-1;;;5979:85:67;;16309:2:230;5979:85:67;;;16291:21:230;16348:2;16328:18;;;16321:30;16387:34;16367:18;;;16360:62;-1:-1:-1;;;16438:18:230;;;16431:42;16490:19;;5979:85:67;16107:408:230;5979:85:67;6078:20;:30;;-1:-1:-1;;;;;;6078:30:67;-1:-1:-1;;;;;6078:30:67;;;;;5933:186;6128:31;6145:4;6151:7;6128:16;:31::i;15264:187:133:-;15320:6;15355:16;15346:25;;;15338:76;;;;-1:-1:-1;;;15338:76:133;;16722:2:230;15338:76:133;;;16704:21:230;16761:2;16741:18;;;16734:30;16800:34;16780:18;;;16773:62;-1:-1:-1;;;16851:18:230;;;16844:36;16897:19;;15338:76:133;16520:402:230;8660:299:67;8741:18;8810:19;:17;:19::i;:::-;8762:45;8791:15;8762:28;:45::i;:::-;:67;;;;:::i;:::-;8741:88;;8839:46;8863:8;8873:11;8839:23;:46::i;:::-;8900:52;;671:14:230;659:27;;641:46;;-1:-1:-1;;;;;8900:52:67;;;;;629:2:230;614:18;8900:52:67;;;;;;;8731:228;8660:299;:::o;10801:::-;10879:18;10948:26;10965:8;10948:16;:26::i;:::-;10900:45;10929:15;10900:28;:45::i;:::-;:74;;;;:::i;:::-;10879:95;;10984:39;11001:8;11011:11;10984:16;:39::i;:::-;11038:55;;;5752:14:230;5793:15;;;5775:34;;5845:15;;5840:2;5825:18;;5818:43;11038:55:67;;5715:18:230;11038:55:67;;;;;;;10869:231;10801:299;:::o;9876:440::-;9943:16;9961:15;9980:21;:19;:21::i;:::-;9942:59;;;;10019:24;10034:8;14825:13;;;;;14739:106;10019:24;:56;;;;-1:-1:-1;15053:15:67;15042:26;;;;10047:28;10011:109;;;;-1:-1:-1;;;10011:109:67;;17310:2:230;10011:109:67;;;17292:21:230;17349:2;17329:18;;;17322:30;17388:34;17368:18;;;17361:62;-1:-1:-1;;;17439:18:230;;;17432:38;17487:19;;10011:109:67;17108:404:230;10011:109:67;10130:47;2495:4:68;10162:14:67;7046:20;;-1:-1:-1;;;;;7046:20:67;;6967:106;10162:14;10130:11;:47::i;:::-;10187:40;2495:4:68;10218:8:67;10187:10;:40::i;:::-;-1:-1:-1;;10244:20:67;10237:27;;-1:-1:-1;;;;;;10274:35:67;;;9876:440::o;5684:147:68:-;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5798:26:::1;5810:4;5816:7;5798:11;:26::i;9299:111:67:-:0;9365:38;9397:1;9401;9365:23;:38::i;8225:1367:193:-;8584:18;;:46;;-1:-1:-1;;;8584:46:193;;8351:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8584:18:193;;;;:35;;:46;;8620:9;;;;8584:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8584:46:193;;;;;;;;;;;;:::i;:::-;8490:140;;;;;;8641:33;8691:13;8677:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8677:28:193;-1:-1:-1;8641:64:193;-1:-1:-1;8722:23:193;;;8740:5;8722:23;8718:66;;8754:30;;-1:-1:-1;;;8754:30:193;;;;;;;;;;;8718:66;8799:44;;;8795:80;;8852:23;;-1:-1:-1;;;8852:23:193;;;;;;;;;;;8795:80;8918:20;;8888:27;8949:283;8966:19;8962:1;:23;8949:283;;;9011:13;9025:1;9011:16;;;;;;;;:::i;:::-;;;;;;;:29;;;:37;;9044:4;9011:37;;;9007:207;;9118:17;;9136:1;9118:20;;;;;;;:::i;:::-;;;;;;;9069:16;9086:13;9100:1;9086:16;;;;;;;;:::i;:::-;;;;;;;:27;;;9069:45;;;;;;;;;;:::i;:::-;;;;;;:69;;;;;;;:::i;:::-;;;-1:-1:-1;9178:17:193;;9196:1;9178:20;;;;;;;:::i;:::-;;;;;;;9157:41;;;;;:::i;:::-;;;9007:207;8987:3;;;:::i;:::-;;;8949:283;;;;9270:1;9257:14;;9252:184;9286:13;9273:10;:26;9252:184;;;9358:66;9374:16;9391:10;9374:28;;;;;;;;:::i;:::-;;;;;;;9404:10;9416:7;9358:15;:66::i;:::-;9330:94;;;;:::i;:::-;;-1:-1:-1;9301:12:193;;;;:::i;:::-;;;;9252:184;;;9476:43;9494:24;9476:17;:43::i;:::-;9450:23;:69;;-1:-1:-1;;;;;9450:69:193;;;;-1:-1:-1;;;9450:69:193;-1:-1:-1;;;;;9450:69:193;;;;;;;;;-1:-1:-1;9540:17:193;;-1:-1:-1;9559:24:193;;-1:-1:-1;;;;;;8225:1367:193;;;;;;;;:::o;13931:639::-;14048:7;14068:11;14106:13;14094:9;:25;14090:450;;;14239:12;1001:8;14199:20;:11;14213:6;14199:20;:::i;:::-;:35;;;;:::i;:::-;14179:6;14163:13;14142:18;:9;14179:6;14142:18;:::i;:::-;:34;;;;:::i;:::-;:43;;;;:::i;:::-;14141:54;;14189:6;14141:54;:::i;:::-;:94;;;;:::i;:::-;:111;;;;:::i;:::-;14284:15;;14135:117;;-1:-1:-1;14284:15:193;;14273:7;14135:117;14284:15;14273:7;:::i;:::-;:26;14269:58;;14319:7;:3;14325:1;14319:7;:::i;:::-;14308:19;;-1:-1:-1;;;14308:19:193;;;;;;2471:25:230;;2459:2;2444:18;;2325:177;14269:58:193;14090:450;;;14360:22;14414:13;14394:17;:9;14406:5;14394:17;:::i;:::-;:33;;;;:::i;:::-;14385:43;;:5;:43;:::i;:::-;14465:17;;14360:68;;-1:-1:-1;14465:17:193;;;;;14447:35;;14443:85;;14491:37;;-1:-1:-1;;;14491:37:193;;;;;2471:25:230;;;2444:18;;14491:37:193;2325:177:230;14443:85:193;14345:195;14090:450;14559:3;13931:639;-1:-1:-1;;;;13931:639:193:o;4152:501:68:-;4240:22;4248:4;4254:7;4240;:22::i;:::-;4235:412;;4423:39;4454:7;4423:30;:39::i;:::-;4533:49;4572:4;4579:2;4533:30;:49::i;:::-;4330:274;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4330:274:68;;;;;;;;;;-1:-1:-1;;;4278:358:68;;;;;;;:::i;14009:585:67:-;14111:21;;-1:-1:-1;;;14111:21:67;;;;14825:13;;14143:365;;15053:15;15042:26;;;;14190:308;;;14308:13;;14292;:29;;-1:-1:-1;;;;;14292:29:67;-1:-1:-1;;;14308:13:67;;;;;-1:-1:-1;;;14292:29:67;;;;;;;14190:308;;;14450:33;;;;;;;14190:308;-1:-1:-1;14518:13:67;:24;;-1:-1:-1;;;;;14552:35:67;-1:-1:-1;;;14518:24:67;;;;;-1:-1:-1;;;;;14552:35:67;;-1:-1:-1;;;14552:35:67;;;;;;;;;;;;;;14009:585::o;6233:249::-;6325:26;;:55;;;;-1:-1:-1;7046:20:67;;-1:-1:-1;;;;;6355:25:67;;;7046:20;;6355:25;6325:55;6321:113;;;6403:20;6396:27;;-1:-1:-1;;;;;;6396:27:67;;;6321:113;6443:32;6461:4;6467:7;6443:17;:32::i;2537:325::-;5374:13:77;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:77;;;;;;;:::i;:::-;-1:-1:-1;;;;;2688:33:67;::::1;2680:76;;;::::0;-1:-1:-1;;;2680:76:67;;22206:2:230;2680:76:67::1;::::0;::::1;22188:21:230::0;22245:2;22225:18;;;22218:30;22284:32;22264:18;;;22257:60;22334:18;;2680:76:67::1;22004:354:230::0;2680:76:67::1;2766:13;:28:::0;;-1:-1:-1;;;;;2766:28:67::1;-1:-1:-1::0;;;2766:28:67::1;::::0;::::1;;;::::0;;2804:51:::1;-1:-1:-1::0;2835:19:67;2804:10:::1;:51::i;7917:233:68:-:0;8000:22;8008:4;8014:7;8000;:22::i;:::-;7995:149;;8038:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8038:29:68;;;;;;;;;:36;;-1:-1:-1;;8038:36:68;8070:4;8038:36;;;8120:12;929:10:80;;850:96;8120:12:68;-1:-1:-1;;;;;8093:40:68;8111:7;-1:-1:-1;;;;;8093:40:68;8105:4;8093:40;;;;;;;;;;7917:233;;:::o;14251:187:88:-;14307:6;14342:16;14333:25;;;14325:76;;;;-1:-1:-1;;;14325:76:88;;22565:2:230;14325:76:88;;;22547:21:230;22604:2;22584:18;;;22577:30;22643:34;22623:18;;;22616:62;-1:-1:-1;;;22694:18:230;;;22687:36;22740:19;;14325:76:88;22363:402:230;13330:525:67;13422:18;13444:21;:19;:21::i;:::-;13476:20;:31;;13517:42;;;-1:-1:-1;;;13517:42:67;-1:-1:-1;;;;;;13517:42:67;;;-1:-1:-1;;;;;13476:31:67;;13517:42;;;;13419:46;-1:-1:-1;13671:27:67;;-1:-1:-1;13419:46:67;14825:13;;;;;14739:106;13671:27;13667:182;;;13808:30;;;;;;;13409:446;13330:525;;:::o;11878:1260::-;11952:6;11970:19;11992;:17;:19::i;:::-;11970:41;;12941:12;12930:23;;:8;:23;;;:201;;13108:23;13123:8;13108:12;:23;:::i;:::-;12930:201;;;12979:62;;;;8165:6;12979:19;:62::i;:::-;12911:220;11878:1260;-1:-1:-1;;;11878:1260:67:o;10819:2811:193:-;11140:18;;:46;;-1:-1:-1;;;11140:46:193;;;;;2471:25:230;;;10921:7:193;;;;;;;;;;;;-1:-1:-1;;;;;11140:18:193;;;;:34;;2444:18:230;;11140:46:193;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11199:21;11223;;;:9;:21;;;;;:34;11089:97;;-1:-1:-1;11089:97:193;;-1:-1:-1;11089:97:193;;-1:-1:-1;11089:97:193;-1:-1:-1;;;;;;;;;11223:34:193;;;;;11577:38;;11586:29;11089:97;11577:38;:::i;:::-;-1:-1:-1;;;;;11534:81:193;;;11626:40;11680:13;11669:8;-1:-1:-1;;;;;11669:24:193;;;;;:::i;:::-;11626:67;-1:-1:-1;12167:32:193;12113:50;11626:67;12113:15;:50;:::i;:::-;:86;12109:1464;;12269:32;12234;:67;12230:429;;;12359:67;12394:32;12359;:67;:::i;:::-;12340:87;;:15;:87;:::i;:::-;12322:105;;12230:429;;;12521:67;12556:32;12521;:67;:::i;:::-;12502:87;;:15;:87;:::i;:::-;12484:105;;12230:429;12697:13;12679:15;:31;12675:712;;;12735:18;;12731:161;;12778:32;12797:13;12778:32;;:::i;:::-;12870:1;12833:21;;;:9;:21;;;;;:38;;-1:-1:-1;;;;;12833:38:193;;;12778:32;-1:-1:-1;12731:161:193;12943:34;12961:15;12943:17;:34::i;:::-;12910:21;;;;:9;:21;;;;;:67;;-1:-1:-1;;;;;12910:67:193;;;;;:21;;;:67;;;;-1:-1:-1;;;;;12910:67:193;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;12910:67:193;;;;;-1:-1:-1;;;;;12910:67:193;;;;;;13000:7;:15;;13011:4;13000:15;;;12996:263;;13076:61;13131:5;13094:33;;;;:15;:33;:::i;:::-;:42;;;;:::i;:::-;13076:17;:61::i;:::-;13040:21;;;;:9;:21;;;;;:97;;:32;;:97;;;;-1:-1:-1;;;13040:97:193;;-1:-1:-1;;;;;13040:97:193;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;13040:97:193;;;;;-1:-1:-1;;;;;13040:97:193;;;;;;13181:58;13233:5;13217:13;13199:31;;:15;:31;;;;:::i;13181:58::-;13160:17;:79;;:17;;:79;;;;-1:-1:-1;;;13160:79:193;;-1:-1:-1;;;;;13160:79:193;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;13160:79:193;;;;;-1:-1:-1;;;;;13160:79:193;;;;;;12996:263;12109:1464;;12675:712;13337:34;13355:15;13337:17;:34::i;:::-;13299:21;;;;:9;:21;;;;;:72;;:34;;:72;;;;-1:-1:-1;;;13299:72:193;;-1:-1:-1;;;;;13299:72:193;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;13299:72:193;;;;;-1:-1:-1;;;;;13299:72:193;;;;;;12109:1464;;;13457:104;13545:15;13475:67;13510:32;13475;:67;:::i;:::-;:85;;;;:::i;:::-;13457:17;:104::i;:::-;13419:21;;;;:9;:21;;;;;:142;;:34;;:142;;;;-1:-1:-1;;;13419:142:193;;-1:-1:-1;;;;;13419:142:193;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;13419:142:193;;;;;-1:-1:-1;;;;;13419:142:193;;;;;;12109:1464;-1:-1:-1;;;13590:21:193;;;;-1:-1:-1;;13590:9:193;:21;;-1:-1:-1;;13590:21:193;;;;:32;-1:-1:-1;;;13590:32:193;;-1:-1:-1;;;;;13590:32:193;;10819:2811;-1:-1:-1;;;;10819:2811:193:o;2473:149:82:-;2531:13;2563:52;-1:-1:-1;;;;;2575:22:82;;376:2;1884:437;1959:13;1984:19;2016:10;2020:6;2016:1;:10;:::i;:::-;:14;;2029:1;2016:14;:::i;:::-;2006:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2006:25:82;;1984:47;;-1:-1:-1;;;2041:6:82;2048:1;2041:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2041:15:82;;;;;;;;;-1:-1:-1;;;2066:6:82;2073:1;2066:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2066:15:82;;;;;;;;-1:-1:-1;2096:9:82;2108:10;2112:6;2108:1;:10;:::i;:::-;:14;;2121:1;2108:14;:::i;:::-;2096:26;;2091:128;2128:1;2124;:5;2091:128;;;-1:-1:-1;;;2171:5:82;2179:3;2171:11;2162:21;;;;;;;:::i;:::-;;;;2150:6;2157:1;2150:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2150:33:82;;;;;;;;-1:-1:-1;2207:1:82;2197:11;;;;;2131:3;;;:::i;:::-;;;2091:128;;;-1:-1:-1;2236:10:82;;2228:55;;;;-1:-1:-1;;;2228:55:82;;24881:2:230;2228:55:82;;;24863:21:230;;;24900:18;;;24893:30;24959:34;24939:18;;;24932:62;25011:18;;2228:55:82;24679:356:230;8321:234:68;8404:22;8412:4;8418:7;8404;:22::i;:::-;8400:149;;;8474:5;8442:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8442:29:68;;;;;;;;;;:37;;-1:-1:-1;;8442:37:68;;;8498:40;929:10:80;;8442:12:68;;8498:40;;8474:5;8498:40;8321:234;;:::o;599:104:87:-;657:7;687:1;683;:5;:13;;695:1;683:13;;;-1:-1:-1;691:1:87;;676:20;-1:-1:-1;599:104:87:o;11680:187:133:-;11736:6;-1:-1:-1;;;;;11762:25:133;;;11754:76;;;;-1:-1:-1;;;11754:76:133;;25242:2:230;11754:76:133;;;25224:21:230;25281:2;25261:18;;;25254:30;25320:34;25300:18;;;25293:62;-1:-1:-1;;;25371:18:230;;;25364:36;25417:19;;11754:76:133;25040:402:230;14:286;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:230;;209:43;;199:71;;266:1;263;256:12;698:180;757:6;810:2;798:9;789:7;785:23;781:32;778:52;;;826:1;823;816:12;778:52;-1:-1:-1;849:23:230;;698:180;-1:-1:-1;698:180:230:o;883:118::-;969:5;962:13;955:21;948:5;945:32;935:60;;991:1;988;981:12;1006:513;1086:6;1094;1102;1110;1163:3;1151:9;1142:7;1138:23;1134:33;1131:53;;;1180:1;1177;1170:12;1131:53;1216:9;1203:23;1193:33;;1276:2;1265:9;1261:18;1248:32;1289:28;1311:5;1289:28;:::i;:::-;1336:5;-1:-1:-1;1393:2:230;1378:18;;1365:32;1406:30;1365:32;1406:30;:::i;:::-;1006:513;;;;-1:-1:-1;1455:7:230;;1509:2;1494:18;1481:32;;-1:-1:-1;;1006:513:230:o;2507:941::-;2732:2;2784:21;;;2854:13;;2757:18;;;2876:22;;;2703:4;;2732:2;2917;;2935:18;;;;2976:15;;;2703:4;3019:403;3033:6;3030:1;3027:13;3019:403;;;3092:13;;3181:9;;-1:-1:-1;;;;;3177:18:230;;;3165:31;;3240:11;;;3234:18;-1:-1:-1;;;;;3230:47:230;3216:12;;;3209:69;3322:11;;;3316:18;3312:27;3298:12;;;3291:49;3369:4;3360:14;;;;3397:15;;;;3055:1;3048:9;3019:403;;;-1:-1:-1;3439:3:230;;2507:941;-1:-1:-1;;;;;;;2507:941:230:o;3453:131::-;-1:-1:-1;;;;;3528:31:230;;3518:42;;3508:70;;3574:1;3571;3564:12;3589:315;3657:6;3665;3718:2;3706:9;3697:7;3693:23;3689:32;3686:52;;;3734:1;3731;3724:12;3686:52;3770:9;3757:23;3747:33;;3830:2;3819:9;3815:18;3802:32;3843:31;3868:5;3843:31;:::i;:::-;3893:5;3883:15;;;3589:315;;;;;:::o;3909:464::-;4020:6;4028;4036;4044;4097:3;4085:9;4076:7;4072:23;4068:33;4065:53;;;4114:1;4111;4104:12;4065:53;4152:3;4141:9;4137:19;4175:7;4171:2;4168:15;4165:35;;;4196:1;4193;4186:12;4165:35;4219:9;;4247:16;;;-1:-1:-1;;;4310:3:230;4295:19;;4282:33;;4362:3;4347:19;;4334:33;;-1:-1:-1;3909:464:230;-1:-1:-1;3909:464:230:o;4378:444::-;4449:6;4457;4465;4518:2;4506:9;4497:7;4493:23;4489:32;4486:52;;;4534:1;4531;4524:12;4486:52;4570:9;4557:23;4547:33;;4630:2;4619:9;4615:18;4602:32;4643:28;4665:5;4643:28;:::i;:::-;4690:5;-1:-1:-1;4747:2:230;4732:18;;4719:32;4760:30;4719:32;4760:30;:::i;:::-;4809:7;4799:17;;;4378:444;;;;;:::o;4827:247::-;4886:6;4939:2;4927:9;4918:7;4914:23;4910:32;4907:52;;;4955:1;4952;4945:12;4907:52;4994:9;4981:23;5013:31;5038:5;5013:31;:::i;5079:280::-;5137:6;5190:2;5178:9;5169:7;5165:23;5161:32;5158:52;;;5206:1;5203;5196:12;5158:52;5245:9;5232:23;5295:14;5288:5;5284:26;5277:5;5274:37;5264:65;;5325:1;5322;5315:12;7687:367;7750:8;7760:6;7814:3;7807:4;7799:6;7795:17;7791:27;7781:55;;7832:1;7829;7822:12;7781:55;-1:-1:-1;7855:20:230;;7898:18;7887:30;;7884:50;;;7930:1;7927;7920:12;7884:50;7967:4;7959:6;7955:17;7943:29;;8027:3;8020:4;8010:6;8007:1;8003:14;7995:6;7991:27;7987:38;7984:47;7981:67;;;8044:1;8041;8034:12;7981:67;7687:367;;;;;:::o;8059:971::-;8196:6;8204;8212;8220;8228;8236;8289:3;8277:9;8268:7;8264:23;8260:33;8257:53;;;8306:1;8303;8296:12;8257:53;8342:9;8329:23;8319:33;;8403:2;8392:9;8388:18;8375:32;8426:18;8467:2;8459:6;8456:14;8453:34;;;8483:1;8480;8473:12;8453:34;8522:70;8584:7;8575:6;8564:9;8560:22;8522:70;:::i;:::-;8611:8;;-1:-1:-1;8496:96:230;-1:-1:-1;8699:2:230;8684:18;;8671:32;;-1:-1:-1;8715:16:230;;;8712:36;;;8744:1;8741;8734:12;8712:36;;8783:72;8847:7;8836:8;8825:9;8821:24;8783:72;:::i;:::-;8874:8;;-1:-1:-1;8757:98:230;-1:-1:-1;;8959:2:230;8944:18;;8931:32;8972:28;8931:32;8972:28;:::i;:::-;9019:5;9009:15;;;8059:971;;;;;;;;:::o;9217:385::-;9296:6;9304;9357:2;9345:9;9336:7;9332:23;9328:32;9325:52;;;9373:1;9370;9363:12;9325:52;9405:9;9399:16;9424:31;9449:5;9424:31;:::i;:::-;9524:2;9509:18;;9503:25;9474:5;;-1:-1:-1;9537:33:230;9503:25;9537:33;:::i;9607:127::-;9668:10;9663:3;9659:20;9656:1;9649:31;9699:4;9696:1;9689:15;9723:4;9720:1;9713:15;9739:187;-1:-1:-1;;;;;9862:10:230;;;9850;;;9846:27;;9885:12;;;9882:38;;;9900:18;;:::i;10311:132::-;10387:13;;10409:28;10387:13;10409:28;:::i;:::-;10311:132;;;:::o;10448:245::-;10515:6;10568:2;10556:9;10547:7;10543:23;10539:32;10536:52;;;10584:1;10581;10574:12;10536:52;10616:9;10610:16;10635:28;10657:5;10635:28;:::i;10977:184::-;11047:6;11100:2;11088:9;11079:7;11075:23;11071:32;11068:52;;;11116:1;11113;11106:12;11068:52;-1:-1:-1;11139:16:230;;10977:184;-1:-1:-1;10977:184:230:o;11166:127::-;11227:10;11222:3;11218:20;11215:1;11208:31;11258:4;11255:1;11248:15;11282:4;11279:1;11272:15;11298:127;11359:10;11354:3;11350:20;11347:1;11340:31;11390:4;11387:1;11380:15;11414:4;11411:1;11404:15;11430:135;11469:3;11490:17;;;11487:43;;11510:18;;:::i;:::-;-1:-1:-1;11557:1:230;11546:13;;11430:135::o;13862:128::-;13929:9;;;13950:11;;;13947:37;;;13964:18;;:::i;13995:125::-;14060:9;;;14081:10;;;14078:36;;;14094:18;;:::i;15695:407::-;15897:2;15879:21;;;15936:2;15916:18;;;15909:30;15975:34;15970:2;15955:18;;15948:62;-1:-1:-1;;;16041:2:230;16026:18;;16019:41;16092:3;16077:19;;15695:407::o;16927:176::-;16994:14;17028:10;;;17040;;;17024:27;;17063:11;;;17060:37;;;17077:18;;:::i;17517:443::-;17706:2;17688:21;;;17725:18;;17718:34;;;-1:-1:-1;;;;;;17764:31:230;;17761:51;;;17808:1;17805;17798:12;17761:51;17842:6;17839:1;17835:14;17899:6;17891;17886:2;17875:9;17871:18;17858:48;17927:22;;;;17951:2;17923:31;;17517:443;-1:-1:-1;;;17517:443:230:o;17965:257::-;18037:4;18031:11;;;18069:17;;18116:18;18101:34;;18137:22;;;18098:62;18095:88;;;18163:18;;:::i;:::-;18199:4;18192:24;17965:257;:::o;18227:275::-;18298:2;18292:9;18363:2;18344:13;;-1:-1:-1;;18340:27:230;18328:40;;18398:18;18383:34;;18419:22;;;18380:62;18377:88;;;18445:18;;:::i;:::-;18481:2;18474:22;18227:275;;-1:-1:-1;18227:275:230:o;18507:1624::-;18649:6;18657;18665;18718:2;18706:9;18697:7;18693:23;18689:32;18686:52;;;18734:1;18731;18724:12;18686:52;18767:9;18761:16;18796:18;18837:2;18829:6;18826:14;18823:34;;;18853:1;18850;18843:12;18823:34;18891:6;18880:9;18876:22;18866:32;;18936:7;18929:4;18925:2;18921:13;18917:27;18907:55;;18958:1;18955;18948:12;18907:55;18987:2;18981:9;19009:4;19032:2;19028;19025:10;19022:36;;;19038:18;;:::i;:::-;19078:36;19110:2;19105;19102:1;19098:10;19094:19;19078:36;:::i;:::-;19148:15;;;19179:12;;;;-1:-1:-1;19230:1:230;19226:10;;;;19218:19;;19214:28;;;19254:19;;;19251:39;;;19286:1;19283;19276:12;19251:39;19310:11;;;;19330:660;19346:6;19341:3;19338:15;19330:660;;;19428:4;19422:3;19413:7;19409:17;19405:28;19402:118;;;19474:1;19503:2;19499;19492:14;19402:118;19546:22;;:::i;:::-;19602:3;19596:10;19654:4;19645:7;19641:18;19632:7;19629:31;19619:129;;19702:1;19731:2;19727;19720:14;19619:129;19761:22;;19817:12;;;19811:19;19843:30;19811:19;19843:30;:::i;:::-;19893:14;;;19886:31;19930:18;;19372:4;19363:14;;;;;19968:12;;;;19330:660;;;20009:5;19999:15;;;20054:2;20043:9;20039:18;20033:25;20023:35;;;;;;20077:48;20119:4;20108:9;20104:20;20077:48;:::i;:::-;20067:58;;18507:1624;;;;;:::o;20136:168::-;20209:9;;;20240;;20257:15;;;20251:22;;20237:37;20227:71;;20278:18;;:::i;20309:217::-;20349:1;20375;20365:132;;20419:10;20414:3;20410:20;20407:1;20400:31;20454:4;20451:1;20444:15;20482:4;20479:1;20472:15;20365:132;-1:-1:-1;20511:9:230;;20309:217::o;20531:250::-;20616:1;20626:113;20640:6;20637:1;20634:13;20626:113;;;20716:11;;;20710:18;20697:11;;;20690:39;20662:2;20655:10;20626:113;;;-1:-1:-1;;20773:1:230;20755:16;;20748:27;20531:250::o;20786:812::-;21197:25;21192:3;21185:38;21167:3;21252:6;21246:13;21268:75;21336:6;21331:2;21326:3;21322:12;21315:4;21307:6;21303:17;21268:75;:::i;:::-;-1:-1:-1;;;21402:2:230;21362:16;;;21394:11;;;21387:40;21452:13;;21474:76;21452:13;21536:2;21528:11;;21521:4;21509:17;;21474:76;:::i;:::-;21570:17;21589:2;21566:26;;20786:812;-1:-1:-1;;;;20786:812:230:o;21603:396::-;21752:2;21741:9;21734:21;21715:4;21784:6;21778:13;21827:6;21822:2;21811:9;21807:18;21800:34;21843:79;21915:6;21910:2;21899:9;21895:18;21890:2;21882:6;21878:15;21843:79;:::i;:::-;21983:2;21962:15;-1:-1:-1;;21958:29:230;21943:45;;;;21990:2;21939:54;;21603:396;-1:-1:-1;;21603:396:230:o;22770:179::-;22838:14;22885:10;;;22873;;;22869:27;;22908:12;;;22905:38;;;22923:18;;:::i;22954:183::-;23032:13;;-1:-1:-1;;;;;23074:38:230;;23064:49;;23054:77;;23127:1;23124;23117:12;23142:163;23220:13;;23273:6;23262:18;;23252:29;;23242:57;;23295:1;23292;23285:12;23310:456;23403:6;23411;23419;23427;23480:3;23468:9;23459:7;23455:23;23451:33;23448:53;;;23497:1;23494;23487:12;23448:53;23520:39;23549:9;23520:39;:::i;:::-;23510:49;;23578:48;23622:2;23611:9;23607:18;23578:48;:::i;:::-;23568:58;;23645:48;23689:2;23678:9;23674:18;23645:48;:::i;:::-;23635:58;;23712:48;23756:2;23745:9;23741:18;23712:48;:::i;:::-;23702:58;;23310:456;;;;;;;:::o;23771:188::-;-1:-1:-1;;;;;23884:10:230;;;23896;;;23880:27;;23919:11;;;23916:37;;;23933:18;;:::i;23964:186::-;-1:-1:-1;;;;;24075:10:230;;;24087;;;24071:27;;24110:11;;;24107:37;;;24124:18;;:::i;24155:184::-;-1:-1:-1;;;;;24264:10:230;;;24276;;;24260:27;;24299:11;;;24296:37;;;24313:18;;:::i;24344:189::-;-1:-1:-1;;;;;24469:10:230;;;24457;;;24453:27;;24492:12;;;24489:38;;;24507:18;;:::i;24538:136::-;24577:3;24605:5;24595:39;;24614:18;;:::i;:::-;-1:-1:-1;;;24650:18:230;;24538:136::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BURNER_ROLE()": "282c51f3",
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "FEE_RECIPIENT_ROLE()": "e82748ca",
    "GOVERNOR_ROLE()": "ccc57490",
    "MANAGER_ROLE()": "ec87621c",
    "MINTER_ROLE()": "d5391393",
    "PAUSER_ROLE()": "e63ab1e9",
    "REBASER_ROLE()": "83eb70e5",
    "acceptDefaultAdminTransfer()": "cefc1429",
    "aprThresholdBps()": "10e481d5",
    "beginDefaultAdminTransfer(address)": "634e93da",
    "cancelDefaultAdminTransfer()": "d602b9fd",
    "changeDefaultAdminDelay(uint48)": "649a5ec7",
    "claimFee(uint256,bool,bool,uint256)": "109fc167",
    "claimServiceFee(uint256,bool,bool)": "4754b7a1",
    "defaultAdmin()": "84ef8ffc",
    "defaultAdminDelay()": "cc8463c8",
    "defaultAdminDelayIncreaseWait()": "022d63fb",
    "flip()": "cde4efa9",
    "getOperators()": "27a099d8",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(address[8],uint256,uint256,uint256)": "43a1c547",
    "lastRebaseTime()": "1924063e",
    "operators(uint256)": "e28d4906",
    "owner()": "8da5cb5b",
    "pendingDefaultAdmin()": "cf6eefb7",
    "pendingDefaultAdminDelay()": "a1eda53c",
    "rebase(uint256,uint256[],bytes32[],bool)": "f063b32d",
    "rebaseInterval()": "89edeb74",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "rollbackDefaultAdminDelay()": "0aa6220b",
    "servicePendingFee()": "e33b8975",
    "setAprThresholdBps(uint256)": "064d9d3d",
    "setRebaseInterval(uint256)": "ef037fb9",
    "setSlashThresholdBps(uint256)": "25837385",
    "slashThresholdBps()": "3f6c17ad",
    "stflip()": "f025b209",
    "supportsInterface(bytes4)": "01ffc9a7",
    "totalOperatorPendingFee()": "e83cbe39",
    "wrappedBurnerProxy()": "b8c8fb21",
    "wrappedMinterProxy()": "10fe237e",
    "wrappedOutputProxy()": "d81b3a2b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"apr\",\"type\":\"uint256\"}],\"name\":\"AprTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExcessiveFeeClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputLengthsMustMatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFeeRecipientOrManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RebaseTooSoon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"decrease\",\"type\":\"uint256\"}],\"name\":\"SupplyDecreaseTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ValidatorAddressesDoNotMatch\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DefaultAdminDelayChangeCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"newDelay\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"effectSchedule\",\"type\":\"uint48\"}],\"name\":\"DefaultAdminDelayChangeScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DefaultAdminTransferCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"acceptSchedule\",\"type\":\"uint48\"}],\"name\":\"DefaultAdminTransferScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"receivedFlip\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"operatorId\",\"type\":\"uint256\"}],\"name\":\"FeeClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newAprThreshold\",\"type\":\"uint256\"}],\"name\":\"NewAprThreshold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newRebaseInterval\",\"type\":\"uint256\"}],\"name\":\"NewRebaseInterval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newSlashThreshold\",\"type\":\"uint256\"}],\"name\":\"NewSlashThreshold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"apr\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"stateChainBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousSupply\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newSupply\",\"type\":\"uint256\"}],\"name\":\"RebaserRebase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_RECIPIENT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GOVERNOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REBASER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptDefaultAdminTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aprThresholdBps\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"beginDefaultAdminTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelDefaultAdminTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"newDelay\",\"type\":\"uint48\"}],\"name\":\"changeDefaultAdminDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"max\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"receiveFlip\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"operatorId\",\"type\":\"uint256\"}],\"name\":\"claimFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"max\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"receiveFlip\",\"type\":\"bool\"}],\"name\":\"claimServiceFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultAdminDelay\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultAdminDelayIncreaseWait\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOperators\",\"outputs\":[{\"components\":[{\"internalType\":\"uint88\",\"name\":\"rewards\",\"type\":\"uint88\"},{\"internalType\":\"uint80\",\"name\":\"pendingFee\",\"type\":\"uint80\"},{\"internalType\":\"uint88\",\"name\":\"slashCounter\",\"type\":\"uint88\"}],\"internalType\":\"struct RebaserV1.Operator[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[8]\",\"name\":\"addresses\",\"type\":\"address[8]\"},{\"internalType\":\"uint256\",\"name\":\"aprThresholdBps_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slashThresholdBps_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebaseInterval_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRebaseTime\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"operators\",\"outputs\":[{\"internalType\":\"uint88\",\"name\":\"rewards\",\"type\":\"uint88\"},{\"internalType\":\"uint80\",\"name\":\"pendingFee\",\"type\":\"uint80\"},{\"internalType\":\"uint88\",\"name\":\"slashCounter\",\"type\":\"uint88\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingDefaultAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"schedule\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingDefaultAdminDelay\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"newDelay\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"schedule\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"validatorBalances\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"addresses\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool\",\"name\":\"takeFee\",\"type\":\"bool\"}],\"name\":\"rebase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebaseInterval\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rollbackDefaultAdminDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"servicePendingFee\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"aprThresholdBps_\",\"type\":\"uint256\"}],\"name\":\"setAprThresholdBps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rebaseInterval_\",\"type\":\"uint256\"}],\"name\":\"setRebaseInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"slashThresholdBps_\",\"type\":\"uint256\"}],\"name\":\"setSlashThresholdBps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slashThresholdBps\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stflip\",\"outputs\":[{\"internalType\":\"contract stFlip\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalOperatorPendingFee\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedBurnerProxy\",\"outputs\":[{\"internalType\":\"contract BurnerV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedMinterProxy\",\"outputs\":[{\"internalType\":\"contract MinterV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedOutputProxy\",\"outputs\":[{\"internalType\":\"contract OutputV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DefaultAdminDelayChangeCanceled()\":{\"details\":\"Emitted when a {pendingDefaultAdminDelay} is reset if its schedule didn't pass.\"},\"DefaultAdminDelayChangeScheduled(uint48,uint48)\":{\"details\":\"Emitted when a {defaultAdminDelay} change is started, setting `newDelay` as the next delay to be applied between default admin transfer after `effectSchedule` has passed.\"},\"DefaultAdminTransferCanceled()\":{\"details\":\"Emitted when a {pendingDefaultAdmin} is reset if it was never accepted, regardless of its schedule.\"},\"DefaultAdminTransferScheduled(address,uint48)\":{\"details\":\"Emitted when a {defaultAdmin} transfer is started, setting `newAdmin` as the next address to become the {defaultAdmin} by calling {acceptDefaultAdminTransfer} only after `acceptSchedule` passes.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"acceptDefaultAdminTransfer()\":{\"details\":\"Completes a {defaultAdmin} transfer previously started with {beginDefaultAdminTransfer}. After calling the function: - `DEFAULT_ADMIN_ROLE` should be granted to the caller. - `DEFAULT_ADMIN_ROLE` should be revoked from the previous holder. - {pendingDefaultAdmin} should be reset to zero values. Requirements: - Only can be called by the {pendingDefaultAdmin}'s `newAdmin`. - The {pendingDefaultAdmin}'s `acceptSchedule` should've passed.\"},\"beginDefaultAdminTransfer(address)\":{\"details\":\"Starts a {defaultAdmin} transfer by setting a {pendingDefaultAdmin} scheduled for acceptance after the current timestamp plus a {defaultAdminDelay}. Requirements: - Only can be called by the current {defaultAdmin}. Emits a DefaultAdminRoleChangeStarted event.\"},\"cancelDefaultAdminTransfer()\":{\"details\":\"Cancels a {defaultAdmin} transfer previously started with {beginDefaultAdminTransfer}. A {pendingDefaultAdmin} not yet accepted can also be cancelled with this function. Requirements: - Only can be called by the current {defaultAdmin}. May emit a DefaultAdminTransferCanceled event.\"},\"changeDefaultAdminDelay(uint48)\":{\"details\":\"Initiates a {defaultAdminDelay} update by setting a {pendingDefaultAdminDelay} scheduled for getting into effect after the current timestamp plus a {defaultAdminDelay}. This function guarantees that any call to {beginDefaultAdminTransfer} done between the timestamp this method is called and the {pendingDefaultAdminDelay} effect schedule will use the current {defaultAdminDelay} set before calling. The {pendingDefaultAdminDelay}'s effect schedule is defined in a way that waiting until the schedule and then calling {beginDefaultAdminTransfer} with the new delay will take at least the same as another {defaultAdmin} complete transfer (including acceptance). The schedule is designed for two scenarios: - When the delay is changed for a larger one the schedule is `block.timestamp + newDelay` capped by {defaultAdminDelayIncreaseWait}. - When the delay is changed for a shorter one, the schedule is `block.timestamp + (current delay - new delay)`. A {pendingDefaultAdminDelay} that never got into effect will be canceled in favor of a new scheduled change. Requirements: - Only can be called by the current {defaultAdmin}. Emits a DefaultAdminDelayChangeScheduled event and may emit a DefaultAdminDelayChangeCanceled event.\"},\"claimFee(uint256,bool,bool,uint256)\":{\"details\":\"`pendingFee` is a piece of the pool. When fee is claimed in FLIP, the  pool's decrease in FLIP aligns with the decrease in `pendingFee`. Similarly,  when stFLIP is claimed, the increase in stFLIP supply corresponds to the decrease  in `pendingFee`. When `max` is true, the entire `pendingFee` is claimed and the  `amount` does not matter. \",\"params\":{\"amount\":\"Amount of tokens to burn\",\"max\":\"Whether or not to claim all pending fees\",\"operatorId\":\"the operator's ID that is claiming their fee\",\"receiveFlip\":\"Whether or not to receive the fee in flip or stflip\"}},\"claimServiceFee(uint256,bool,bool)\":{\"params\":{\"amount\":\"Amount of fee to claim\",\"max\":\"Whether or not to claim all pending fees\",\"receiveFlip\":\"Whether to receive the fee in flip or stflip\"}},\"defaultAdmin()\":{\"details\":\"Returns the address of the current `DEFAULT_ADMIN_ROLE` holder.\"},\"defaultAdminDelay()\":{\"details\":\"Returns the delay required to schedule the acceptance of a {defaultAdmin} transfer started. This delay will be added to the current timestamp when calling {beginDefaultAdminTransfer} to set the acceptance schedule. NOTE: If a delay change has been scheduled, it will take effect as soon as the schedule passes, making this function returns the new delay. See {changeDefaultAdminDelay}.\"},\"defaultAdminDelayIncreaseWait()\":{\"details\":\"Maximum time in seconds for an increase to {defaultAdminDelay} (that is scheduled using {changeDefaultAdminDelay}) to take effect. Default to 5 days. When the {defaultAdminDelay} is scheduled to be increased, it goes into effect after the new delay has passed with the purpose of giving enough time for reverting any accidental change (i.e. using milliseconds instead of seconds) that may lock the contract. However, to avoid excessive schedules, the wait is capped by this function and it can be overrode for a custom {defaultAdminDelay} increase scheduling. IMPORTANT: Make sure to add a reasonable amount of time while overriding this value, otherwise, there's a risk of setting a high new delay that goes into effect almost immediately without the possibility of human intervention in the case of an input error (eg. set milliseconds instead of seconds).\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"See {AccessControl-grantRole}. Reverts for `DEFAULT_ADMIN_ROLE`.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address[8],uint256,uint256,uint256)\":{\"params\":{\"addresses\":\"The addresses of the contracts to use: flip, burnerProxy, gov, feeRecipient, manager, stflip, outputProxy\",\"aprThresholdBps_\":\"The amount of bps to set apr threshold to\",\"rebaseInterval_\":\"The amount of time in seconds between rebases\"}},\"owner()\":{\"details\":\"See {IERC5313-owner}.\"},\"pendingDefaultAdmin()\":{\"details\":\"Returns a tuple of a `newAdmin` and an accept schedule. After the `schedule` passes, the `newAdmin` will be able to accept the {defaultAdmin} role by calling {acceptDefaultAdminTransfer}, completing the role transfer. A zero value only in `acceptSchedule` indicates no pending admin transfer. NOTE: A zero address `newAdmin` means that {defaultAdmin} is being renounced.\"},\"pendingDefaultAdminDelay()\":{\"details\":\"Returns a tuple of `newDelay` and an effect schedule. After the `schedule` passes, the `newDelay` will get into effect immediately for every new {defaultAdmin} transfer started with {beginDefaultAdminTransfer}. A zero value only in `effectSchedule` indicates no pending delay change. NOTE: A zero value only for `newDelay` means that the next {defaultAdminDelay} will be zero after the effect schedule.\"},\"rebase(uint256,uint256[],bytes32[],bool)\":{\"details\":\"There is no oracle support for Chainflip yet so we must run the oracle. We have an offchain service that queries the countable validators on the Output address and submits the addresses along with their balances to this  address. There is `aprThresholdBps` and `slashThresholdBps` to ensure that the oracle report is within reasonable bounds. `_updateOperators` calls `_updateOperator` for each operator which changes the `rewards`, `slashCounter`, and `pendingFee` in accordance with the balance report. We might disable `takeFee` if there is a slash we need to make up for. Its also worth noting how `pendingFee` is a piece of the pool, in the same way that pending burns are. \",\"params\":{\"addresses\":\"The addresses of the state chain validators\",\"epoch\":\"The epoch number of the rebase\",\"takeFee\":\"Whether or not to claim fee\",\"validatorBalances\":\"The balances of the state chain validators\"}},\"renounceRole(bytes32,address)\":{\"details\":\"See {AccessControl-renounceRole}. For the `DEFAULT_ADMIN_ROLE`, it only allows renouncing in two steps by first calling {beginDefaultAdminTransfer} to the `address(0)`, so it's required that the {pendingDefaultAdmin} schedule has also passed when calling this function. After its execution, it will not be possible to call `onlyRole(DEFAULT_ADMIN_ROLE)` functions. NOTE: Renouncing `DEFAULT_ADMIN_ROLE` will leave the contract without a {defaultAdmin}, thereby disabling any functionality that is only available for it, and the possibility of reassigning a non-administrated role.\"},\"revokeRole(bytes32,address)\":{\"details\":\"See {AccessControl-revokeRole}. Reverts for `DEFAULT_ADMIN_ROLE`.\"},\"rollbackDefaultAdminDelay()\":{\"details\":\"Cancels a scheduled {defaultAdminDelay} change. Requirements: - Only can be called by the current {defaultAdmin}. May emit a DefaultAdminDelayChangeCanceled event.\"},\"setAprThresholdBps(uint256)\":{\"details\":\"If the rebase exceeds this APR, then the rebase will revert\",\"params\":{\"aprThresholdBps_\":\"The amount of bps to set apr threshold to\"}},\"setRebaseInterval(uint256)\":{\"details\":\"If a rebase occurs before this interval elapses, it will revert\",\"params\":{\"rebaseInterval_\":\"The minimum unix time between rebases\"}},\"setSlashThresholdBps(uint256)\":{\"details\":\"If the supply decreases by this threshold, then the rebase will revertThis is different from APR threshold because slashes would be much more serious\",\"params\":{\"slashThresholdBps_\":\"The number of bps to set slash threshold to\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"Rebaser contract for stFLIP\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimFee(uint256,bool,bool,uint256)\":{\"notice\":\"Claims pending fees to the fee recipient in either stflip or flip\"},\"claimServiceFee(uint256,bool,bool)\":{\"notice\":\"Claims the service's pendingFees\"},\"getOperators()\":{\"notice\":\"Returns all operators\"},\"initialize(address[8],uint256,uint256,uint256)\":{\"notice\":\"Initializes the contract\"},\"rebase(uint256,uint256[],bytes32[],bool)\":{\"notice\":\"Calculates the new rebase factor based on the state chain validator balance and whether or not a fee will be taken\"},\"setAprThresholdBps(uint256)\":{\"notice\":\"Sets the APR threshold in bps\"},\"setRebaseInterval(uint256)\":{\"notice\":\"Sets minimum rebase interval\"},\"setSlashThresholdBps(uint256)\":{\"notice\":\"Sets slash threshold in bps\"}},\"notice\":\"Will be called by an offchain service to set the rebase factor. Has protections so the rebase can't be too large or small. Fees come from rebases, there is a fee claim function to claim fees.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/RebaserV1.sol\":\"RebaserV1\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=lib/frax-governance/node_modules/@chainlink/\",\":@eth-optimism/=lib/frax-governance/node_modules/@eth-optimism/contracts/\",\":@gnosis.pm/=lib/frax-governance/node_modules/@gnosis.pm/\",\":@governance/=lib/frax-governance/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@script-deploy/=script/deploy/\",\":@solmate/=lib/solmate/\",\":@src/=src/\",\":@test/=test/\",\":ds-test/=lib/frax-governance/node_modules/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":frax-governance/=lib/frax-governance/\",\":frax-standard-solidity/=lib/frax-governance/node_modules/frax-standard-solidity/src/\",\":frax-std/=lib/frax-governance/node_modules/frax-standard-solidity/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-solidity/=lib/frax-governance/node_modules/openzeppelin-solidity/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":safe-contracts/=lib/frax-governance/node_modules/@gnosis.pm/safe-contracts/contracts/\",\":safe-tools/=lib/frax-governance/node_modules/safe-tools/src/\",\":solady/=lib/frax-governance/node_modules/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlDefaultAdminRulesUpgradeable.sol\":{\"keccak256\":\"0x11f2411fad76fe0d4704b5cdc294936ef37134e418f7dcc065b0cbe4915220a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3907c9c7d677a91dbbaa806c4ed41b5b4320b889a909e77c87c4301906d7240e\",\"dweb:/ipfs/QmaRUy6eC459XPv7vRuvS38YmncUgQJvrHZuLbYC3s4Fp8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlDefaultAdminRulesUpgradeable.sol\":{\"keccak256\":\"0x6d4b7ecb2cc2ce6fbe36243135c93cbdb5c83627986ca984e492c7cf5e23a512\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://469969128ab03eece200d1b39795b89722c72b47a8b4234cef07664d3ab54113\",\"dweb:/ipfs/QmSrYtMYfAyexPVhrcXGiS7nJxk8hL3e7CxkwVvi9KkH68\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0xccd09723ea79683149efb189c56a122d894fac60711ba51afba1adcf7cefeaed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d62304242f91dd31db43083f05ba4ed058c5d2f5c1dc03b9bcad9edb71c5d9f0\",\"dweb:/ipfs/QmYyPjJusN37F8HnsnNACU8HCeHPFYjsqJCEAZUTwZUE9t\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/governance/utils/VotesUpgradeable.sol\":{\"keccak256\":\"0x117b5a3be1014e7ef434f56e96bc2c00ffcc47b730a5cee07ca83cb4e4aef5fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c878c5ccbc8f15e54a9d3ca59bf014eac58403de5a36d2118505b6743dca7c\",\"dweb:/ipfs/QmYg7auKGQgujUkDcxyTR3J44DCJA4VemLeed3nfM3inic\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5267Upgradeable.sol\":{\"keccak256\":\"0xe562dab443278837fa50faddb76743399e942181881db8dccaea3bd1712994db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79ebe0e661396045cefe94f4256398cf632756d779a6871319db374c9eb128c9\",\"dweb:/ipfs/QmfCTCivb9fFhyCX8hzushzcKunvKL2N9RDsnRNdvbd11M\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5313Upgradeable.sol\":{\"keccak256\":\"0x7bbdfd0cf46f09ca10e42db940e0ae8b54e24beec35429f282d90929ac812f68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://863d4b1341fa392eb0e10ee3ff85db20ab6bdb30054c47ae6bc5c3d1aad334ba\",\"dweb:/ipfs/QmaZspQdbYH19eLQttrt2RisRPAUkMf3gCcCNHQNgsBXe9\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5805Upgradeable.sol\":{\"keccak256\":\"0x19848eec9045c8b91f1ab6b1853966443e3e36bcbc307593ed37a9f0df179d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a07972c1330ee99a5d051b393260e01412ac4c14c7bc4d75d80b7cce291a6412\",\"dweb:/ipfs/QmQx1ZiAo4AbSobN41c1xUEtyX1QejydWCmY7Sj3H5aDNv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC6372Upgradeable.sol\":{\"keccak256\":\"0x3026befd6d69d1b46960bdc35a2ad37c0e1352f26983ee3728dd61fd32aa308a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2001b7209fd4920ec7674f194db7fe163dfea7a7af2dd25fe6c0e5a94dc595c\",\"dweb:/ipfs/QmXX2zTFyiNWoDxivV3trKcKWifAENMqNAB34NgjWq5feX\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/CheckpointsUpgradeable.sol\":{\"keccak256\":\"0x51ea916844ee2c53874c6895ce37acbca0250977b49b48909d75ad439f38f211\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1be66618a68c62dfb767443bccba219ea240ebac287a7a23a32af4d2cbe2d9b9\",\"dweb:/ipfs/QmegRfPREH1UTq56ucSgGByYZqepGoRjKc51Jd3guvqpBJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0xeb8d6be406a373771724922eb41b5d593bc8e2dc705daa22cd1145cfc8f5a3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dcf8f1b2f1869895bffaa1d83ea0e3ab5b42275c97248eda76441e64b343b66\",\"dweb:/ipfs/QmRqs6vX3dnVkRtdXmrxP7a677eaNnTUjY48DT96q6dMcZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x8e99882a991853dc446278576c8cb9b3a5ded84642e9bcc917b1677807c2f18c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310153c1a4c739002ffbc1351ed1dd7488a0d20f5dd816353332fc2c1d81e0a3\",\"dweb:/ipfs/QmcvwXQVUBRTEAoNcvwSVFmhpHUXQ21s2Hfj79hq2uQNVM\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a45c64b97311fabbcbe8dad7e94fa89e06a7f96060d5565326ef706f5f239017\",\"dweb:/ipfs/QmeU2jiBGbHhz9DqRotjbpAx5s2xExDSRQtSD5ENjuHzDq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x4176da81c08b0a6ecb49cd9a1bf3426c364b23f3b1a75ff517d11d33dd492eb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cde1f66dc8121a6f95c4446f4baef237f1aa841ab6ad8526588ee8ff144905af\",\"dweb:/ipfs/QmUXEzNgMNWV224M9Puws38VgiRGthmm2HmhCjexbGyjZX\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"src/mock/StateChainGateway.sol\":{\"keccak256\":\"0x2e8c26664cfc60fb450d98927ac07487e8100fa01c5b146ae184f89d9e63f18d\",\"urls\":[\"bzz-raw://c3372b6eb80fe90acc4ca076b02d7b0fcbace29b6d960498ff8de949937c7718\",\"dweb:/ipfs/QmfEXqwVBn8FgAEgtoaCiUH68UmBQ7cEYT6XGgQpaL4hHj\"]},\"src/token/stFlip.sol\":{\"keccak256\":\"0xe0e0b926c0b1226d646f86750078ab645646c2c7ee36866434e183be17a0c992\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0ea30e2d396c89f8294765f07ea42be2546b8249f9bda6b08ee90775221ba366\",\"dweb:/ipfs/QmaR1Ka88NqDdCpKtB7ScT3tD2D6SJYrZoRtNs834DM4Rk\"]},\"src/token/tStorage.sol\":{\"keccak256\":\"0xa4bf17a319a6667f08e55a41697bc571a4c3d5efbcd85932f14711085ec03941\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ae252a7fe3e44952a35bea7ce39235e1d2dc8a758ac4ef1bb809851079674254\",\"dweb:/ipfs/QmZUAgwp4b5j2YY7CsBNA37ibXYyLmSCTNhAbuAPM6daFq\"]},\"src/utils/BurnerV1.sol\":{\"keccak256\":\"0x13a9b1e809fcc643527c7a97de6c32e9bb226fdb08854cd72770b2c89e1f29f1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e183ad96391606079d22a0b54d2df7a0285b5e4d3428217eb5a163ef5f3ee3cd\",\"dweb:/ipfs/QmaFibBP7x9s68TTcRdmXNKSzycEZBo4JmwHNGzMo7wqVT\"]},\"src/utils/MinterV1.sol\":{\"keccak256\":\"0x4cb020ba9867d1818b51b776585b5cf43b70e7a7b8f3b88a62668cf75c600258\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1934a8b3e8049466039fd6027b6755aee56315f589d09ba542e74b2b8b8c6f60\",\"dweb:/ipfs/QmancVr7QpY7mkoFjg4uDe6oPswtZnrFJ6H3YTYA6cRFN1\"]},\"src/utils/OutputV1.sol\":{\"keccak256\":\"0x95790b96a8936ad3369e2c861b20ff2bcf710623ba133cf38af51ec6d1c34936\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ed46e5da30af011f08586af5b26876179b2f3b18dbd1fd5e273fc2b9a34c7888\",\"dweb:/ipfs/QmQaF9bDAi82zJiJXVytgKbCzUYr1qYrVXEuBC6GZ5GAWB\"]},\"src/utils/Ownership.sol\":{\"keccak256\":\"0x4857f28026b90ca5840340332fecc55f607b5cd3b965d4e8a4dfb949933dac86\",\"urls\":[\"bzz-raw://1a5bdfe7f79d84ed3b3635b1aad48f142270360de2cab3bf8cd2eacae3b60819\",\"dweb:/ipfs/QmUncpNxAiSut3AEGAUUvPhdJxF3Qi7JHfS9abxP8hGZyB\"]},\"src/utils/RebaserV1.sol\":{\"keccak256\":\"0x55776571e4f24ac6987826fa4195ffaa480c6e47f288f9602fffd0a2182b80dc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d1847946d71abc0677992ecca5f8b5afd4b72f8cacc692e7f3ff5b71428d43a7\",\"dweb:/ipfs/QmRvtT48qMNwGCwBT5rUyRBsA3WgYYALjbQrDrRpjFNKxk\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "apr",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "AprTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExcessiveFeeClaim"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputLengthsMustMatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotFeeRecipientOrManager"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RebaseTooSoon"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "decrease",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "SupplyDecreaseTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ValidatorAddressesDoNotMatch"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "DefaultAdminDelayChangeCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "newDelay",
              "type": "uint48",
              "indexed": false
            },
            {
              "internalType": "uint48",
              "name": "effectSchedule",
              "type": "uint48",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultAdminDelayChangeScheduled",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "DefaultAdminTransferCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint48",
              "name": "acceptSchedule",
              "type": "uint48",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultAdminTransferScheduled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "receivedFlip",
              "type": "bool",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "operatorId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FeeClaim",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newAprThreshold",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewAprThreshold",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newRebaseInterval",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewRebaseInterval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newSlashThreshold",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewSlashThreshold",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "apr",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "stateChainBalance",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "previousSupply",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newSupply",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RebaserRebase",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BURNER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FEE_RECIPIENT_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "GOVERNOR_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MANAGER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MINTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PAUSER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "REBASER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptDefaultAdminTransfer"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "aprThresholdBps",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beginDefaultAdminTransfer"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelDefaultAdminTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "newDelay",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeDefaultAdminDelay"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "max",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "receiveFlip",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "operatorId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimFee"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "max",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "receiveFlip",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimServiceFee"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultAdmin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultAdminDelay",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultAdminDelayIncreaseWait",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "flip",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperators",
          "outputs": [
            {
              "internalType": "struct RebaserV1.Operator[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint88",
                  "name": "rewards",
                  "type": "uint88"
                },
                {
                  "internalType": "uint80",
                  "name": "pendingFee",
                  "type": "uint80"
                },
                {
                  "internalType": "uint88",
                  "name": "slashCounter",
                  "type": "uint88"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[8]",
              "name": "addresses",
              "type": "address[8]"
            },
            {
              "internalType": "uint256",
              "name": "aprThresholdBps_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slashThresholdBps_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rebaseInterval_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastRebaseTime",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operators",
          "outputs": [
            {
              "internalType": "uint88",
              "name": "rewards",
              "type": "uint88"
            },
            {
              "internalType": "uint80",
              "name": "pendingFee",
              "type": "uint80"
            },
            {
              "internalType": "uint88",
              "name": "slashCounter",
              "type": "uint88"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingDefaultAdmin",
          "outputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "schedule",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingDefaultAdminDelay",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "newDelay",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "schedule",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "epoch",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "validatorBalances",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes32[]",
              "name": "addresses",
              "type": "bytes32[]"
            },
            {
              "internalType": "bool",
              "name": "takeFee",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rebase"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rebaseInterval",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rollbackDefaultAdminDelay"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "servicePendingFee",
          "outputs": [
            {
              "internalType": "uint80",
              "name": "",
              "type": "uint80"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "aprThresholdBps_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAprThresholdBps"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "rebaseInterval_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRebaseInterval"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "slashThresholdBps_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSlashThresholdBps"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "slashThresholdBps",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stflip",
          "outputs": [
            {
              "internalType": "contract stFlip",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalOperatorPendingFee",
          "outputs": [
            {
              "internalType": "uint80",
              "name": "",
              "type": "uint80"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wrappedBurnerProxy",
          "outputs": [
            {
              "internalType": "contract BurnerV1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wrappedMinterProxy",
          "outputs": [
            {
              "internalType": "contract MinterV1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wrappedOutputProxy",
          "outputs": [
            {
              "internalType": "contract OutputV1",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptDefaultAdminTransfer()": {
            "details": "Completes a {defaultAdmin} transfer previously started with {beginDefaultAdminTransfer}. After calling the function: - `DEFAULT_ADMIN_ROLE` should be granted to the caller. - `DEFAULT_ADMIN_ROLE` should be revoked from the previous holder. - {pendingDefaultAdmin} should be reset to zero values. Requirements: - Only can be called by the {pendingDefaultAdmin}'s `newAdmin`. - The {pendingDefaultAdmin}'s `acceptSchedule` should've passed."
          },
          "beginDefaultAdminTransfer(address)": {
            "details": "Starts a {defaultAdmin} transfer by setting a {pendingDefaultAdmin} scheduled for acceptance after the current timestamp plus a {defaultAdminDelay}. Requirements: - Only can be called by the current {defaultAdmin}. Emits a DefaultAdminRoleChangeStarted event."
          },
          "cancelDefaultAdminTransfer()": {
            "details": "Cancels a {defaultAdmin} transfer previously started with {beginDefaultAdminTransfer}. A {pendingDefaultAdmin} not yet accepted can also be cancelled with this function. Requirements: - Only can be called by the current {defaultAdmin}. May emit a DefaultAdminTransferCanceled event."
          },
          "changeDefaultAdminDelay(uint48)": {
            "details": "Initiates a {defaultAdminDelay} update by setting a {pendingDefaultAdminDelay} scheduled for getting into effect after the current timestamp plus a {defaultAdminDelay}. This function guarantees that any call to {beginDefaultAdminTransfer} done between the timestamp this method is called and the {pendingDefaultAdminDelay} effect schedule will use the current {defaultAdminDelay} set before calling. The {pendingDefaultAdminDelay}'s effect schedule is defined in a way that waiting until the schedule and then calling {beginDefaultAdminTransfer} with the new delay will take at least the same as another {defaultAdmin} complete transfer (including acceptance). The schedule is designed for two scenarios: - When the delay is changed for a larger one the schedule is `block.timestamp + newDelay` capped by {defaultAdminDelayIncreaseWait}. - When the delay is changed for a shorter one, the schedule is `block.timestamp + (current delay - new delay)`. A {pendingDefaultAdminDelay} that never got into effect will be canceled in favor of a new scheduled change. Requirements: - Only can be called by the current {defaultAdmin}. Emits a DefaultAdminDelayChangeScheduled event and may emit a DefaultAdminDelayChangeCanceled event."
          },
          "claimFee(uint256,bool,bool,uint256)": {
            "details": "`pendingFee` is a piece of the pool. When fee is claimed in FLIP, the  pool's decrease in FLIP aligns with the decrease in `pendingFee`. Similarly,  when stFLIP is claimed, the increase in stFLIP supply corresponds to the decrease  in `pendingFee`. When `max` is true, the entire `pendingFee` is claimed and the  `amount` does not matter. ",
            "params": {
              "amount": "Amount of tokens to burn",
              "max": "Whether or not to claim all pending fees",
              "operatorId": "the operator's ID that is claiming their fee",
              "receiveFlip": "Whether or not to receive the fee in flip or stflip"
            }
          },
          "claimServiceFee(uint256,bool,bool)": {
            "params": {
              "amount": "Amount of fee to claim",
              "max": "Whether or not to claim all pending fees",
              "receiveFlip": "Whether to receive the fee in flip or stflip"
            }
          },
          "defaultAdmin()": {
            "details": "Returns the address of the current `DEFAULT_ADMIN_ROLE` holder."
          },
          "defaultAdminDelay()": {
            "details": "Returns the delay required to schedule the acceptance of a {defaultAdmin} transfer started. This delay will be added to the current timestamp when calling {beginDefaultAdminTransfer} to set the acceptance schedule. NOTE: If a delay change has been scheduled, it will take effect as soon as the schedule passes, making this function returns the new delay. See {changeDefaultAdminDelay}."
          },
          "defaultAdminDelayIncreaseWait()": {
            "details": "Maximum time in seconds for an increase to {defaultAdminDelay} (that is scheduled using {changeDefaultAdminDelay}) to take effect. Default to 5 days. When the {defaultAdminDelay} is scheduled to be increased, it goes into effect after the new delay has passed with the purpose of giving enough time for reverting any accidental change (i.e. using milliseconds instead of seconds) that may lock the contract. However, to avoid excessive schedules, the wait is capped by this function and it can be overrode for a custom {defaultAdminDelay} increase scheduling. IMPORTANT: Make sure to add a reasonable amount of time while overriding this value, otherwise, there's a risk of setting a high new delay that goes into effect almost immediately without the possibility of human intervention in the case of an input error (eg. set milliseconds instead of seconds)."
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "See {AccessControl-grantRole}. Reverts for `DEFAULT_ADMIN_ROLE`."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "initialize(address[8],uint256,uint256,uint256)": {
            "params": {
              "addresses": "The addresses of the contracts to use: flip, burnerProxy, gov, feeRecipient, manager, stflip, outputProxy",
              "aprThresholdBps_": "The amount of bps to set apr threshold to",
              "rebaseInterval_": "The amount of time in seconds between rebases"
            }
          },
          "owner()": {
            "details": "See {IERC5313-owner}."
          },
          "pendingDefaultAdmin()": {
            "details": "Returns a tuple of a `newAdmin` and an accept schedule. After the `schedule` passes, the `newAdmin` will be able to accept the {defaultAdmin} role by calling {acceptDefaultAdminTransfer}, completing the role transfer. A zero value only in `acceptSchedule` indicates no pending admin transfer. NOTE: A zero address `newAdmin` means that {defaultAdmin} is being renounced."
          },
          "pendingDefaultAdminDelay()": {
            "details": "Returns a tuple of `newDelay` and an effect schedule. After the `schedule` passes, the `newDelay` will get into effect immediately for every new {defaultAdmin} transfer started with {beginDefaultAdminTransfer}. A zero value only in `effectSchedule` indicates no pending delay change. NOTE: A zero value only for `newDelay` means that the next {defaultAdminDelay} will be zero after the effect schedule."
          },
          "rebase(uint256,uint256[],bytes32[],bool)": {
            "details": "There is no oracle support for Chainflip yet so we must run the oracle. We have an offchain service that queries the countable validators on the Output address and submits the addresses along with their balances to this  address. There is `aprThresholdBps` and `slashThresholdBps` to ensure that the oracle report is within reasonable bounds. `_updateOperators` calls `_updateOperator` for each operator which changes the `rewards`, `slashCounter`, and `pendingFee` in accordance with the balance report. We might disable `takeFee` if there is a slash we need to make up for. Its also worth noting how `pendingFee` is a piece of the pool, in the same way that pending burns are. ",
            "params": {
              "addresses": "The addresses of the state chain validators",
              "epoch": "The epoch number of the rebase",
              "takeFee": "Whether or not to claim fee",
              "validatorBalances": "The balances of the state chain validators"
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "See {AccessControl-renounceRole}. For the `DEFAULT_ADMIN_ROLE`, it only allows renouncing in two steps by first calling {beginDefaultAdminTransfer} to the `address(0)`, so it's required that the {pendingDefaultAdmin} schedule has also passed when calling this function. After its execution, it will not be possible to call `onlyRole(DEFAULT_ADMIN_ROLE)` functions. NOTE: Renouncing `DEFAULT_ADMIN_ROLE` will leave the contract without a {defaultAdmin}, thereby disabling any functionality that is only available for it, and the possibility of reassigning a non-administrated role."
          },
          "revokeRole(bytes32,address)": {
            "details": "See {AccessControl-revokeRole}. Reverts for `DEFAULT_ADMIN_ROLE`."
          },
          "rollbackDefaultAdminDelay()": {
            "details": "Cancels a scheduled {defaultAdminDelay} change. Requirements: - Only can be called by the current {defaultAdmin}. May emit a DefaultAdminDelayChangeCanceled event."
          },
          "setAprThresholdBps(uint256)": {
            "details": "If the rebase exceeds this APR, then the rebase will revert",
            "params": {
              "aprThresholdBps_": "The amount of bps to set apr threshold to"
            }
          },
          "setRebaseInterval(uint256)": {
            "details": "If a rebase occurs before this interval elapses, it will revert",
            "params": {
              "rebaseInterval_": "The minimum unix time between rebases"
            }
          },
          "setSlashThresholdBps(uint256)": {
            "details": "If the supply decreases by this threshold, then the rebase will revertThis is different from APR threshold because slashes would be much more serious",
            "params": {
              "slashThresholdBps_": "The number of bps to set slash threshold to"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claimFee(uint256,bool,bool,uint256)": {
            "notice": "Claims pending fees to the fee recipient in either stflip or flip"
          },
          "claimServiceFee(uint256,bool,bool)": {
            "notice": "Claims the service's pendingFees"
          },
          "getOperators()": {
            "notice": "Returns all operators"
          },
          "initialize(address[8],uint256,uint256,uint256)": {
            "notice": "Initializes the contract"
          },
          "rebase(uint256,uint256[],bytes32[],bool)": {
            "notice": "Calculates the new rebase factor based on the state chain validator balance and whether or not a fee will be taken"
          },
          "setAprThresholdBps(uint256)": {
            "notice": "Sets the APR threshold in bps"
          },
          "setRebaseInterval(uint256)": {
            "notice": "Sets minimum rebase interval"
          },
          "setSlashThresholdBps(uint256)": {
            "notice": "Sets slash threshold in bps"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=lib/frax-governance/node_modules/@chainlink/",
        "@eth-optimism/=lib/frax-governance/node_modules/@eth-optimism/contracts/",
        "@gnosis.pm/=lib/frax-governance/node_modules/@gnosis.pm/",
        "@governance/=lib/frax-governance/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@script-deploy/=script/deploy/",
        "@solmate/=lib/solmate/",
        "@src/=src/",
        "@test/=test/",
        "ds-test/=lib/frax-governance/node_modules/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "frax-governance/=lib/frax-governance/",
        "frax-standard-solidity/=lib/frax-governance/node_modules/frax-standard-solidity/src/",
        "frax-std/=lib/frax-governance/node_modules/frax-standard-solidity/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin-solidity/=lib/frax-governance/node_modules/openzeppelin-solidity/contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "safe-contracts/=lib/frax-governance/node_modules/@gnosis.pm/safe-contracts/contracts/",
        "safe-tools/=lib/frax-governance/node_modules/safe-tools/src/",
        "solady/=lib/frax-governance/node_modules/solady/src/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/utils/RebaserV1.sol": "RebaserV1"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlDefaultAdminRulesUpgradeable.sol": {
        "keccak256": "0x11f2411fad76fe0d4704b5cdc294936ef37134e418f7dcc065b0cbe4915220a3",
        "urls": [
          "bzz-raw://3907c9c7d677a91dbbaa806c4ed41b5b4320b889a909e77c87c4301906d7240e",
          "dweb:/ipfs/QmaRUy6eC459XPv7vRuvS38YmncUgQJvrHZuLbYC3s4Fp8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831",
        "urls": [
          "bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709",
          "dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlDefaultAdminRulesUpgradeable.sol": {
        "keccak256": "0x6d4b7ecb2cc2ce6fbe36243135c93cbdb5c83627986ca984e492c7cf5e23a512",
        "urls": [
          "bzz-raw://469969128ab03eece200d1b39795b89722c72b47a8b4234cef07664d3ab54113",
          "dweb:/ipfs/QmSrYtMYfAyexPVhrcXGiS7nJxk8hL3e7CxkwVvi9KkH68"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol": {
        "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
        "urls": [
          "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
          "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/governance/utils/IVotesUpgradeable.sol": {
        "keccak256": "0xccd09723ea79683149efb189c56a122d894fac60711ba51afba1adcf7cefeaed",
        "urls": [
          "bzz-raw://d62304242f91dd31db43083f05ba4ed058c5d2f5c1dc03b9bcad9edb71c5d9f0",
          "dweb:/ipfs/QmYyPjJusN37F8HnsnNACU8HCeHPFYjsqJCEAZUTwZUE9t"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/governance/utils/VotesUpgradeable.sol": {
        "keccak256": "0x117b5a3be1014e7ef434f56e96bc2c00ffcc47b730a5cee07ca83cb4e4aef5fc",
        "urls": [
          "bzz-raw://36c878c5ccbc8f15e54a9d3ca59bf014eac58403de5a36d2118505b6743dca7c",
          "dweb:/ipfs/QmYg7auKGQgujUkDcxyTR3J44DCJA4VemLeed3nfM3inic"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5267Upgradeable.sol": {
        "keccak256": "0xe562dab443278837fa50faddb76743399e942181881db8dccaea3bd1712994db",
        "urls": [
          "bzz-raw://79ebe0e661396045cefe94f4256398cf632756d779a6871319db374c9eb128c9",
          "dweb:/ipfs/QmfCTCivb9fFhyCX8hzushzcKunvKL2N9RDsnRNdvbd11M"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5313Upgradeable.sol": {
        "keccak256": "0x7bbdfd0cf46f09ca10e42db940e0ae8b54e24beec35429f282d90929ac812f68",
        "urls": [
          "bzz-raw://863d4b1341fa392eb0e10ee3ff85db20ab6bdb30054c47ae6bc5c3d1aad334ba",
          "dweb:/ipfs/QmaZspQdbYH19eLQttrt2RisRPAUkMf3gCcCNHQNgsBXe9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5805Upgradeable.sol": {
        "keccak256": "0x19848eec9045c8b91f1ab6b1853966443e3e36bcbc307593ed37a9f0df179d69",
        "urls": [
          "bzz-raw://a07972c1330ee99a5d051b393260e01412ac4c14c7bc4d75d80b7cce291a6412",
          "dweb:/ipfs/QmQx1ZiAo4AbSobN41c1xUEtyX1QejydWCmY7Sj3H5aDNv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC6372Upgradeable.sol": {
        "keccak256": "0x3026befd6d69d1b46960bdc35a2ad37c0e1352f26983ee3728dd61fd32aa308a",
        "urls": [
          "bzz-raw://c2001b7209fd4920ec7674f194db7fe163dfea7a7af2dd25fe6c0e5a94dc595c",
          "dweb:/ipfs/QmXX2zTFyiNWoDxivV3trKcKWifAENMqNAB34NgjWq5feX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/CheckpointsUpgradeable.sol": {
        "keccak256": "0x51ea916844ee2c53874c6895ce37acbca0250977b49b48909d75ad439f38f211",
        "urls": [
          "bzz-raw://1be66618a68c62dfb767443bccba219ea240ebac287a7a23a32af4d2cbe2d9b9",
          "dweb:/ipfs/QmegRfPREH1UTq56ucSgGByYZqepGoRjKc51Jd3guvqpBJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4",
        "urls": [
          "bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c",
          "dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol": {
        "keccak256": "0xeb8d6be406a373771724922eb41b5d593bc8e2dc705daa22cd1145cfc8f5a3a0",
        "urls": [
          "bzz-raw://7dcf8f1b2f1869895bffaa1d83ea0e3ab5b42275c97248eda76441e64b343b66",
          "dweb:/ipfs/QmRqs6vX3dnVkRtdXmrxP7a677eaNnTUjY48DT96q6dMcZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol": {
        "keccak256": "0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b",
        "urls": [
          "bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c",
          "dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90",
        "urls": [
          "bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263",
          "dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d",
        "urls": [
          "bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5",
          "dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2",
        "urls": [
          "bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2",
          "dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol": {
        "keccak256": "0x8e99882a991853dc446278576c8cb9b3a5ded84642e9bcc917b1677807c2f18c",
        "urls": [
          "bzz-raw://310153c1a4c739002ffbc1351ed1dd7488a0d20f5dd816353332fc2c1d81e0a3",
          "dweb:/ipfs/QmcvwXQVUBRTEAoNcvwSVFmhpHUXQ21s2Hfj79hq2uQNVM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
        "keccak256": "0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689",
        "urls": [
          "bzz-raw://a45c64b97311fabbcbe8dad7e94fa89e06a7f96060d5565326ef706f5f239017",
          "dweb:/ipfs/QmeU2jiBGbHhz9DqRotjbpAx5s2xExDSRQtSD5ENjuHzDq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x4176da81c08b0a6ecb49cd9a1bf3426c364b23f3b1a75ff517d11d33dd492eb6",
        "urls": [
          "bzz-raw://cde1f66dc8121a6f95c4446f4baef237f1aa841ab6ad8526588ee8ff144905af",
          "dweb:/ipfs/QmUXEzNgMNWV224M9Puws38VgiRGthmm2HmhCjexbGyjZX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/mock/StateChainGateway.sol": {
        "keccak256": "0x2e8c26664cfc60fb450d98927ac07487e8100fa01c5b146ae184f89d9e63f18d",
        "urls": [
          "bzz-raw://c3372b6eb80fe90acc4ca076b02d7b0fcbace29b6d960498ff8de949937c7718",
          "dweb:/ipfs/QmfEXqwVBn8FgAEgtoaCiUH68UmBQ7cEYT6XGgQpaL4hHj"
        ],
        "license": null
      },
      "src/token/stFlip.sol": {
        "keccak256": "0xe0e0b926c0b1226d646f86750078ab645646c2c7ee36866434e183be17a0c992",
        "urls": [
          "bzz-raw://0ea30e2d396c89f8294765f07ea42be2546b8249f9bda6b08ee90775221ba366",
          "dweb:/ipfs/QmaR1Ka88NqDdCpKtB7ScT3tD2D6SJYrZoRtNs834DM4Rk"
        ],
        "license": "BUSL-1.1"
      },
      "src/token/tStorage.sol": {
        "keccak256": "0xa4bf17a319a6667f08e55a41697bc571a4c3d5efbcd85932f14711085ec03941",
        "urls": [
          "bzz-raw://ae252a7fe3e44952a35bea7ce39235e1d2dc8a758ac4ef1bb809851079674254",
          "dweb:/ipfs/QmZUAgwp4b5j2YY7CsBNA37ibXYyLmSCTNhAbuAPM6daFq"
        ],
        "license": "BUSL-1.1"
      },
      "src/utils/BurnerV1.sol": {
        "keccak256": "0x13a9b1e809fcc643527c7a97de6c32e9bb226fdb08854cd72770b2c89e1f29f1",
        "urls": [
          "bzz-raw://e183ad96391606079d22a0b54d2df7a0285b5e4d3428217eb5a163ef5f3ee3cd",
          "dweb:/ipfs/QmaFibBP7x9s68TTcRdmXNKSzycEZBo4JmwHNGzMo7wqVT"
        ],
        "license": "BUSL-1.1"
      },
      "src/utils/MinterV1.sol": {
        "keccak256": "0x4cb020ba9867d1818b51b776585b5cf43b70e7a7b8f3b88a62668cf75c600258",
        "urls": [
          "bzz-raw://1934a8b3e8049466039fd6027b6755aee56315f589d09ba542e74b2b8b8c6f60",
          "dweb:/ipfs/QmancVr7QpY7mkoFjg4uDe6oPswtZnrFJ6H3YTYA6cRFN1"
        ],
        "license": "BUSL-1.1"
      },
      "src/utils/OutputV1.sol": {
        "keccak256": "0x95790b96a8936ad3369e2c861b20ff2bcf710623ba133cf38af51ec6d1c34936",
        "urls": [
          "bzz-raw://ed46e5da30af011f08586af5b26876179b2f3b18dbd1fd5e273fc2b9a34c7888",
          "dweb:/ipfs/QmQaF9bDAi82zJiJXVytgKbCzUYr1qYrVXEuBC6GZ5GAWB"
        ],
        "license": "BUSL-1.1"
      },
      "src/utils/Ownership.sol": {
        "keccak256": "0x4857f28026b90ca5840340332fecc55f607b5cd3b965d4e8a4dfb949933dac86",
        "urls": [
          "bzz-raw://1a5bdfe7f79d84ed3b3635b1aad48f142270360de2cab3bf8cd2eacae3b60819",
          "dweb:/ipfs/QmUncpNxAiSut3AEGAUUvPhdJxF3Qi7JHfS9abxP8hGZyB"
        ],
        "license": null
      },
      "src/utils/RebaserV1.sol": {
        "keccak256": "0x55776571e4f24ac6987826fa4195ffaa480c6e47f288f9602fffd0a2182b80dc",
        "urls": [
          "bzz-raw://d1847946d71abc0677992ecca5f8b5afd4b72f8cacc692e7f3ff5b71428d43a7",
          "dweb:/ipfs/QmRvtT48qMNwGCwBT5rUyRBsA3WgYYALjbQrDrRpjFNKxk"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 45871,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 45874,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 47945,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 48942,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "__gap",
        "offset": 0,
        "slot": "51",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 44957,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "_roles",
        "offset": 0,
        "slot": "101",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)44952_storage)"
      },
      {
        "astId": 45252,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 44222,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "_pendingDefaultAdmin",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 44224,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "_pendingDefaultAdminSchedule",
        "offset": 20,
        "slot": "151",
        "type": "t_uint48"
      },
      {
        "astId": 44226,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "_currentDelay",
        "offset": 26,
        "slot": "151",
        "type": "t_uint48"
      },
      {
        "astId": 44228,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "_currentDefaultAdmin",
        "offset": 0,
        "slot": "152",
        "type": "t_address"
      },
      {
        "astId": 44230,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "_pendingDelay",
        "offset": 20,
        "slot": "152",
        "type": "t_uint48"
      },
      {
        "astId": 44232,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "_pendingDelaySchedule",
        "offset": 26,
        "slot": "152",
        "type": "t_uint48"
      },
      {
        "astId": 44916,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "__gap",
        "offset": 0,
        "slot": "153",
        "type": "t_array(t_uint256)48_storage"
      },
      {
        "astId": 75932,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "aprThresholdBps",
        "offset": 0,
        "slot": "201",
        "type": "t_uint16"
      },
      {
        "astId": 75934,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "slashThresholdBps",
        "offset": 2,
        "slot": "201",
        "type": "t_uint16"
      },
      {
        "astId": 75936,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "lastRebaseTime",
        "offset": 4,
        "slot": "201",
        "type": "t_uint32"
      },
      {
        "astId": 75938,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "rebaseInterval",
        "offset": 8,
        "slot": "201",
        "type": "t_uint32"
      },
      {
        "astId": 75940,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "servicePendingFee",
        "offset": 12,
        "slot": "201",
        "type": "t_uint80"
      },
      {
        "astId": 75942,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "totalOperatorPendingFee",
        "offset": 22,
        "slot": "201",
        "type": "t_uint80"
      },
      {
        "astId": 75945,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "wrappedBurnerProxy",
        "offset": 0,
        "slot": "202",
        "type": "t_contract(BurnerV1)74564"
      },
      {
        "astId": 75948,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "wrappedOutputProxy",
        "offset": 0,
        "slot": "203",
        "type": "t_contract(OutputV1)75869"
      },
      {
        "astId": 75951,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "wrappedMinterProxy",
        "offset": 0,
        "slot": "204",
        "type": "t_contract(MinterV1)74683"
      },
      {
        "astId": 75954,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "flip",
        "offset": 0,
        "slot": "205",
        "type": "t_contract(IERC20)57630"
      },
      {
        "astId": 75957,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "stflip",
        "offset": 0,
        "slot": "206",
        "type": "t_contract(stFlip)73252"
      },
      {
        "astId": 75969,
        "contract": "src/utils/RebaserV1.sol:RebaserV1",
        "label": "operators",
        "offset": 0,
        "slot": "207",
        "type": "t_mapping(t_uint256,t_struct(Operator)75964_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)48_storage": {
        "encoding": "inplace",
        "label": "uint256[48]",
        "numberOfBytes": "1536",
        "base": "t_uint256"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(BurnerV1)74564": {
        "encoding": "inplace",
        "label": "contract BurnerV1",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)57630": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(MinterV1)74683": {
        "encoding": "inplace",
        "label": "contract MinterV1",
        "numberOfBytes": "20"
      },
      "t_contract(OutputV1)75869": {
        "encoding": "inplace",
        "label": "contract OutputV1",
        "numberOfBytes": "20"
      },
      "t_contract(stFlip)73252": {
        "encoding": "inplace",
        "label": "contract stFlip",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)44952_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)44952_storage"
      },
      "t_mapping(t_uint256,t_struct(Operator)75964_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct RebaserV1.Operator)",
        "numberOfBytes": "32",
        "value": "t_struct(Operator)75964_storage"
      },
      "t_struct(Operator)75964_storage": {
        "encoding": "inplace",
        "label": "struct RebaserV1.Operator",
        "numberOfBytes": "32",
        "members": [
          {
            "astId": 75959,
            "contract": "src/utils/RebaserV1.sol:RebaserV1",
            "label": "rewards",
            "offset": 0,
            "slot": "0",
            "type": "t_uint88"
          },
          {
            "astId": 75961,
            "contract": "src/utils/RebaserV1.sol:RebaserV1",
            "label": "pendingFee",
            "offset": 11,
            "slot": "0",
            "type": "t_uint80"
          },
          {
            "astId": 75963,
            "contract": "src/utils/RebaserV1.sol:RebaserV1",
            "label": "slashCounter",
            "offset": 21,
            "slot": "0",
            "type": "t_uint88"
          }
        ]
      },
      "t_struct(RoleData)44952_storage": {
        "encoding": "inplace",
        "label": "struct AccessControlUpgradeable.RoleData",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 44949,
            "contract": "src/utils/RebaserV1.sol:RebaserV1",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 44951,
            "contract": "src/utils/RebaserV1.sol:RebaserV1",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ]
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint48": {
        "encoding": "inplace",
        "label": "uint48",
        "numberOfBytes": "6"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      },
      "t_uint80": {
        "encoding": "inplace",
        "label": "uint80",
        "numberOfBytes": "10"
      },
      "t_uint88": {
        "encoding": "inplace",
        "label": "uint88",
        "numberOfBytes": "11"
      }
    }
  },
  "ast": {
    "absolutePath": "src/utils/RebaserV1.sol",
    "id": 76967,
    "exportedSymbols": {
      "AccessControlDefaultAdminRulesUpgradeable": [
        44917
      ],
      "AccessControlUpgradeable": [
        45253
      ],
      "Address": [
        58743
      ],
      "AddressUpgradeable": [
        46363
      ],
      "BurnerV1": [
        74564
      ],
      "CheckpointsUpgradeable": [
        47904
      ],
      "Context": [
        60462
      ],
      "ContextUpgradeable": [
        47946
      ],
      "CountersUpgradeable": [
        48020
      ],
      "ECDSAUpgradeable": [
        48615
      ],
      "EIP712Upgradeable": [
        48899
      ],
      "ERC165Upgradeable": [
        48943
      ],
      "ERC1967Proxy": [
        56099
      ],
      "ERC1967Upgrade": [
        56403
      ],
      "FixedPointMathLib": [
        64710
      ],
      "IAccessControlDefaultAdminRulesUpgradeable": [
        45338
      ],
      "IAccessControlUpgradeable": [
        45411
      ],
      "IBeacon": [
        56465
      ],
      "IERC165Upgradeable": [
        48955
      ],
      "IERC1822Proxiable": [
        56062
      ],
      "IERC1967": [
        56003
      ],
      "IERC20": [
        57630
      ],
      "IERC20Permit": [
        58019
      ],
      "IERC5267Upgradeable": [
        45830
      ],
      "IERC5313Upgradeable": [
        45840
      ],
      "IERC5805Upgradeable": [
        45849
      ],
      "IERC6372Upgradeable": [
        45864
      ],
      "ITransparentUpgradeableProxy": [
        56635
      ],
      "IVotesUpgradeable": [
        45449
      ],
      "Initializable": [
        46033
      ],
      "Math": [
        62563
      ],
      "MathUpgradeable": [
        49821
      ],
      "MinterV1": [
        74683
      ],
      "OutputV1": [
        75869
      ],
      "Ownable": [
        51969
      ],
      "Ownership": [
        75911
      ],
      "Proxy": [
        56455
      ],
      "ProxyAdmin": [
        56601
      ],
      "RebaserV1": [
        76966
      ],
      "SafeCast": [
        64104
      ],
      "SafeCastUpgradeable": [
        51362
      ],
      "SafeERC20": [
        58395
      ],
      "SignedMathUpgradeable": [
        51467
      ],
      "StateChainGateway": [
        72188
      ],
      "StorageSlot": [
        60862
      ],
      "StringsUpgradeable": [
        48249
      ],
      "TokenStorage": [
        73316
      ],
      "TransparentUpgradeableProxy": [
        56924
      ],
      "VotesUpgradeable": [
        45805
      ],
      "console": [
        18379
      ],
      "stFlip": [
        73252
      ]
    },
    "nodeType": "SourceUnit",
    "src": "190:17595:193",
    "nodes": [
      {
        "id": 75913,
        "nodeType": "PragmaDirective",
        "src": "190:23:193",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 75914,
        "nodeType": "ImportDirective",
        "src": "217:56:193",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76967,
        "sourceUnit": 57631,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 75915,
        "nodeType": "ImportDirective",
        "src": "275:29:193",
        "nodes": [],
        "absolutePath": "src/token/stFlip.sol",
        "file": "../token/stFlip.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76967,
        "sourceUnit": 73253,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 75916,
        "nodeType": "ImportDirective",
        "src": "306:31:193",
        "nodes": [],
        "absolutePath": "src/utils/BurnerV1.sol",
        "file": "../utils/BurnerV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76967,
        "sourceUnit": 74565,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 75917,
        "nodeType": "ImportDirective",
        "src": "339:31:193",
        "nodes": [],
        "absolutePath": "src/utils/OutputV1.sol",
        "file": "../utils/OutputV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76967,
        "sourceUnit": 75870,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 75918,
        "nodeType": "ImportDirective",
        "src": "372:31:193",
        "nodes": [],
        "absolutePath": "src/utils/MinterV1.sol",
        "file": "../utils/MinterV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76967,
        "sourceUnit": 74684,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 75919,
        "nodeType": "ImportDirective",
        "src": "405:39:193",
        "nodes": [],
        "absolutePath": "src/mock/StateChainGateway.sol",
        "file": "../mock/StateChainGateway.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76967,
        "sourceUnit": 72189,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 75920,
        "nodeType": "ImportDirective",
        "src": "446:75:193",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76967,
        "sourceUnit": 46034,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 75921,
        "nodeType": "ImportDirective",
        "src": "523:66:193",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol",
        "file": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76967,
        "sourceUnit": 56602,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 75922,
        "nodeType": "ImportDirective",
        "src": "591:57:193",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeCast.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76967,
        "sourceUnit": 64105,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76966,
        "nodeType": "ContractDefinition",
        "src": "913:16870:193",
        "nodes": [
          {
            "id": 75930,
            "nodeType": "VariableDeclaration",
            "src": "969:40:193",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "TIME_IN_YEAR",
            "nameLocation": "986:12:193",
            "scope": 76966,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 75928,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "969:7:193",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3331353336303030",
              "id": 75929,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1001:8:193",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_31536000_by_1",
                "typeString": "int_const 31536000"
              },
              "value": "31536000"
            },
            "visibility": "internal"
          },
          {
            "id": 75932,
            "nodeType": "VariableDeclaration",
            "src": "1018:29:193",
            "nodes": [],
            "constant": false,
            "functionSelector": "10e481d5",
            "mutability": "mutable",
            "name": "aprThresholdBps",
            "nameLocation": "1032:15:193",
            "scope": 76966,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 75931,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "1018:6:193",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "visibility": "public"
          },
          {
            "id": 75934,
            "nodeType": "VariableDeclaration",
            "src": "1083:31:193",
            "nodes": [],
            "constant": false,
            "functionSelector": "3f6c17ad",
            "mutability": "mutable",
            "name": "slashThresholdBps",
            "nameLocation": "1097:17:193",
            "scope": 76966,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 75933,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "1083:6:193",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "visibility": "public"
          },
          {
            "id": 75936,
            "nodeType": "VariableDeclaration",
            "src": "1148:28:193",
            "nodes": [],
            "constant": false,
            "functionSelector": "1924063e",
            "mutability": "mutable",
            "name": "lastRebaseTime",
            "nameLocation": "1162:14:193",
            "scope": 76966,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 75935,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1148:6:193",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 75938,
            "nodeType": "VariableDeclaration",
            "src": "1213:28:193",
            "nodes": [],
            "constant": false,
            "functionSelector": "89edeb74",
            "mutability": "mutable",
            "name": "rebaseInterval",
            "nameLocation": "1227:14:193",
            "scope": 76966,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 75937,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1213:6:193",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 75940,
            "nodeType": "VariableDeclaration",
            "src": "1278:31:193",
            "nodes": [],
            "constant": false,
            "functionSelector": "e33b8975",
            "mutability": "mutable",
            "name": "servicePendingFee",
            "nameLocation": "1292:17:193",
            "scope": 76966,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint80",
              "typeString": "uint80"
            },
            "typeName": {
              "id": 75939,
              "name": "uint80",
              "nodeType": "ElementaryTypeName",
              "src": "1278:6:193",
              "typeDescriptions": {
                "typeIdentifier": "t_uint80",
                "typeString": "uint80"
              }
            },
            "visibility": "public"
          },
          {
            "id": 75942,
            "nodeType": "VariableDeclaration",
            "src": "1346:37:193",
            "nodes": [],
            "constant": false,
            "functionSelector": "e83cbe39",
            "mutability": "mutable",
            "name": "totalOperatorPendingFee",
            "nameLocation": "1360:23:193",
            "scope": 76966,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint80",
              "typeString": "uint80"
            },
            "typeName": {
              "id": 75941,
              "name": "uint80",
              "nodeType": "ElementaryTypeName",
              "src": "1346:6:193",
              "typeDescriptions": {
                "typeIdentifier": "t_uint80",
                "typeString": "uint80"
              }
            },
            "visibility": "public"
          },
          {
            "id": 75945,
            "nodeType": "VariableDeclaration",
            "src": "1392:34:193",
            "nodes": [],
            "constant": false,
            "functionSelector": "b8c8fb21",
            "mutability": "mutable",
            "name": "wrappedBurnerProxy",
            "nameLocation": "1408:18:193",
            "scope": 76966,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BurnerV1_$74564",
              "typeString": "contract BurnerV1"
            },
            "typeName": {
              "id": 75944,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 75943,
                "name": "BurnerV1",
                "nameLocations": [
                  "1392:8:193"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 74564,
                "src": "1392:8:193"
              },
              "referencedDeclaration": 74564,
              "src": "1392:8:193",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BurnerV1_$74564",
                "typeString": "contract BurnerV1"
              }
            },
            "visibility": "public"
          },
          {
            "id": 75948,
            "nodeType": "VariableDeclaration",
            "src": "1433:34:193",
            "nodes": [],
            "constant": false,
            "functionSelector": "d81b3a2b",
            "mutability": "mutable",
            "name": "wrappedOutputProxy",
            "nameLocation": "1449:18:193",
            "scope": 76966,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OutputV1_$75869",
              "typeString": "contract OutputV1"
            },
            "typeName": {
              "id": 75947,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 75946,
                "name": "OutputV1",
                "nameLocations": [
                  "1433:8:193"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 75869,
                "src": "1433:8:193"
              },
              "referencedDeclaration": 75869,
              "src": "1433:8:193",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OutputV1_$75869",
                "typeString": "contract OutputV1"
              }
            },
            "visibility": "public"
          },
          {
            "id": 75951,
            "nodeType": "VariableDeclaration",
            "src": "1474:34:193",
            "nodes": [],
            "constant": false,
            "functionSelector": "10fe237e",
            "mutability": "mutable",
            "name": "wrappedMinterProxy",
            "nameLocation": "1490:18:193",
            "scope": 76966,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MinterV1_$74683",
              "typeString": "contract MinterV1"
            },
            "typeName": {
              "id": 75950,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 75949,
                "name": "MinterV1",
                "nameLocations": [
                  "1474:8:193"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 74683,
                "src": "1474:8:193"
              },
              "referencedDeclaration": 74683,
              "src": "1474:8:193",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterV1_$74683",
                "typeString": "contract MinterV1"
              }
            },
            "visibility": "public"
          },
          {
            "id": 75954,
            "nodeType": "VariableDeclaration",
            "src": "1517:18:193",
            "nodes": [],
            "constant": false,
            "functionSelector": "cde4efa9",
            "mutability": "mutable",
            "name": "flip",
            "nameLocation": "1531:4:193",
            "scope": 76966,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$57630",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 75953,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 75952,
                "name": "IERC20",
                "nameLocations": [
                  "1517:6:193"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 57630,
                "src": "1517:6:193"
              },
              "referencedDeclaration": 57630,
              "src": "1517:6:193",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$57630",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 75957,
            "nodeType": "VariableDeclaration",
            "src": "1542:20:193",
            "nodes": [],
            "constant": false,
            "functionSelector": "f025b209",
            "mutability": "mutable",
            "name": "stflip",
            "nameLocation": "1556:6:193",
            "scope": 76966,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_stFlip_$73252",
              "typeString": "contract stFlip"
            },
            "typeName": {
              "id": 75956,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 75955,
                "name": "stFlip",
                "nameLocations": [
                  "1542:6:193"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 73252,
                "src": "1542:6:193"
              },
              "referencedDeclaration": 73252,
              "src": "1542:6:193",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_stFlip_$73252",
                "typeString": "contract stFlip"
              }
            },
            "visibility": "public"
          },
          {
            "id": 75964,
            "nodeType": "StructDefinition",
            "src": "1571:196:193",
            "nodes": [],
            "canonicalName": "RebaserV1.Operator",
            "members": [
              {
                "constant": false,
                "id": 75959,
                "mutability": "mutable",
                "name": "rewards",
                "nameLocation": "1605:7:193",
                "nodeType": "VariableDeclaration",
                "scope": 75964,
                "src": "1598:14:193",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint88",
                  "typeString": "uint88"
                },
                "typeName": {
                  "id": 75958,
                  "name": "uint88",
                  "nodeType": "ElementaryTypeName",
                  "src": "1598:6:193",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint88",
                    "typeString": "uint88"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 75961,
                "mutability": "mutable",
                "name": "pendingFee",
                "nameLocation": "1663:10:193",
                "nodeType": "VariableDeclaration",
                "scope": 75964,
                "src": "1656:17:193",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint80",
                  "typeString": "uint80"
                },
                "typeName": {
                  "id": 75960,
                  "name": "uint80",
                  "nodeType": "ElementaryTypeName",
                  "src": "1656:6:193",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 75963,
                "mutability": "mutable",
                "name": "slashCounter",
                "nameLocation": "1720:12:193",
                "nodeType": "VariableDeclaration",
                "scope": 75964,
                "src": "1713:19:193",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint88",
                  "typeString": "uint88"
                },
                "typeName": {
                  "id": 75962,
                  "name": "uint88",
                  "nodeType": "ElementaryTypeName",
                  "src": "1713:6:193",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint88",
                    "typeString": "uint88"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Operator",
            "nameLocation": "1578:8:193",
            "scope": 76966,
            "visibility": "public"
          },
          {
            "id": 75969,
            "nodeType": "VariableDeclaration",
            "src": "1775:45:193",
            "nodes": [],
            "constant": false,
            "functionSelector": "e28d4906",
            "mutability": "mutable",
            "name": "operators",
            "nameLocation": "1811:9:193",
            "scope": 76966,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Operator_$75964_storage_$",
              "typeString": "mapping(uint256 => struct RebaserV1.Operator)"
            },
            "typeName": {
              "id": 75968,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 75965,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1783:7:193",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1775:28:193",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Operator_$75964_storage_$",
                "typeString": "mapping(uint256 => struct RebaserV1.Operator)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 75967,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 75966,
                  "name": "Operator",
                  "nameLocations": [
                    "1794:8:193"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75964,
                  "src": "1794:8:193"
                },
                "referencedDeclaration": 75964,
                "src": "1794:8:193",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Operator_$75964_storage_ptr",
                  "typeString": "struct RebaserV1.Operator"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 75979,
            "nodeType": "EventDefinition",
            "src": "1829:116:193",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "170c902c4edcafb19ffe45aca96f240dcab1cc90c1f852ac1b9a8645bc105d07",
            "name": "FeeClaim",
            "nameLocation": "1835:8:193",
            "parameters": {
              "id": 75978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75971,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feeRecipient",
                  "nameLocation": "1852:12:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 75979,
                  "src": "1844:20:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1844:7:193",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75973,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1882:6:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 75979,
                  "src": "1866:22:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1866:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75975,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "receivedFlip",
                  "nameLocation": "1903:12:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 75979,
                  "src": "1890:25:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 75974,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1890:4:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75977,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "1933:10:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 75979,
                  "src": "1917:26:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1917:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1843:101:193"
            }
          },
          {
            "id": 75989,
            "nodeType": "EventDefinition",
            "src": "1951:127:193",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "4bebbc153c41fda68c534243bcaa82e56806356863b729e66205708d51cf5cce",
            "name": "RebaserRebase",
            "nameLocation": "1957:13:193",
            "parameters": {
              "id": 75988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75981,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "apr",
                  "nameLocation": "1987:3:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 75989,
                  "src": "1971:19:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75980,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1971:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75983,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "stateChainBalance",
                  "nameLocation": "2008:17:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 75989,
                  "src": "1992:33:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1992:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75985,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousSupply",
                  "nameLocation": "2035:14:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 75989,
                  "src": "2027:22:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2027:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75987,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newSupply",
                  "nameLocation": "2067:9:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 75989,
                  "src": "2051:25:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2051:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1970:107:193"
            }
          },
          {
            "id": 75993,
            "nodeType": "EventDefinition",
            "src": "2084:55:193",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "7c7727b8bcaa6689ef7201134e70a50faa03adb9d4cf96a905dffa8ea06047dd",
            "name": "NewAprThreshold",
            "nameLocation": "2090:15:193",
            "parameters": {
              "id": 75992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75991,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newAprThreshold",
                  "nameLocation": "2122:15:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 75993,
                  "src": "2106:31:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75990,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2106:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2105:33:193"
            }
          },
          {
            "id": 75997,
            "nodeType": "EventDefinition",
            "src": "2145:59:193",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "e4b0ed8ccd0452d63e30d46c6da86090092d34892df8b873ab5ba7b4aa060eee",
            "name": "NewSlashThreshold",
            "nameLocation": "2151:17:193",
            "parameters": {
              "id": 75996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75995,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newSlashThreshold",
                  "nameLocation": "2185:17:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 75997,
                  "src": "2169:33:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75994,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2169:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2168:35:193"
            }
          },
          {
            "id": 76001,
            "nodeType": "EventDefinition",
            "src": "2210:59:193",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "a2f43834a98afe051fecdf3ad4e6e49e5269d09038972451b2daf178cc7b46cc",
            "name": "NewRebaseInterval",
            "nameLocation": "2216:17:193",
            "parameters": {
              "id": 76000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75999,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newRebaseInterval",
                  "nameLocation": "2250:17:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76001,
                  "src": "2234:33:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75998,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2234:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2233:35:193"
            }
          },
          {
            "id": 76003,
            "nodeType": "ErrorDefinition",
            "src": "2281:22:193",
            "nodes": [],
            "errorSelector": "bb6e6ce1",
            "name": "RebaseTooSoon",
            "nameLocation": "2287:13:193",
            "parameters": {
              "id": 76002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2300:2:193"
            }
          },
          {
            "id": 76007,
            "nodeType": "ErrorDefinition",
            "src": "2309:30:193",
            "nodes": [],
            "errorSelector": "1ec6fce0",
            "name": "AprTooHigh",
            "nameLocation": "2315:10:193",
            "parameters": {
              "id": 76006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76005,
                  "mutability": "mutable",
                  "name": "apr",
                  "nameLocation": "2334:3:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76007,
                  "src": "2326:11:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76004,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2326:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2325:13:193"
            }
          },
          {
            "id": 76011,
            "nodeType": "ErrorDefinition",
            "src": "2345:46:193",
            "nodes": [],
            "errorSelector": "e27d5439",
            "name": "SupplyDecreaseTooHigh",
            "nameLocation": "2351:21:193",
            "parameters": {
              "id": 76010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76009,
                  "mutability": "mutable",
                  "name": "decrease",
                  "nameLocation": "2381:8:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76011,
                  "src": "2373:16:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2373:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2372:18:193"
            }
          },
          {
            "id": 76013,
            "nodeType": "ErrorDefinition",
            "src": "2397:37:193",
            "nodes": [],
            "errorSelector": "08d8296f",
            "name": "ValidatorAddressesDoNotMatch",
            "nameLocation": "2403:28:193",
            "parameters": {
              "id": 76012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2431:2:193"
            }
          },
          {
            "id": 76015,
            "nodeType": "ErrorDefinition",
            "src": "2440:30:193",
            "nodes": [],
            "errorSelector": "125c95b9",
            "name": "InputLengthsMustMatch",
            "nameLocation": "2446:21:193",
            "parameters": {
              "id": 76014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2467:2:193"
            }
          },
          {
            "id": 76017,
            "nodeType": "ErrorDefinition",
            "src": "2476:26:193",
            "nodes": [],
            "errorSelector": "968af5a3",
            "name": "ExcessiveFeeClaim",
            "nameLocation": "2482:17:193",
            "parameters": {
              "id": 76016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2499:2:193"
            }
          },
          {
            "id": 76019,
            "nodeType": "ErrorDefinition",
            "src": "2508:33:193",
            "nodes": [],
            "errorSelector": "21d24b12",
            "name": "NotFeeRecipientOrManager",
            "nameLocation": "2514:24:193",
            "parameters": {
              "id": 76018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2538:2:193"
            }
          },
          {
            "id": 76026,
            "nodeType": "FunctionDefinition",
            "src": "2549:56:193",
            "nodes": [],
            "body": {
              "id": 76025,
              "nodeType": "Block",
              "src": "2564:41:193",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 76022,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46014,
                      "src": "2575:20:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 76023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2575:22:193",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76024,
                  "nodeType": "ExpressionStatement",
                  "src": "2575:22:193"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 76020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2561:2:193"
            },
            "returnParameters": {
              "id": 76021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2564:0:193"
            },
            "scope": 76966,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 76140,
            "nodeType": "FunctionDefinition",
            "src": "2956:889:193",
            "nodes": [],
            "body": {
              "id": 76139,
              "nodeType": "Block",
              "src": "3105:740:193",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 76048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76042,
                      "name": "flip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75954,
                      "src": "3116:4:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$57630",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 76044,
                            "name": "addresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76031,
                            "src": "3130:9:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$8_calldata_ptr",
                              "typeString": "address[8] calldata"
                            }
                          },
                          "id": 76046,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 76045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3140:1:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3130:12:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 76043,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57630,
                        "src": "3123:6:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$57630_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 76047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3123:20:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$57630",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3116:27:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$57630",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 76049,
                  "nodeType": "ExpressionStatement",
                  "src": "3116:27:193"
                },
                {
                  "expression": {
                    "id": 76056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76050,
                      "name": "wrappedBurnerProxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75945,
                      "src": "3154:18:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BurnerV1_$74564",
                        "typeString": "contract BurnerV1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 76052,
                            "name": "addresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76031,
                            "src": "3184:9:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$8_calldata_ptr",
                              "typeString": "address[8] calldata"
                            }
                          },
                          "id": 76054,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 76053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3194:1:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3184:12:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 76051,
                        "name": "BurnerV1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74564,
                        "src": "3175:8:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BurnerV1_$74564_$",
                          "typeString": "type(contract BurnerV1)"
                        }
                      },
                      "id": 76055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3175:22:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BurnerV1_$74564",
                        "typeString": "contract BurnerV1"
                      }
                    },
                    "src": "3154:43:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BurnerV1_$74564",
                      "typeString": "contract BurnerV1"
                    }
                  },
                  "id": 76057,
                  "nodeType": "ExpressionStatement",
                  "src": "3154:43:193"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 76059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3256:1:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "baseExpression": {
                          "id": 76060,
                          "name": "addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76031,
                          "src": "3259:9:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$8_calldata_ptr",
                            "typeString": "address[8] calldata"
                          }
                        },
                        "id": 76062,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 76061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3269:1:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3259:12:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 76058,
                      "name": "__AccessControlDefaultAdminRules_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44248,
                      "src": "3218:37:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint48_$_t_address_$returns$__$",
                        "typeString": "function (uint48,address)"
                      }
                    },
                    "id": 76063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3218:54:193",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76064,
                  "nodeType": "ExpressionStatement",
                  "src": "3218:54:193"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76066,
                        "name": "MANAGER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75885,
                        "src": "3294:12:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 76067,
                          "name": "addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76031,
                          "src": "3308:9:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$8_calldata_ptr",
                            "typeString": "address[8] calldata"
                          }
                        },
                        "id": 76069,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 76068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3318:1:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3308:12:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 76065,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        44455
                      ],
                      "referencedDeclaration": 44455,
                      "src": "3283:10:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 76070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3283:38:193",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76071,
                  "nodeType": "ExpressionStatement",
                  "src": "3283:38:193"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76073,
                        "name": "MANAGER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75885,
                        "src": "3343:12:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 76074,
                          "name": "addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76031,
                          "src": "3357:9:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$8_calldata_ptr",
                            "typeString": "address[8] calldata"
                          }
                        },
                        "id": 76076,
                        "indexExpression": {
                          "hexValue": "34",
                          "id": 76075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3367:1:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3357:12:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 76072,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        44455
                      ],
                      "referencedDeclaration": 44455,
                      "src": "3332:10:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 76077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3332:38:193",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76078,
                  "nodeType": "ExpressionStatement",
                  "src": "3332:38:193"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76080,
                        "name": "FEE_RECIPIENT_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75890,
                        "src": "3392:18:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 76081,
                          "name": "addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76031,
                          "src": "3412:9:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$8_calldata_ptr",
                            "typeString": "address[8] calldata"
                          }
                        },
                        "id": 76083,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 76082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3422:1:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3412:12:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 76079,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        44455
                      ],
                      "referencedDeclaration": 44455,
                      "src": "3381:10:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 76084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3381:44:193",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76085,
                  "nodeType": "ExpressionStatement",
                  "src": "3381:44:193"
                },
                {
                  "expression": {
                    "id": 76092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76086,
                      "name": "stflip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75957,
                      "src": "3438:6:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_stFlip_$73252",
                        "typeString": "contract stFlip"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 76088,
                            "name": "addresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76031,
                            "src": "3454:9:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$8_calldata_ptr",
                              "typeString": "address[8] calldata"
                            }
                          },
                          "id": 76090,
                          "indexExpression": {
                            "hexValue": "35",
                            "id": 76089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3464:1:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3454:12:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 76087,
                        "name": "stFlip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73252,
                        "src": "3447:6:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_stFlip_$73252_$",
                          "typeString": "type(contract stFlip)"
                        }
                      },
                      "id": 76091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3447:20:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_stFlip_$73252",
                        "typeString": "contract stFlip"
                      }
                    },
                    "src": "3438:29:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_stFlip_$73252",
                      "typeString": "contract stFlip"
                    }
                  },
                  "id": 76093,
                  "nodeType": "ExpressionStatement",
                  "src": "3438:29:193"
                },
                {
                  "expression": {
                    "id": 76100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76094,
                      "name": "wrappedOutputProxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75948,
                      "src": "3478:18:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OutputV1_$75869",
                        "typeString": "contract OutputV1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 76096,
                            "name": "addresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76031,
                            "src": "3508:9:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$8_calldata_ptr",
                              "typeString": "address[8] calldata"
                            }
                          },
                          "id": 76098,
                          "indexExpression": {
                            "hexValue": "36",
                            "id": 76097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3518:1:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3508:12:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 76095,
                        "name": "OutputV1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75869,
                        "src": "3499:8:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OutputV1_$75869_$",
                          "typeString": "type(contract OutputV1)"
                        }
                      },
                      "id": 76099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3499:22:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OutputV1_$75869",
                        "typeString": "contract OutputV1"
                      }
                    },
                    "src": "3478:43:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OutputV1_$75869",
                      "typeString": "contract OutputV1"
                    }
                  },
                  "id": 76101,
                  "nodeType": "ExpressionStatement",
                  "src": "3478:43:193"
                },
                {
                  "expression": {
                    "id": 76108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76102,
                      "name": "wrappedMinterProxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75951,
                      "src": "3532:18:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MinterV1_$74683",
                        "typeString": "contract MinterV1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 76104,
                            "name": "addresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76031,
                            "src": "3562:9:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$8_calldata_ptr",
                              "typeString": "address[8] calldata"
                            }
                          },
                          "id": 76106,
                          "indexExpression": {
                            "hexValue": "37",
                            "id": 76105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3572:1:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_7_by_1",
                              "typeString": "int_const 7"
                            },
                            "value": "7"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3562:12:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 76103,
                        "name": "MinterV1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74683,
                        "src": "3553:8:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MinterV1_$74683_$",
                          "typeString": "type(contract MinterV1)"
                        }
                      },
                      "id": 76107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3553:22:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MinterV1_$74683",
                        "typeString": "contract MinterV1"
                      }
                    },
                    "src": "3532:43:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MinterV1_$74683",
                      "typeString": "contract MinterV1"
                    }
                  },
                  "id": 76109,
                  "nodeType": "ExpressionStatement",
                  "src": "3532:43:193"
                },
                {
                  "expression": {
                    "id": 76115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76110,
                      "name": "slashThresholdBps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75934,
                      "src": "3588:17:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 76113,
                          "name": "slashThresholdBps_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76035,
                          "src": "3626:18:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 76111,
                          "name": "SafeCast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64104,
                          "src": "3608:8:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeCast_$64104_$",
                            "typeString": "type(library SafeCast)"
                          }
                        },
                        "id": 76112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3617:8:193",
                        "memberName": "toUint16",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63316,
                        "src": "3608:17:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint16_$",
                          "typeString": "function (uint256) pure returns (uint16)"
                        }
                      },
                      "id": 76114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3608:37:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "3588:57:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 76116,
                  "nodeType": "ExpressionStatement",
                  "src": "3588:57:193"
                },
                {
                  "expression": {
                    "id": 76122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76117,
                      "name": "aprThresholdBps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75932,
                      "src": "3656:15:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 76120,
                          "name": "aprThresholdBps_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76033,
                          "src": "3692:16:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 76118,
                          "name": "SafeCast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64104,
                          "src": "3674:8:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeCast_$64104_$",
                            "typeString": "type(library SafeCast)"
                          }
                        },
                        "id": 76119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3683:8:193",
                        "memberName": "toUint16",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63316,
                        "src": "3674:17:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint16_$",
                          "typeString": "function (uint256) pure returns (uint16)"
                        }
                      },
                      "id": 76121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3674:35:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "3656:53:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 76123,
                  "nodeType": "ExpressionStatement",
                  "src": "3656:53:193"
                },
                {
                  "expression": {
                    "id": 76129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76124,
                      "name": "rebaseInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75938,
                      "src": "3720:14:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 76127,
                          "name": "rebaseInterval_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76037,
                          "src": "3755:15:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 76125,
                          "name": "SafeCast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64104,
                          "src": "3737:8:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeCast_$64104_$",
                            "typeString": "type(library SafeCast)"
                          }
                        },
                        "id": 76126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3746:8:193",
                        "memberName": "toUint32",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63266,
                        "src": "3737:17:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$",
                          "typeString": "function (uint256) pure returns (uint32)"
                        }
                      },
                      "id": 76128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3737:34:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3720:51:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 76130,
                  "nodeType": "ExpressionStatement",
                  "src": "3720:51:193"
                },
                {
                  "expression": {
                    "id": 76137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76131,
                      "name": "lastRebaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75936,
                      "src": "3786:14:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 76134,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3821:5:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 76135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3827:9:193",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3821:15:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 76132,
                          "name": "SafeCast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64104,
                          "src": "3803:8:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeCast_$64104_$",
                            "typeString": "type(library SafeCast)"
                          }
                        },
                        "id": 76133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3812:8:193",
                        "memberName": "toUint32",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63266,
                        "src": "3803:17:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$",
                          "typeString": "function (uint256) pure returns (uint32)"
                        }
                      },
                      "id": 76136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3803:34:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3786:51:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 76138,
                  "nodeType": "ExpressionStatement",
                  "src": "3786:51:193"
                }
              ]
            },
            "documentation": {
              "id": 76027,
              "nodeType": "StructuredDocumentation",
              "src": "2615:335:193",
              "text": " @notice Initializes the contract\n @param addresses The addresses of the contracts to use: flip, burnerProxy, gov, feeRecipient, manager, stflip, outputProxy\n @param aprThresholdBps_ The amount of bps to set apr threshold to\n @param rebaseInterval_ The amount of time in seconds between rebases"
            },
            "functionSelector": "43a1c547",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 76040,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 76039,
                  "name": "initializer",
                  "nameLocations": [
                    "3086:11:193"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45935,
                  "src": "3086:11:193"
                },
                "nodeType": "ModifierInvocation",
                "src": "3086:11:193"
              }
            ],
            "name": "initialize",
            "nameLocation": "2965:10:193",
            "parameters": {
              "id": 76038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76031,
                  "mutability": "mutable",
                  "name": "addresses",
                  "nameLocation": "2996:9:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76140,
                  "src": "2976:29:193",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$8_calldata_ptr",
                    "typeString": "address[8]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 76028,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2976:7:193",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 76030,
                    "length": {
                      "hexValue": "38",
                      "id": 76029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2984:1:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8_by_1",
                        "typeString": "int_const 8"
                      },
                      "value": "8"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2976:10:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$8_storage_ptr",
                      "typeString": "address[8]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76033,
                  "mutability": "mutable",
                  "name": "aprThresholdBps_",
                  "nameLocation": "3015:16:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76140,
                  "src": "3007:24:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3007:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76035,
                  "mutability": "mutable",
                  "name": "slashThresholdBps_",
                  "nameLocation": "3041:18:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76140,
                  "src": "3033:26:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3033:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76037,
                  "mutability": "mutable",
                  "name": "rebaseInterval_",
                  "nameLocation": "3069:15:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76140,
                  "src": "3061:23:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3061:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2975:110:193"
            },
            "returnParameters": {
              "id": 76041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3105:0:193"
            },
            "scope": 76966,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 76161,
            "nodeType": "FunctionDefinition",
            "src": "4048:215:193",
            "nodes": [],
            "body": {
              "id": 76160,
              "nodeType": "Block",
              "src": "4140:123:193",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 76154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76149,
                      "name": "aprThresholdBps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75932,
                      "src": "4151:15:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 76152,
                          "name": "aprThresholdBps_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76143,
                          "src": "4187:16:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 76150,
                          "name": "SafeCast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64104,
                          "src": "4169:8:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeCast_$64104_$",
                            "typeString": "type(library SafeCast)"
                          }
                        },
                        "id": 76151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4178:8:193",
                        "memberName": "toUint16",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63316,
                        "src": "4169:17:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint16_$",
                          "typeString": "function (uint256) pure returns (uint16)"
                        }
                      },
                      "id": 76153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4169:35:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "4151:53:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 76155,
                  "nodeType": "ExpressionStatement",
                  "src": "4151:53:193"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 76157,
                        "name": "aprThresholdBps_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76143,
                        "src": "4238:16:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76156,
                      "name": "NewAprThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75993,
                      "src": "4222:15:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 76158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4222:33:193",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76159,
                  "nodeType": "EmitStatement",
                  "src": "4217:38:193"
                }
              ]
            },
            "documentation": {
              "id": 76141,
              "nodeType": "StructuredDocumentation",
              "src": "3853:189:193",
              "text": "Sets the APR threshold in bps\n @param aprThresholdBps_ The amount of bps to set apr threshold to\n @dev If the rebase exceeds this APR, then the rebase will revert"
            },
            "functionSelector": "064d9d3d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 76146,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44960,
                    "src": "4120:18:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 76147,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 76145,
                  "name": "onlyRole",
                  "nameLocations": [
                    "4111:8:193"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44971,
                  "src": "4111:8:193"
                },
                "nodeType": "ModifierInvocation",
                "src": "4111:28:193"
              }
            ],
            "name": "setAprThresholdBps",
            "nameLocation": "4057:18:193",
            "parameters": {
              "id": 76144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76143,
                  "mutability": "mutable",
                  "name": "aprThresholdBps_",
                  "nameLocation": "4084:16:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76161,
                  "src": "4076:24:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4076:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4075:26:193"
            },
            "returnParameters": {
              "id": 76148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4140:0:193"
            },
            "scope": 76966,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76182,
            "nodeType": "FunctionDefinition",
            "src": "4572:227:193",
            "nodes": [],
            "body": {
              "id": 76181,
              "nodeType": "Block",
              "src": "4668:131:193",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 76175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76170,
                      "name": "slashThresholdBps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75934,
                      "src": "4679:17:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 76173,
                          "name": "slashThresholdBps_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76164,
                          "src": "4717:18:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 76171,
                          "name": "SafeCast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64104,
                          "src": "4699:8:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeCast_$64104_$",
                            "typeString": "type(library SafeCast)"
                          }
                        },
                        "id": 76172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4708:8:193",
                        "memberName": "toUint16",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63316,
                        "src": "4699:17:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint16_$",
                          "typeString": "function (uint256) pure returns (uint16)"
                        }
                      },
                      "id": 76174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4699:37:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "4679:57:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 76176,
                  "nodeType": "ExpressionStatement",
                  "src": "4679:57:193"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 76178,
                        "name": "slashThresholdBps_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76164,
                        "src": "4772:18:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76177,
                      "name": "NewSlashThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75997,
                      "src": "4754:17:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 76179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4754:37:193",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76180,
                  "nodeType": "EmitStatement",
                  "src": "4749:42:193"
                }
              ]
            },
            "documentation": {
              "id": 76162,
              "nodeType": "StructuredDocumentation",
              "src": "4271:295:193",
              "text": "Sets slash threshold in bps\n @param slashThresholdBps_ The number of bps to set slash threshold to\n @dev If the supply decreases by this threshold, then the rebase will revert\n @dev This is different from APR threshold because slashes would be much more serious"
            },
            "functionSelector": "25837385",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 76167,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44960,
                    "src": "4648:18:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 76168,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 76166,
                  "name": "onlyRole",
                  "nameLocations": [
                    "4639:8:193"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44971,
                  "src": "4639:8:193"
                },
                "nodeType": "ModifierInvocation",
                "src": "4639:28:193"
              }
            ],
            "name": "setSlashThresholdBps",
            "nameLocation": "4581:20:193",
            "parameters": {
              "id": 76165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76164,
                  "mutability": "mutable",
                  "name": "slashThresholdBps_",
                  "nameLocation": "4610:18:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76182,
                  "src": "4602:26:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4602:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4601:28:193"
            },
            "returnParameters": {
              "id": 76169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4668:0:193"
            },
            "scope": 76966,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76203,
            "nodeType": "FunctionDefinition",
            "src": "5000:212:193",
            "nodes": [],
            "body": {
              "id": 76202,
              "nodeType": "Block",
              "src": "5090:122:193",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 76196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76191,
                      "name": "rebaseInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75938,
                      "src": "5101:14:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 76194,
                          "name": "rebaseInterval_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76185,
                          "src": "5136:15:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 76192,
                          "name": "SafeCast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64104,
                          "src": "5118:8:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeCast_$64104_$",
                            "typeString": "type(library SafeCast)"
                          }
                        },
                        "id": 76193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5127:8:193",
                        "memberName": "toUint32",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63266,
                        "src": "5118:17:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$",
                          "typeString": "function (uint256) pure returns (uint32)"
                        }
                      },
                      "id": 76195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5118:34:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "5101:51:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 76197,
                  "nodeType": "ExpressionStatement",
                  "src": "5101:51:193"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 76199,
                        "name": "rebaseInterval_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76185,
                        "src": "5188:15:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76198,
                      "name": "NewRebaseInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76001,
                      "src": "5170:17:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 76200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5170:34:193",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76201,
                  "nodeType": "EmitStatement",
                  "src": "5165:39:193"
                }
              ]
            },
            "documentation": {
              "id": 76183,
              "nodeType": "StructuredDocumentation",
              "src": "4807:187:193",
              "text": "Sets minimum rebase interval\n @param rebaseInterval_ The minimum unix time between rebases\n @dev If a rebase occurs before this interval elapses, it will revert"
            },
            "functionSelector": "ef037fb9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 76188,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44960,
                    "src": "5070:18:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 76189,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 76187,
                  "name": "onlyRole",
                  "nameLocations": [
                    "5061:8:193"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44971,
                  "src": "5061:8:193"
                },
                "nodeType": "ModifierInvocation",
                "src": "5061:28:193"
              }
            ],
            "name": "setRebaseInterval",
            "nameLocation": "5009:17:193",
            "parameters": {
              "id": 76186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76185,
                  "mutability": "mutable",
                  "name": "rebaseInterval_",
                  "nameLocation": "5035:15:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76203,
                  "src": "5027:23:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5027:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5026:25:193"
            },
            "returnParameters": {
              "id": 76190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5090:0:193"
            },
            "scope": 76966,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76311,
            "nodeType": "FunctionDefinition",
            "src": "6350:1048:193",
            "nodes": [],
            "body": {
              "id": 76310,
              "nodeType": "Block",
              "src": "6496:902:193",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    76221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76221,
                      "mutability": "mutable",
                      "name": "timeElapsed",
                      "nameLocation": "6515:11:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76310,
                      "src": "6507:19:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76220,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6507:7:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76226,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 76225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 76222,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6529:5:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 76223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6535:9:193",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6529:15:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 76224,
                      "name": "lastRebaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75936,
                      "src": "6547:14:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "6529:32:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6507:54:193"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 76229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 76227,
                      "name": "timeElapsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76221,
                      "src": "6576:11:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 76228,
                      "name": "rebaseInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75938,
                      "src": "6590:14:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "6576:28:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76233,
                  "nodeType": "IfStatement",
                  "src": "6572:56:193",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 76230,
                        "name": "RebaseTooSoon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76003,
                        "src": "6613:13:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 76231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6613:15:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 76232,
                    "nodeType": "RevertStatement",
                    "src": "6606:22:193"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 76238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 76234,
                        "name": "validatorBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76209,
                        "src": "6643:17:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 76235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6661:6:193",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6643:24:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 76236,
                        "name": "addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76212,
                        "src": "6671:9:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      "id": 76237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6681:6:193",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6671:16:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6643:44:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76242,
                  "nodeType": "IfStatement",
                  "src": "6639:80:193",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 76239,
                        "name": "InputLengthsMustMatch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76015,
                        "src": "6696:21:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 76240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6696:23:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 76241,
                    "nodeType": "RevertStatement",
                    "src": "6689:30:193"
                  }
                },
                {
                  "assignments": [
                    76244,
                    76246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76244,
                      "mutability": "mutable",
                      "name": "stateChainBalance",
                      "nameLocation": "6741:17:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76310,
                      "src": "6733:25:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76243,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6733:7:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 76246,
                      "mutability": "mutable",
                      "name": "totalOperatorPendingFee_",
                      "nameLocation": "6768:24:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76310,
                      "src": "6760:32:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76245,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6760:7:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76252,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 76248,
                        "name": "validatorBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76209,
                        "src": "6813:17:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 76249,
                        "name": "addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76212,
                        "src": "6832:9:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 76250,
                        "name": "takeFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76214,
                        "src": "6843:7:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 76247,
                      "name": "_updateOperators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76453,
                      "src": "6796:16:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256[] calldata,bytes32[] calldata,bool) returns (uint256,uint256)"
                      }
                    },
                    "id": 76251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6796:55:193",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6732:119:193"
                },
                {
                  "assignments": [
                    76254
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76254,
                      "mutability": "mutable",
                      "name": "currentSupply",
                      "nameLocation": "6870:13:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76310,
                      "src": "6862:21:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76253,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6862:7:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76258,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 76255,
                        "name": "stflip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75957,
                        "src": "6886:6:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_stFlip_$73252",
                          "typeString": "contract stFlip"
                        }
                      },
                      "id": 76256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6893:11:193",
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73150,
                      "src": "6886:18:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 76257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6886:20:193",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6862:44:193"
                },
                {
                  "assignments": [
                    76260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76260,
                      "mutability": "mutable",
                      "name": "newSupply",
                      "nameLocation": "6927:9:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76310,
                      "src": "6919:17:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76259,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6919:7:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76278,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 76277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 76275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 76273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 76269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 76261,
                            "name": "stateChainBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76244,
                            "src": "6939:17:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 76266,
                                    "name": "wrappedOutputProxy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 75948,
                                    "src": "6982:18:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_OutputV1_$75869",
                                      "typeString": "contract OutputV1"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_OutputV1_$75869",
                                      "typeString": "contract OutputV1"
                                    }
                                  ],
                                  "id": 76265,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6974:7:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 76264,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6974:7:193",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 76267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6974:27:193",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 76262,
                                "name": "flip",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75954,
                                "src": "6959:4:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$57630",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 76263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6964:9:193",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 57587,
                              "src": "6959:14:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 76268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6959:43:193",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6939:63:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 76270,
                              "name": "wrappedBurnerProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75945,
                              "src": "7005:18:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BurnerV1_$74564",
                                "typeString": "contract BurnerV1"
                              }
                            },
                            "id": 76271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7024:17:193",
                            "memberName": "totalPendingBurns",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 74302,
                            "src": "7005:36:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 76272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7005:38:193",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6939:104:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 76274,
                        "name": "servicePendingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75940,
                        "src": "7046:17:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "src": "6939:124:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 76276,
                      "name": "totalOperatorPendingFee_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76246,
                      "src": "7066:24:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6939:151:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6919:171:193"
                },
                {
                  "assignments": [
                    76280
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76280,
                      "mutability": "mutable",
                      "name": "apr",
                      "nameLocation": "7109:3:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76310,
                      "src": "7101:11:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76279,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7101:7:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76286,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 76282,
                        "name": "timeElapsed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76221,
                        "src": "7137:11:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 76283,
                        "name": "currentSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76254,
                        "src": "7150:13:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 76284,
                        "name": "newSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76260,
                        "src": "7165:9:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76281,
                      "name": "_validateSupplyChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76727,
                      "src": "7115:21:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 76285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7115:60:193",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7101:74:193"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76290,
                        "name": "epoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76206,
                        "src": "7214:5:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 76291,
                        "name": "newSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76260,
                        "src": "7221:9:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 76292,
                        "name": "rebaseInterval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75938,
                        "src": "7232:14:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 76287,
                        "name": "stflip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75957,
                        "src": "7196:6:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_stFlip_$73252",
                          "typeString": "contract stFlip"
                        }
                      },
                      "id": 76289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7203:10:193",
                      "memberName": "syncSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72891,
                      "src": "7196:17:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256,uint256) external returns (bool)"
                      }
                    },
                    "id": 76293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7196:51:193",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76294,
                  "nodeType": "ExpressionStatement",
                  "src": "7196:51:193"
                },
                {
                  "expression": {
                    "id": 76301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76295,
                      "name": "lastRebaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75936,
                      "src": "7258:14:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 76298,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7293:5:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 76299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7299:9:193",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7293:15:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 76296,
                          "name": "SafeCast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64104,
                          "src": "7275:8:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeCast_$64104_$",
                            "typeString": "type(library SafeCast)"
                          }
                        },
                        "id": 76297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7284:8:193",
                        "memberName": "toUint32",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63266,
                        "src": "7275:17:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$",
                          "typeString": "function (uint256) pure returns (uint32)"
                        }
                      },
                      "id": 76300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7275:34:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "7258:51:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 76302,
                  "nodeType": "ExpressionStatement",
                  "src": "7258:51:193"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 76304,
                        "name": "apr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76280,
                        "src": "7341:3:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 76305,
                        "name": "stateChainBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76244,
                        "src": "7346:17:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 76306,
                        "name": "currentSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76254,
                        "src": "7365:13:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 76307,
                        "name": "newSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76260,
                        "src": "7380:9:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76303,
                      "name": "RebaserRebase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75989,
                      "src": "7327:13:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 76308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7327:63:193",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76309,
                  "nodeType": "EmitStatement",
                  "src": "7322:68:193"
                }
              ]
            },
            "documentation": {
              "id": 76204,
              "nodeType": "StructuredDocumentation",
              "src": "5220:1124:193",
              "text": "Calculates the new rebase factor based on the state chain validator balance\n and whether or not a fee will be taken\n @param epoch The epoch number of the rebase\n @param validatorBalances The balances of the state chain validators\n @param addresses The addresses of the state chain validators\n @param takeFee Whether or not to claim fee\n @dev There is no oracle support for Chainflip yet so we must run the oracle. We have an offchain service that\n queries the countable validators on the Output address and submits the addresses along with their balances to this \n address. There is `aprThresholdBps` and `slashThresholdBps` to ensure that the oracle report is within reasonable bounds.\n `_updateOperators` calls `_updateOperator` for each operator which changes the `rewards`, `slashCounter`, and `pendingFee`\n in accordance with the balance report. We might disable `takeFee`\n if there is a slash we need to make up for. Its also worth noting how `pendingFee` is a piece of the pool,\n in the same way that pending burns are. "
            },
            "functionSelector": "f063b32d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 76217,
                    "name": "MANAGER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75885,
                    "src": "6482:12:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 76218,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 76216,
                  "name": "onlyRole",
                  "nameLocations": [
                    "6473:8:193"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44971,
                  "src": "6473:8:193"
                },
                "nodeType": "ModifierInvocation",
                "src": "6473:22:193"
              }
            ],
            "name": "rebase",
            "nameLocation": "6359:6:193",
            "parameters": {
              "id": 76215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76206,
                  "mutability": "mutable",
                  "name": "epoch",
                  "nameLocation": "6375:5:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76311,
                  "src": "6367:13:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6367:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76209,
                  "mutability": "mutable",
                  "name": "validatorBalances",
                  "nameLocation": "6401:17:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76311,
                  "src": "6382:36:193",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 76207,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6382:7:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 76208,
                    "nodeType": "ArrayTypeName",
                    "src": "6382:9:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76212,
                  "mutability": "mutable",
                  "name": "addresses",
                  "nameLocation": "6439:9:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76311,
                  "src": "6420:28:193",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 76210,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6420:7:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 76211,
                    "nodeType": "ArrayTypeName",
                    "src": "6420:9:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76214,
                  "mutability": "mutable",
                  "name": "takeFee",
                  "nameLocation": "6455:7:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76311,
                  "src": "6450:12:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 76213,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6450:4:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6366:97:193"
            },
            "returnParameters": {
              "id": 76219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6496:0:193"
            },
            "scope": 76966,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76453,
            "nodeType": "FunctionDefinition",
            "src": "8225:1367:193",
            "nodes": [],
            "body": {
              "id": 76452,
              "nodeType": "Block",
              "src": "8369:1223:193",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    76328
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76328,
                      "mutability": "mutable",
                      "name": "stateChainBalance",
                      "nameLocation": "8388:17:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76452,
                      "src": "8380:25:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76327,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8380:7:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76329,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8380:25:193"
                },
                {
                  "assignments": [
                    76331
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76331,
                      "mutability": "mutable",
                      "name": "totalOperatorPendingFee_",
                      "nameLocation": "8424:24:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76452,
                      "src": "8416:32:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76330,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8416:7:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76332,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8416:32:193"
                },
                {
                  "assignments": [
                    76334
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76334,
                      "mutability": "mutable",
                      "name": "operatorId",
                      "nameLocation": "8467:10:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76452,
                      "src": "8459:18:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76333,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8459:7:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76335,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8459:18:193"
                },
                {
                  "assignments": [
                    76341,
                    76343,
                    76345
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76341,
                      "mutability": "mutable",
                      "name": "validatorInfo",
                      "nameLocation": "8523:13:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76452,
                      "src": "8491:45:193",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ValidatorInfo_$74723_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OutputV1.ValidatorInfo[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 76339,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 76338,
                            "name": "OutputV1.ValidatorInfo",
                            "nameLocations": [
                              "8491:8:193",
                              "8500:13:193"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 74723,
                            "src": "8491:22:193"
                          },
                          "referencedDeclaration": 74723,
                          "src": "8491:22:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidatorInfo_$74723_storage_ptr",
                            "typeString": "struct OutputV1.ValidatorInfo"
                          }
                        },
                        "id": 76340,
                        "nodeType": "ArrayTypeName",
                        "src": "8491:24:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ValidatorInfo_$74723_storage_$dyn_storage_ptr",
                          "typeString": "struct OutputV1.ValidatorInfo[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 76343,
                      "mutability": "mutable",
                      "name": "operatorCount",
                      "nameLocation": "8546:13:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76452,
                      "src": "8538:21:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76342,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8538:7:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 76345,
                      "mutability": "mutable",
                      "name": "addressesEqual",
                      "nameLocation": "8566:14:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76452,
                      "src": "8561:19:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 76344,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8561:4:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76350,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 76348,
                        "name": "addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76318,
                        "src": "8620:9:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 76346,
                        "name": "wrappedOutputProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75948,
                        "src": "8584:18:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OutputV1_$75869",
                          "typeString": "contract OutputV1"
                        }
                      },
                      "id": 76347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8603:16:193",
                      "memberName": "getValidatorInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75774,
                      "src": "8584:35:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_struct$_ValidatorInfo_$74723_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_bool_$",
                        "typeString": "function (bytes32[] memory) view external returns (struct OutputV1.ValidatorInfo memory[] memory,uint256,bool)"
                      }
                    },
                    "id": 76349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8584:46:193",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_struct$_ValidatorInfo_$74723_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(struct OutputV1.ValidatorInfo memory[] memory,uint256,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8490:140:193"
                },
                {
                  "assignments": [
                    76355
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76355,
                      "mutability": "mutable",
                      "name": "operatorBalances",
                      "nameLocation": "8658:16:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76452,
                      "src": "8641:33:193",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 76353,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8641:7:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 76354,
                        "nodeType": "ArrayTypeName",
                        "src": "8641:9:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76361,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 76359,
                        "name": "operatorCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76343,
                        "src": "8691:13:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8677:13:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 76356,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8681:7:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 76357,
                        "nodeType": "ArrayTypeName",
                        "src": "8681:9:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 76360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8677:28:193",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8641:64:193"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 76364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 76362,
                      "name": "addressesEqual",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76345,
                      "src": "8722:14:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 76363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8740:5:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "8722:23:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76368,
                  "nodeType": "IfStatement",
                  "src": "8718:66:193",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 76365,
                        "name": "ValidatorAddressesDoNotMatch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76013,
                        "src": "8754:28:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 76366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8754:30:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 76367,
                    "nodeType": "RevertStatement",
                    "src": "8747:37:193"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 76373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 76369,
                        "name": "validatorBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76315,
                        "src": "8799:17:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 76370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8817:6:193",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8799:24:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 76371,
                        "name": "addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76318,
                        "src": "8827:9:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      "id": 76372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8837:6:193",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8827:16:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8799:44:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76377,
                  "nodeType": "IfStatement",
                  "src": "8795:80:193",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 76374,
                        "name": "InputLengthsMustMatch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76015,
                        "src": "8852:21:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 76375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8852:23:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 76376,
                    "nodeType": "RevertStatement",
                    "src": "8845:30:193"
                  }
                },
                {
                  "assignments": [
                    76379
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76379,
                      "mutability": "mutable",
                      "name": "validatorInfoLength",
                      "nameLocation": "8896:19:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76452,
                      "src": "8888:27:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76378,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8888:7:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76382,
                  "initialValue": {
                    "expression": {
                      "id": 76380,
                      "name": "validatorInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76341,
                      "src": "8918:13:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ValidatorInfo_$74723_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OutputV1.ValidatorInfo memory[] memory"
                      }
                    },
                    "id": 76381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8932:6:193",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "8918:20:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8888:50:193"
                },
                {
                  "body": {
                    "id": 76417,
                    "nodeType": "Block",
                    "src": "8992:240:193",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 76397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 76392,
                                "name": "validatorInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76341,
                                "src": "9011:13:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ValidatorInfo_$74723_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct OutputV1.ValidatorInfo memory[] memory"
                                }
                              },
                              "id": 76394,
                              "indexExpression": {
                                "id": 76393,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76384,
                                "src": "9025:1:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9011:16:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValidatorInfo_$74723_memory_ptr",
                                "typeString": "struct OutputV1.ValidatorInfo memory"
                              }
                            },
                            "id": 76395,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9028:12:193",
                            "memberName": "trackBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 74722,
                            "src": "9011:29:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 76396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9044:4:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "9011:37:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 76416,
                        "nodeType": "IfStatement",
                        "src": "9007:207:193",
                        "trueBody": {
                          "id": 76415,
                          "nodeType": "Block",
                          "src": "9050:164:193",
                          "statements": [
                            {
                              "expression": {
                                "id": 76407,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 76398,
                                    "name": "operatorBalances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76355,
                                    "src": "9069:16:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 76403,
                                  "indexExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 76399,
                                        "name": "validatorInfo",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 76341,
                                        "src": "9086:13:193",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_ValidatorInfo_$74723_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct OutputV1.ValidatorInfo memory[] memory"
                                        }
                                      },
                                      "id": 76401,
                                      "indexExpression": {
                                        "id": 76400,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 76384,
                                        "src": "9100:1:193",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9086:16:193",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ValidatorInfo_$74723_memory_ptr",
                                        "typeString": "struct OutputV1.ValidatorInfo memory"
                                      }
                                    },
                                    "id": 76402,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9103:10:193",
                                    "memberName": "operatorId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 74720,
                                    "src": "9086:27:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9069:45:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 76404,
                                    "name": "validatorBalances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76315,
                                    "src": "9118:17:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                      "typeString": "uint256[] calldata"
                                    }
                                  },
                                  "id": 76406,
                                  "indexExpression": {
                                    "id": 76405,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76384,
                                    "src": "9136:1:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9118:20:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9069:69:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 76408,
                              "nodeType": "ExpressionStatement",
                              "src": "9069:69:193"
                            },
                            {
                              "expression": {
                                "id": 76413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 76409,
                                  "name": "stateChainBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76328,
                                  "src": "9157:17:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 76410,
                                    "name": "validatorBalances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76315,
                                    "src": "9178:17:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                      "typeString": "uint256[] calldata"
                                    }
                                  },
                                  "id": 76412,
                                  "indexExpression": {
                                    "id": 76411,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76384,
                                    "src": "9196:1:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9178:20:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9157:41:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 76414,
                              "nodeType": "ExpressionStatement",
                              "src": "9157:41:193"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 76388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 76386,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76384,
                      "src": "8962:1:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 76387,
                      "name": "validatorInfoLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76379,
                      "src": "8966:19:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8962:23:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76418,
                  "initializationExpression": {
                    "assignments": [
                      76384
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 76384,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8959:1:193",
                        "nodeType": "VariableDeclaration",
                        "scope": 76418,
                        "src": "8954:6:193",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 76383,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8954:4:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 76385,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8954:6:193"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 76390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "8987:3:193",
                      "subExpression": {
                        "id": 76389,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76384,
                        "src": "8989:1:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 76391,
                    "nodeType": "ExpressionStatement",
                    "src": "8987:3:193"
                  },
                  "nodeType": "ForStatement",
                  "src": "8949:283:193"
                },
                {
                  "body": {
                    "id": 76439,
                    "nodeType": "Block",
                    "src": "9315:121:193",
                    "statements": [
                      {
                        "expression": {
                          "id": 76437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 76429,
                            "name": "totalOperatorPendingFee_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76331,
                            "src": "9330:24:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 76431,
                                  "name": "operatorBalances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76355,
                                  "src": "9374:16:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 76433,
                                "indexExpression": {
                                  "id": 76432,
                                  "name": "operatorId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76334,
                                  "src": "9391:10:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9374:28:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 76434,
                                "name": "operatorId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76334,
                                "src": "9404:10:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 76435,
                                "name": "takeFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76320,
                                "src": "9416:7:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 76430,
                              "name": "_updateOperator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76637,
                              "src": "9358:15:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,bool) returns (uint256)"
                              }
                            },
                            "id": 76436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9358:66:193",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9330:94:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 76438,
                        "nodeType": "ExpressionStatement",
                        "src": "9330:94:193"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 76425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 76423,
                      "name": "operatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76334,
                      "src": "9273:10:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 76424,
                      "name": "operatorCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76343,
                      "src": "9286:13:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9273:26:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76440,
                  "initializationExpression": {
                    "expression": {
                      "id": 76421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 76419,
                        "name": "operatorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76334,
                        "src": "9257:10:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "31",
                        "id": 76420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9270:1:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "9257:14:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 76422,
                    "nodeType": "ExpressionStatement",
                    "src": "9257:14:193"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 76427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9301:12:193",
                      "subExpression": {
                        "id": 76426,
                        "name": "operatorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76334,
                        "src": "9301:10:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 76428,
                    "nodeType": "ExpressionStatement",
                    "src": "9301:12:193"
                  },
                  "nodeType": "ForStatement",
                  "src": "9252:184:193"
                },
                {
                  "expression": {
                    "id": 76446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76441,
                      "name": "totalOperatorPendingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75942,
                      "src": "9450:23:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 76444,
                          "name": "totalOperatorPendingFee_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76331,
                          "src": "9494:24:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 76442,
                          "name": "SafeCast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64104,
                          "src": "9476:8:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeCast_$64104_$",
                            "typeString": "type(library SafeCast)"
                          }
                        },
                        "id": 76443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9485:8:193",
                        "memberName": "toUint80",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63116,
                        "src": "9476:17:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint80_$",
                          "typeString": "function (uint256) pure returns (uint80)"
                        }
                      },
                      "id": 76445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9476:43:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      }
                    },
                    "src": "9450:69:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "id": 76447,
                  "nodeType": "ExpressionStatement",
                  "src": "9450:69:193"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 76448,
                        "name": "stateChainBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76328,
                        "src": "9540:17:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 76449,
                        "name": "totalOperatorPendingFee_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76331,
                        "src": "9559:24:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 76450,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9539:45:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 76326,
                  "id": 76451,
                  "nodeType": "Return",
                  "src": "9532:52:193"
                }
              ]
            },
            "documentation": {
              "id": 76312,
              "nodeType": "StructuredDocumentation",
              "src": "7406:813:193",
              "text": " Internal function to loop through all operators and update them\n @param validatorBalances the balances of all the state chain validators\n @param addresses the addresses of all the state chain validators\n @param takeFee whether or not `pendingFee` should increment for these operators\n @return stateChainBalance the sum of all the countable validator balances\n @return totalOperatorPendingFee_ the sum of all the operators pendingFees\n @dev This function is called by `rebase`. It iterates through all the validators and their balances\n to create a map of operators and their balances. This information is used to call `updateOperator`. \n We check the hash of the addresses to ensure that the oracle included all the necessary addresses."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateOperators",
            "nameLocation": "8234:16:193",
            "parameters": {
              "id": 76321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76315,
                  "mutability": "mutable",
                  "name": "validatorBalances",
                  "nameLocation": "8270:17:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76453,
                  "src": "8251:36:193",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 76313,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8251:7:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 76314,
                    "nodeType": "ArrayTypeName",
                    "src": "8251:9:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76318,
                  "mutability": "mutable",
                  "name": "addresses",
                  "nameLocation": "8308:9:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76453,
                  "src": "8289:28:193",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 76316,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "8289:7:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 76317,
                    "nodeType": "ArrayTypeName",
                    "src": "8289:9:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76320,
                  "mutability": "mutable",
                  "name": "takeFee",
                  "nameLocation": "8324:7:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76453,
                  "src": "8319:12:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 76319,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8319:4:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8250:82:193"
            },
            "returnParameters": {
              "id": 76326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76323,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76453,
                  "src": "8351:7:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8351:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76325,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76453,
                  "src": "8360:7:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76324,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8360:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8350:18:193"
            },
            "scope": 76966,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 76637,
            "nodeType": "FunctionDefinition",
            "src": "10819:2811:193",
            "nodes": [],
            "body": {
              "id": 76636,
              "nodeType": "Block",
              "src": "10930:2700:193",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    76466
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76466,
                      "mutability": "mutable",
                      "name": "rewardIncrement",
                      "nameLocation": "10949:15:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76636,
                      "src": "10941:23:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76465,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10941:7:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76467,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10941:23:193"
                },
                {
                  "assignments": [
                    76469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76469,
                      "mutability": "mutable",
                      "name": "staked",
                      "nameLocation": "10982:6:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76636,
                      "src": "10975:13:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 76468,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "10975:6:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76470,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10975:13:193"
                },
                {
                  "assignments": [
                    76472
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76472,
                      "mutability": "mutable",
                      "name": "unstaked",
                      "nameLocation": "11006:8:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76636,
                      "src": "10999:15:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 76471,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "10999:6:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76473,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10999:15:193"
                },
                {
                  "assignments": [
                    76475
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76475,
                      "mutability": "mutable",
                      "name": "serviceFeeBps",
                      "nameLocation": "11032:13:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76636,
                      "src": "11025:20:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 76474,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "11025:6:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76476,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11025:20:193"
                },
                {
                  "assignments": [
                    76478
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76478,
                      "mutability": "mutable",
                      "name": "validatorFeeBps",
                      "nameLocation": "11063:15:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76636,
                      "src": "11056:22:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 76477,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "11056:6:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76479,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11056:22:193"
                },
                {
                  "expression": {
                    "id": 76489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 76480,
                          "name": "staked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76469,
                          "src": "11090:6:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        {
                          "id": 76481,
                          "name": "unstaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76472,
                          "src": "11097:8:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        {
                          "id": 76482,
                          "name": "serviceFeeBps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76475,
                          "src": "11106:13:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "id": 76483,
                          "name": "validatorFeeBps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76478,
                          "src": "11121:15:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "id": 76484,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "11089:48:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint96_$_t_uint96_$_t_uint16_$_t_uint16_$",
                        "typeString": "tuple(uint96,uint96,uint16,uint16)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 76487,
                          "name": "operatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76458,
                          "src": "11175:10:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 76485,
                          "name": "wrappedOutputProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75948,
                          "src": "11140:18:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OutputV1_$75869",
                            "typeString": "contract OutputV1"
                          }
                        },
                        "id": 76486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11159:15:193",
                        "memberName": "getOperatorInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 75669,
                        "src": "11140:34:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint96_$_t_uint96_$_t_uint16_$_t_uint16_$",
                          "typeString": "function (uint256) view external returns (uint96,uint96,uint16,uint16)"
                        }
                      },
                      "id": 76488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11140:46:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint96_$_t_uint96_$_t_uint16_$_t_uint16_$",
                        "typeString": "tuple(uint96,uint96,uint16,uint16)"
                      }
                    },
                    "src": "11089:97:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76490,
                  "nodeType": "ExpressionStatement",
                  "src": "11089:97:193"
                },
                {
                  "assignments": [
                    76492
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76492,
                      "mutability": "mutable",
                      "name": "slashCounter_",
                      "nameLocation": "11207:13:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76636,
                      "src": "11199:21:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76491,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11199:7:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76497,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 76493,
                        "name": "operators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75969,
                        "src": "11223:9:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Operator_$75964_storage_$",
                          "typeString": "mapping(uint256 => struct RebaserV1.Operator storage ref)"
                        }
                      },
                      "id": 76495,
                      "indexExpression": {
                        "id": 76494,
                        "name": "operatorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76458,
                        "src": "11233:10:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11223:21:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Operator_$75964_storage",
                        "typeString": "struct RebaserV1.Operator storage ref"
                      }
                    },
                    "id": 76496,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "11245:12:193",
                    "memberName": "slashCounter",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 75963,
                    "src": "11223:34:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint88",
                      "typeString": "uint88"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11199:58:193"
                },
                {
                  "assignments": [
                    76499
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76499,
                      "mutability": "mutable",
                      "name": "positivePreviousBalanceComponent",
                      "nameLocation": "11542:32:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76636,
                      "src": "11534:40:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76498,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11534:7:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76506,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    },
                    "id": 76505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 76500,
                      "name": "staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76469,
                      "src": "11577:6:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 76501,
                          "name": "operators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75969,
                          "src": "11586:9:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Operator_$75964_storage_$",
                            "typeString": "mapping(uint256 => struct RebaserV1.Operator storage ref)"
                          }
                        },
                        "id": 76503,
                        "indexExpression": {
                          "id": 76502,
                          "name": "operatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76458,
                          "src": "11596:10:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11586:21:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Operator_$75964_storage",
                          "typeString": "struct RebaserV1.Operator storage ref"
                        }
                      },
                      "id": 76504,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11608:7:193",
                      "memberName": "rewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75959,
                      "src": "11586:29:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint88",
                        "typeString": "uint88"
                      }
                    },
                    "src": "11577:38:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11534:81:193"
                },
                {
                  "assignments": [
                    76508
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76508,
                      "mutability": "mutable",
                      "name": "negativePreviousBalanceComponent",
                      "nameLocation": "11634:32:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76636,
                      "src": "11626:40:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76507,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11626:7:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76512,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 76511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 76509,
                      "name": "unstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76472,
                      "src": "11669:8:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 76510,
                      "name": "slashCounter_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76492,
                      "src": "11680:13:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11669:24:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11626:67:193"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 76517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 76515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 76513,
                        "name": "operatorBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76456,
                        "src": "12113:15:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 76514,
                        "name": "negativePreviousBalanceComponent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76508,
                        "src": "12131:32:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12113:50:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 76516,
                      "name": "positivePreviousBalanceComponent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76499,
                      "src": "12167:32:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12113:86:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 76629,
                    "nodeType": "Block",
                    "src": "13404:169:193",
                    "statements": [
                      {
                        "expression": {
                          "id": 76627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 76615,
                                "name": "operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75969,
                                "src": "13419:9:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Operator_$75964_storage_$",
                                  "typeString": "mapping(uint256 => struct RebaserV1.Operator storage ref)"
                                }
                              },
                              "id": 76617,
                              "indexExpression": {
                                "id": 76616,
                                "name": "operatorId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76458,
                                "src": "13429:10:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13419:21:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Operator_$75964_storage",
                                "typeString": "struct RebaserV1.Operator storage ref"
                              }
                            },
                            "id": 76618,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "13441:12:193",
                            "memberName": "slashCounter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 75963,
                            "src": "13419:34:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint88",
                              "typeString": "uint88"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 76625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 76623,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 76621,
                                    "name": "positivePreviousBalanceComponent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76499,
                                    "src": "13475:32:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 76622,
                                    "name": "negativePreviousBalanceComponent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76508,
                                    "src": "13510:32:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "13475:67:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 76624,
                                  "name": "operatorBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76456,
                                  "src": "13545:15:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13475:85:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 76619,
                                "name": "SafeCast",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64104,
                                "src": "13457:8:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_SafeCast_$64104_$",
                                  "typeString": "type(library SafeCast)"
                                }
                              },
                              "id": 76620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13466:8:193",
                              "memberName": "toUint88",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63091,
                              "src": "13457:17:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint88_$",
                                "typeString": "function (uint256) pure returns (uint88)"
                              }
                            },
                            "id": 76626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13457:104:193",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint88",
                              "typeString": "uint88"
                            }
                          },
                          "src": "13419:142:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint88",
                            "typeString": "uint88"
                          }
                        },
                        "id": 76628,
                        "nodeType": "ExpressionStatement",
                        "src": "13419:142:193"
                      }
                    ]
                  },
                  "id": 76630,
                  "nodeType": "IfStatement",
                  "src": "12109:1464:193",
                  "trueBody": {
                    "id": 76614,
                    "nodeType": "Block",
                    "src": "12201:1197:193",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 76520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 76518,
                            "name": "positivePreviousBalanceComponent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76499,
                            "src": "12234:32:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 76519,
                            "name": "negativePreviousBalanceComponent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76508,
                            "src": "12269:32:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12234:67:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 76540,
                          "nodeType": "Block",
                          "src": "12465:194:193",
                          "statements": [
                            {
                              "expression": {
                                "id": 76538,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 76531,
                                  "name": "rewardIncrement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76466,
                                  "src": "12484:15:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 76537,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 76532,
                                    "name": "operatorBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76456,
                                    "src": "12502:15:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 76535,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 76533,
                                          "name": "negativePreviousBalanceComponent",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 76508,
                                          "src": "12521:32:193",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 76534,
                                          "name": "positivePreviousBalanceComponent",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 76499,
                                          "src": "12556:32:193",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "12521:67:193",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 76536,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "12520:69:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12502:87:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12484:105:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 76539,
                              "nodeType": "ExpressionStatement",
                              "src": "12484:105:193"
                            }
                          ]
                        },
                        "id": 76541,
                        "nodeType": "IfStatement",
                        "src": "12230:429:193",
                        "trueBody": {
                          "id": 76530,
                          "nodeType": "Block",
                          "src": "12303:156:193",
                          "statements": [
                            {
                              "expression": {
                                "id": 76528,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 76521,
                                  "name": "rewardIncrement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76466,
                                  "src": "12322:15:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 76527,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 76522,
                                    "name": "operatorBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76456,
                                    "src": "12340:15:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 76525,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 76523,
                                          "name": "positivePreviousBalanceComponent",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 76499,
                                          "src": "12359:32:193",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 76524,
                                          "name": "negativePreviousBalanceComponent",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 76508,
                                          "src": "12394:32:193",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "12359:67:193",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 76526,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "12358:69:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12340:87:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12322:105:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 76529,
                              "nodeType": "ExpressionStatement",
                              "src": "12322:105:193"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 76544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 76542,
                            "name": "rewardIncrement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76466,
                            "src": "12679:15:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 76543,
                            "name": "slashCounter_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76492,
                            "src": "12697:13:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12679:31:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 76612,
                          "nodeType": "Block",
                          "src": "13280:107:193",
                          "statements": [
                            {
                              "expression": {
                                "id": 76610,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 76602,
                                      "name": "operators",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 75969,
                                      "src": "13299:9:193",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Operator_$75964_storage_$",
                                        "typeString": "mapping(uint256 => struct RebaserV1.Operator storage ref)"
                                      }
                                    },
                                    "id": 76604,
                                    "indexExpression": {
                                      "id": 76603,
                                      "name": "operatorId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 76458,
                                      "src": "13309:10:193",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13299:21:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Operator_$75964_storage",
                                      "typeString": "struct RebaserV1.Operator storage ref"
                                    }
                                  },
                                  "id": 76605,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "13321:12:193",
                                  "memberName": "slashCounter",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 75963,
                                  "src": "13299:34:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint88",
                                    "typeString": "uint88"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 76608,
                                      "name": "rewardIncrement",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 76466,
                                      "src": "13355:15:193",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 76606,
                                      "name": "SafeCast",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 64104,
                                      "src": "13337:8:193",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_SafeCast_$64104_$",
                                        "typeString": "type(library SafeCast)"
                                      }
                                    },
                                    "id": 76607,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "13346:8:193",
                                    "memberName": "toUint88",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 63091,
                                    "src": "13337:17:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint88_$",
                                      "typeString": "function (uint256) pure returns (uint88)"
                                    }
                                  },
                                  "id": 76609,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13337:34:193",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint88",
                                    "typeString": "uint88"
                                  }
                                },
                                "src": "13299:72:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint88",
                                  "typeString": "uint88"
                                }
                              },
                              "id": 76611,
                              "nodeType": "ExpressionStatement",
                              "src": "13299:72:193"
                            }
                          ]
                        },
                        "id": 76613,
                        "nodeType": "IfStatement",
                        "src": "12675:712:193",
                        "trueBody": {
                          "id": 76601,
                          "nodeType": "Block",
                          "src": "12712:562:193",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 76547,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 76545,
                                  "name": "slashCounter_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76492,
                                  "src": "12735:13:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 76546,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12752:1:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "12735:18:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 76560,
                              "nodeType": "IfStatement",
                              "src": "12731:161:193",
                              "trueBody": {
                                "id": 76559,
                                "nodeType": "Block",
                                "src": "12755:137:193",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 76550,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 76548,
                                        "name": "rewardIncrement",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 76466,
                                        "src": "12778:15:193",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "-=",
                                      "rightHandSide": {
                                        "id": 76549,
                                        "name": "slashCounter_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 76492,
                                        "src": "12797:13:193",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "12778:32:193",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 76551,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12778:32:193"
                                  },
                                  {
                                    "expression": {
                                      "id": 76557,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 76552,
                                            "name": "operators",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 75969,
                                            "src": "12833:9:193",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Operator_$75964_storage_$",
                                              "typeString": "mapping(uint256 => struct RebaserV1.Operator storage ref)"
                                            }
                                          },
                                          "id": 76554,
                                          "indexExpression": {
                                            "id": 76553,
                                            "name": "operatorId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 76458,
                                            "src": "12843:10:193",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "12833:21:193",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Operator_$75964_storage",
                                            "typeString": "struct RebaserV1.Operator storage ref"
                                          }
                                        },
                                        "id": 76555,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "12855:12:193",
                                        "memberName": "slashCounter",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 75963,
                                        "src": "12833:34:193",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint88",
                                          "typeString": "uint88"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 76556,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12870:1:193",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "12833:38:193",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint88",
                                        "typeString": "uint88"
                                      }
                                    },
                                    "id": 76558,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12833:38:193"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 76569,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 76561,
                                      "name": "operators",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 75969,
                                      "src": "12910:9:193",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Operator_$75964_storage_$",
                                        "typeString": "mapping(uint256 => struct RebaserV1.Operator storage ref)"
                                      }
                                    },
                                    "id": 76563,
                                    "indexExpression": {
                                      "id": 76562,
                                      "name": "operatorId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 76458,
                                      "src": "12920:10:193",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "12910:21:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Operator_$75964_storage",
                                      "typeString": "struct RebaserV1.Operator storage ref"
                                    }
                                  },
                                  "id": 76564,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "12932:7:193",
                                  "memberName": "rewards",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 75959,
                                  "src": "12910:29:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint88",
                                    "typeString": "uint88"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 76567,
                                      "name": "rewardIncrement",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 76466,
                                      "src": "12961:15:193",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 76565,
                                      "name": "SafeCast",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 64104,
                                      "src": "12943:8:193",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_SafeCast_$64104_$",
                                        "typeString": "type(library SafeCast)"
                                      }
                                    },
                                    "id": 76566,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "12952:8:193",
                                    "memberName": "toUint80",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 63116,
                                    "src": "12943:17:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint80_$",
                                      "typeString": "function (uint256) pure returns (uint80)"
                                    }
                                  },
                                  "id": 76568,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12943:34:193",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint80",
                                    "typeString": "uint80"
                                  }
                                },
                                "src": "12910:67:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint88",
                                  "typeString": "uint88"
                                }
                              },
                              "id": 76570,
                              "nodeType": "ExpressionStatement",
                              "src": "12910:67:193"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 76573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 76571,
                                  "name": "takeFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76460,
                                  "src": "13000:7:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "74727565",
                                  "id": 76572,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13011:4:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "13000:15:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 76600,
                              "nodeType": "IfStatement",
                              "src": "12996:263:193",
                              "trueBody": {
                                "id": 76599,
                                "nodeType": "Block",
                                "src": "13017:242:193",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 76586,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 76574,
                                            "name": "operators",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 75969,
                                            "src": "13040:9:193",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Operator_$75964_storage_$",
                                              "typeString": "mapping(uint256 => struct RebaserV1.Operator storage ref)"
                                            }
                                          },
                                          "id": 76576,
                                          "indexExpression": {
                                            "id": 76575,
                                            "name": "operatorId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 76458,
                                            "src": "13050:10:193",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "13040:21:193",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Operator_$75964_storage",
                                            "typeString": "struct RebaserV1.Operator storage ref"
                                          }
                                        },
                                        "id": 76577,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "13062:10:193",
                                        "memberName": "pendingFee",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 75961,
                                        "src": "13040:32:193",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint80",
                                          "typeString": "uint80"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 76584,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 76582,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 76580,
                                                "name": "rewardIncrement",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 76466,
                                                "src": "13094:15:193",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "id": 76581,
                                                "name": "validatorFeeBps",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 76478,
                                                "src": "13112:15:193",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint16",
                                                  "typeString": "uint16"
                                                }
                                              },
                                              "src": "13094:33:193",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "/",
                                            "rightExpression": {
                                              "hexValue": "3130303030",
                                              "id": 76583,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "13131:5:193",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_10000_by_1",
                                                "typeString": "int_const 10000"
                                              },
                                              "value": "10000"
                                            },
                                            "src": "13094:42:193",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 76578,
                                            "name": "SafeCast",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 64104,
                                            "src": "13076:8:193",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_SafeCast_$64104_$",
                                              "typeString": "type(library SafeCast)"
                                            }
                                          },
                                          "id": 76579,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "13085:8:193",
                                          "memberName": "toUint80",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 63116,
                                          "src": "13076:17:193",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint80_$",
                                            "typeString": "function (uint256) pure returns (uint80)"
                                          }
                                        },
                                        "id": 76585,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "13076:61:193",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint80",
                                          "typeString": "uint80"
                                        }
                                      },
                                      "src": "13040:97:193",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint80",
                                        "typeString": "uint80"
                                      }
                                    },
                                    "id": 76587,
                                    "nodeType": "ExpressionStatement",
                                    "src": "13040:97:193"
                                  },
                                  {
                                    "expression": {
                                      "id": 76597,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 76588,
                                        "name": "servicePendingFee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 75940,
                                        "src": "13160:17:193",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint80",
                                          "typeString": "uint80"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 76595,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 76593,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 76591,
                                                "name": "rewardIncrement",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 76466,
                                                "src": "13199:15:193",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "id": 76592,
                                                "name": "serviceFeeBps",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 76475,
                                                "src": "13217:13:193",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint16",
                                                  "typeString": "uint16"
                                                }
                                              },
                                              "src": "13199:31:193",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "/",
                                            "rightExpression": {
                                              "hexValue": "3130303030",
                                              "id": 76594,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "13233:5:193",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_10000_by_1",
                                                "typeString": "int_const 10000"
                                              },
                                              "value": "10000"
                                            },
                                            "src": "13199:39:193",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 76589,
                                            "name": "SafeCast",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 64104,
                                            "src": "13181:8:193",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_SafeCast_$64104_$",
                                              "typeString": "type(library SafeCast)"
                                            }
                                          },
                                          "id": 76590,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "13190:8:193",
                                          "memberName": "toUint80",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 63116,
                                          "src": "13181:17:193",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint80_$",
                                            "typeString": "function (uint256) pure returns (uint80)"
                                          }
                                        },
                                        "id": 76596,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "13181:58:193",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint80",
                                          "typeString": "uint80"
                                        }
                                      },
                                      "src": "13160:79:193",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint80",
                                        "typeString": "uint80"
                                      }
                                    },
                                    "id": 76598,
                                    "nodeType": "ExpressionStatement",
                                    "src": "13160:79:193"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 76631,
                        "name": "operators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75969,
                        "src": "13590:9:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Operator_$75964_storage_$",
                          "typeString": "mapping(uint256 => struct RebaserV1.Operator storage ref)"
                        }
                      },
                      "id": 76633,
                      "indexExpression": {
                        "id": 76632,
                        "name": "operatorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76458,
                        "src": "13600:10:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13590:21:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Operator_$75964_storage",
                        "typeString": "struct RebaserV1.Operator storage ref"
                      }
                    },
                    "id": 76634,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "13612:10:193",
                    "memberName": "pendingFee",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 75961,
                    "src": "13590:32:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "functionReturnParameters": 76464,
                  "id": 76635,
                  "nodeType": "Return",
                  "src": "13583:39:193"
                }
              ]
            },
            "documentation": {
              "id": 76454,
              "nodeType": "StructuredDocumentation",
              "src": "9600:1213:193",
              "text": " Updates individual operators. Performs meat of the rebase logic\n @param operatorBalance The actual balance of the operator\n @param operatorId The ID of the operator\n @param takeFee Whether or not pendingFee should increment\n @dev Calculates previous balance as total amount staked + total rewards - total unstaked - current slashCounter.\n If the actual balance is greater than the current balance this means that there are rewards. We separate the current\n balance into the positive and negative components to account for a possible overflow. The reward increment is \n the difference of these two values. We then check that the reward increment is greater than the slashCounter because\n an operator should not be paid until they earn back a slash. We decrement the slashCounter until its zero and then\n we increment the pendingFees by a specified percentage of the reward increase. If slashCounter is bigger than reward\n increment then we just decrement slashCounter to reduce the deficit and if previousBalance is greater than the\n actual operator balance then we increment slashCounter as there has been a slash. "
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateOperator",
            "nameLocation": "10828:15:193",
            "parameters": {
              "id": 76461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76456,
                  "mutability": "mutable",
                  "name": "operatorBalance",
                  "nameLocation": "10852:15:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76637,
                  "src": "10844:23:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10844:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76458,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "10877:10:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76637,
                  "src": "10869:18:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76457,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10869:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76460,
                  "mutability": "mutable",
                  "name": "takeFee",
                  "nameLocation": "10894:7:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76637,
                  "src": "10889:12:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 76459,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10889:4:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10843:59:193"
            },
            "returnParameters": {
              "id": 76464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76463,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76637,
                  "src": "10921:7:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10921:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10920:9:193"
            },
            "scope": 76966,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 76727,
            "nodeType": "FunctionDefinition",
            "src": "13931:639:193",
            "nodes": [],
            "body": {
              "id": 76726,
              "nodeType": "Block",
              "src": "14057:513:193",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    76650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76650,
                      "mutability": "mutable",
                      "name": "apr",
                      "nameLocation": "14076:3:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76726,
                      "src": "14068:11:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76649,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14068:7:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76651,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14068:11:193"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 76654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 76652,
                      "name": "newSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76644,
                      "src": "14094:9:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 76653,
                      "name": "currentSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76642,
                      "src": "14106:13:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14094:25:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 76722,
                    "nodeType": "Block",
                    "src": "14345:195:193",
                    "statements": [
                      {
                        "assignments": [
                          76704
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 76704,
                            "mutability": "mutable",
                            "name": "supplyDecrease",
                            "nameLocation": "14368:14:193",
                            "nodeType": "VariableDeclaration",
                            "scope": 76722,
                            "src": "14360:22:193",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 76703,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14360:7:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 76713,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 76712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130303030",
                            "id": 76705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14385:5:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 76710,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 76708,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 76706,
                                    "name": "newSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76644,
                                    "src": "14394:9:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3130303030",
                                    "id": 76707,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14406:5:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10000_by_1",
                                      "typeString": "int_const 10000"
                                    },
                                    "value": "10000"
                                  },
                                  "src": "14394:17:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 76709,
                                  "name": "currentSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76642,
                                  "src": "14414:13:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14394:33:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 76711,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "14393:35:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14385:43:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14360:68:193"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 76716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 76714,
                            "name": "supplyDecrease",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76704,
                            "src": "14447:14:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 76715,
                            "name": "slashThresholdBps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75934,
                            "src": "14465:17:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "14447:35:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 76721,
                        "nodeType": "IfStatement",
                        "src": "14443:85:193",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 76718,
                                "name": "supplyDecrease",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76704,
                                "src": "14513:14:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 76717,
                              "name": "SupplyDecreaseTooHigh",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76011,
                              "src": "14491:21:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) pure"
                              }
                            },
                            "id": 76719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14491:37:193",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 76720,
                          "nodeType": "RevertStatement",
                          "src": "14484:44:193"
                        }
                      }
                    ]
                  },
                  "id": 76723,
                  "nodeType": "IfStatement",
                  "src": "14090:450:193",
                  "trueBody": {
                    "id": 76702,
                    "nodeType": "Block",
                    "src": "14120:219:193",
                    "statements": [
                      {
                        "expression": {
                          "id": 76688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 76655,
                            "name": "apr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76650,
                            "src": "14135:3:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 76687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 76680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 76671,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 76666,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 76662,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 76660,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 76656,
                                            "name": "newSupply",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 76644,
                                            "src": "14142:9:193",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                              "typeString": "int_const 1000000000000000000"
                                            },
                                            "id": 76659,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "hexValue": "3130",
                                              "id": 76657,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "14154:2:193",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_10_by_1",
                                                "typeString": "int_const 10"
                                              },
                                              "value": "10"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "**",
                                            "rightExpression": {
                                              "hexValue": "3138",
                                              "id": 76658,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "14158:2:193",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_18_by_1",
                                                "typeString": "int_const 18"
                                              },
                                              "value": "18"
                                            },
                                            "src": "14154:6:193",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                              "typeString": "int_const 1000000000000000000"
                                            }
                                          },
                                          "src": "14142:18:193",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "id": 76661,
                                          "name": "currentSupply",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 76642,
                                          "src": "14163:13:193",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "14142:34:193",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                          "typeString": "int_const 1000000000000000000"
                                        },
                                        "id": 76665,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "3130",
                                          "id": 76663,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "14179:2:193",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10_by_1",
                                            "typeString": "int_const 10"
                                          },
                                          "value": "10"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "**",
                                        "rightExpression": {
                                          "hexValue": "3138",
                                          "id": 76664,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "14183:2:193",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_18_by_1",
                                            "typeString": "int_const 18"
                                          },
                                          "value": "18"
                                        },
                                        "src": "14179:6:193",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                          "typeString": "int_const 1000000000000000000"
                                        }
                                      },
                                      "src": "14142:43:193",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 76667,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "14141:45:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "id": 76670,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 76668,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14189:2:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "3138",
                                    "id": 76669,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14193:2:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_18_by_1",
                                      "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                  },
                                  "src": "14189:6:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                },
                                "src": "14141:54:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 76678,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 76676,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 76672,
                                        "name": "timeElapsed",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 76640,
                                        "src": "14199:11:193",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                          "typeString": "int_const 1000000000000000000"
                                        },
                                        "id": 76675,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "3130",
                                          "id": 76673,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "14213:2:193",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10_by_1",
                                            "typeString": "int_const 10"
                                          },
                                          "value": "10"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "**",
                                        "rightExpression": {
                                          "hexValue": "3138",
                                          "id": 76674,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "14217:2:193",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_18_by_1",
                                            "typeString": "int_const 18"
                                          },
                                          "value": "18"
                                        },
                                        "src": "14213:6:193",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                          "typeString": "int_const 1000000000000000000"
                                        }
                                      },
                                      "src": "14199:20:193",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "id": 76677,
                                      "name": "TIME_IN_YEAR",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 75930,
                                      "src": "14222:12:193",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "14199:35:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 76679,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "14198:37:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14141:94:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_100000000000000_by_1",
                                    "typeString": "int_const 100000000000000"
                                  },
                                  "id": 76685,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000"
                                    },
                                    "id": 76683,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3130",
                                      "id": 76681,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14239:2:193",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "**",
                                    "rightExpression": {
                                      "hexValue": "3138",
                                      "id": 76682,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14243:2:193",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_18_by_1",
                                        "typeString": "int_const 18"
                                      },
                                      "value": "18"
                                    },
                                    "src": "14239:6:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "3130303030",
                                    "id": 76684,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14246:5:193",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10000_by_1",
                                      "typeString": "int_const 10000"
                                    },
                                    "value": "10000"
                                  },
                                  "src": "14239:12:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100000000000000_by_1",
                                    "typeString": "int_const 100000000000000"
                                  }
                                }
                              ],
                              "id": 76686,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "14238:14:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000000000_by_1",
                                "typeString": "int_const 100000000000000"
                              }
                            },
                            "src": "14141:111:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14135:117:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 76689,
                        "nodeType": "ExpressionStatement",
                        "src": "14135:117:193"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 76694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 76692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 76690,
                              "name": "apr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76650,
                              "src": "14273:3:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 76691,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14279:1:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "14273:7:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 76693,
                            "name": "aprThresholdBps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75932,
                            "src": "14284:15:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "14273:26:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 76701,
                        "nodeType": "IfStatement",
                        "src": "14269:58:193",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 76698,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 76696,
                                  "name": "apr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76650,
                                  "src": "14319:3:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 76697,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14325:1:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "14319:7:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 76695,
                              "name": "AprTooHigh",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76007,
                              "src": "14308:10:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) pure"
                              }
                            },
                            "id": 76699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14308:19:193",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 76700,
                          "nodeType": "RevertStatement",
                          "src": "14301:26:193"
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 76724,
                    "name": "apr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 76650,
                    "src": "14559:3:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 76648,
                  "id": 76725,
                  "nodeType": "Return",
                  "src": "14552:10:193"
                }
              ]
            },
            "documentation": {
              "id": 76638,
              "nodeType": "StructuredDocumentation",
              "src": "13642:283:193",
              "text": " Ensures that the APR of the possible supply change is within reasonable bounds\n @param timeElapsed unix time since the last rebase\n @param currentSupply the current supply of stflip\n @param newSupply the new supply that would be increased to"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateSupplyChange",
            "nameLocation": "13940:21:193",
            "parameters": {
              "id": 76645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76640,
                  "mutability": "mutable",
                  "name": "timeElapsed",
                  "nameLocation": "13970:11:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76727,
                  "src": "13962:19:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13962:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76642,
                  "mutability": "mutable",
                  "name": "currentSupply",
                  "nameLocation": "13991:13:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76727,
                  "src": "13983:21:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13983:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76644,
                  "mutability": "mutable",
                  "name": "newSupply",
                  "nameLocation": "14014:9:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76727,
                  "src": "14006:17:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14006:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13961:63:193"
            },
            "returnParameters": {
              "id": 76648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76647,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76727,
                  "src": "14048:7:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14048:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14047:9:193"
            },
            "scope": 76966,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 76844,
            "nodeType": "FunctionDefinition",
            "src": "15327:1004:193",
            "nodes": [],
            "body": {
              "id": 76843,
              "nodeType": "Block",
              "src": "15419:912:193",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    76740
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76740,
                      "mutability": "mutable",
                      "name": "manager",
                      "nameLocation": "15438:7:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76843,
                      "src": "15430:15:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 76739,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15430:7:193",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76741,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15430:15:193"
                },
                {
                  "assignments": [
                    76743
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76743,
                      "mutability": "mutable",
                      "name": "feeRecipient",
                      "nameLocation": "15464:12:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76843,
                      "src": "15456:20:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 76742,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15456:7:193",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76744,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15456:20:193"
                },
                {
                  "assignments": [
                    76746
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76746,
                      "mutability": "mutable",
                      "name": "pendingFee",
                      "nameLocation": "15495:10:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76843,
                      "src": "15487:18:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76745,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15487:7:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76751,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 76747,
                        "name": "operators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75969,
                        "src": "15508:9:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Operator_$75964_storage_$",
                          "typeString": "mapping(uint256 => struct RebaserV1.Operator storage ref)"
                        }
                      },
                      "id": 76749,
                      "indexExpression": {
                        "id": 76748,
                        "name": "operatorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76736,
                        "src": "15518:10:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "15508:21:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Operator_$75964_storage",
                        "typeString": "struct RebaserV1.Operator storage ref"
                      }
                    },
                    "id": 76750,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "15530:10:193",
                    "memberName": "pendingFee",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 75961,
                    "src": "15508:32:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15487:53:193"
                },
                {
                  "expression": {
                    "id": 76759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 76752,
                          "name": "manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76740,
                          "src": "15552:7:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 76753,
                          "name": "feeRecipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76743,
                          "src": "15560:12:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 76754,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15551:22:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 76757,
                          "name": "operatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76736,
                          "src": "15616:10:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 76755,
                          "name": "wrappedOutputProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75948,
                          "src": "15576:18:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OutputV1_$75869",
                            "typeString": "contract OutputV1"
                          }
                        },
                        "id": 76756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15595:20:193",
                        "memberName": "getOperatorAddresses",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 75689,
                        "src": "15576:39:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_address_$",
                          "typeString": "function (uint256) view external returns (address,address)"
                        }
                      },
                      "id": 76758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15576:51:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "src": "15551:76:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76760,
                  "nodeType": "ExpressionStatement",
                  "src": "15551:76:193"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 76767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 76763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 76761,
                        "name": "max",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76732,
                        "src": "15652:3:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 76762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15659:5:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "15652:12:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 76766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 76764,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76730,
                        "src": "15668:6:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 76765,
                        "name": "pendingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76746,
                        "src": "15677:10:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15668:19:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15652:35:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76771,
                  "nodeType": "IfStatement",
                  "src": "15648:67:193",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 76768,
                        "name": "ExcessiveFeeClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76017,
                        "src": "15696:17:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 76769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15696:19:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 76770,
                    "nodeType": "RevertStatement",
                    "src": "15689:26:193"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 76780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 76775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 76772,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15730:3:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 76773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15734:6:193",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15730:10:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 76774,
                        "name": "feeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76743,
                        "src": "15744:12:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "15730:26:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 76779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 76776,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15760:3:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 76777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15764:6:193",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15760:10:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 76778,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76740,
                        "src": "15774:7:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "15760:21:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15730:51:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76784,
                  "nodeType": "IfStatement",
                  "src": "15726:90:193",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 76781,
                        "name": "NotFeeRecipientOrManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76019,
                        "src": "15790:24:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 76782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15790:26:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 76783,
                    "nodeType": "RevertStatement",
                    "src": "15783:33:193"
                  }
                },
                {
                  "assignments": [
                    76786
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76786,
                      "mutability": "mutable",
                      "name": "amountToClaim",
                      "nameLocation": "15837:13:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76843,
                      "src": "15829:21:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76785,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15829:7:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76791,
                  "initialValue": {
                    "condition": {
                      "id": 76787,
                      "name": "max",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76732,
                      "src": "15853:3:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 76789,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76730,
                      "src": "15872:6:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 76790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "15853:25:193",
                    "trueExpression": {
                      "id": 76788,
                      "name": "pendingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76746,
                      "src": "15859:10:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15829:49:193"
                },
                {
                  "expression": {
                    "id": 76800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 76792,
                          "name": "operators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75969,
                          "src": "15891:9:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Operator_$75964_storage_$",
                            "typeString": "mapping(uint256 => struct RebaserV1.Operator storage ref)"
                          }
                        },
                        "id": 76794,
                        "indexExpression": {
                          "id": 76793,
                          "name": "operatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76736,
                          "src": "15901:10:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15891:21:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Operator_$75964_storage",
                          "typeString": "struct RebaserV1.Operator storage ref"
                        }
                      },
                      "id": 76795,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "15913:10:193",
                      "memberName": "pendingFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75961,
                      "src": "15891:32:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 76798,
                          "name": "amountToClaim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76786,
                          "src": "15945:13:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 76796,
                          "name": "SafeCast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64104,
                          "src": "15927:8:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeCast_$64104_$",
                            "typeString": "type(library SafeCast)"
                          }
                        },
                        "id": 76797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15936:8:193",
                        "memberName": "toUint80",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63116,
                        "src": "15927:17:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint80_$",
                          "typeString": "function (uint256) pure returns (uint80)"
                        }
                      },
                      "id": 76799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15927:32:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      }
                    },
                    "src": "15891:68:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "id": 76801,
                  "nodeType": "ExpressionStatement",
                  "src": "15891:68:193"
                },
                {
                  "expression": {
                    "id": 76807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76802,
                      "name": "totalOperatorPendingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75942,
                      "src": "15970:23:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 76805,
                          "name": "amountToClaim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76786,
                          "src": "16015:13:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 76803,
                          "name": "SafeCast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64104,
                          "src": "15997:8:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeCast_$64104_$",
                            "typeString": "type(library SafeCast)"
                          }
                        },
                        "id": 76804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16006:8:193",
                        "memberName": "toUint80",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63116,
                        "src": "15997:17:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint80_$",
                          "typeString": "function (uint256) pure returns (uint80)"
                        }
                      },
                      "id": 76806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15997:32:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      }
                    },
                    "src": "15970:59:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "id": 76808,
                  "nodeType": "ExpressionStatement",
                  "src": "15970:59:193"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 76811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 76809,
                      "name": "receiveFlip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76734,
                      "src": "16054:11:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 76810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16069:4:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "16054:19:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 76833,
                    "nodeType": "Block",
                    "src": "16181:65:193",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 76828,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "16208:3:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 76829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16212:6:193",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "16208:10:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 76830,
                              "name": "amountToClaim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76786,
                              "src": "16220:13:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 76825,
                              "name": "stflip",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75957,
                              "src": "16196:6:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_stFlip_$73252",
                                "typeString": "contract stFlip"
                              }
                            },
                            "id": 76827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16203:4:193",
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72519,
                            "src": "16196:11:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 76831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16196:38:193",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 76832,
                        "nodeType": "ExpressionStatement",
                        "src": "16196:38:193"
                      }
                    ]
                  },
                  "id": 76834,
                  "nodeType": "IfStatement",
                  "src": "16050:196:193",
                  "trueBody": {
                    "id": 76824,
                    "nodeType": "Block",
                    "src": "16075:100:193",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 76817,
                                  "name": "wrappedOutputProxy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75948,
                                  "src": "16116:18:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OutputV1_$75869",
                                    "typeString": "contract OutputV1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OutputV1_$75869",
                                    "typeString": "contract OutputV1"
                                  }
                                ],
                                "id": 76816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "16108:7:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 76815,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16108:7:193",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 76818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16108:27:193",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 76819,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "16137:3:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 76820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16141:6:193",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "16137:10:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 76821,
                              "name": "amountToClaim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76786,
                              "src": "16149:13:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 76812,
                              "name": "flip",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75954,
                              "src": "16090:4:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$57630",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 76814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16095:12:193",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57629,
                            "src": "16090:17:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 76822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16090:73:193",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 76823,
                        "nodeType": "ExpressionStatement",
                        "src": "16090:73:193"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 76836,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16272:3:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 76837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16276:6:193",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16272:10:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76838,
                        "name": "amountToClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76786,
                        "src": "16284:13:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 76839,
                        "name": "receiveFlip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76734,
                        "src": "16299:11:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 76840,
                        "name": "operatorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76736,
                        "src": "16312:10:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76835,
                      "name": "FeeClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75979,
                      "src": "16263:8:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,bool,uint256)"
                      }
                    },
                    "id": 76841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16263:60:193",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76842,
                  "nodeType": "EmitStatement",
                  "src": "16258:65:193"
                }
              ]
            },
            "documentation": {
              "id": 76728,
              "nodeType": "StructuredDocumentation",
              "src": "14578:743:193",
              "text": "  @notice Claims pending fees to the fee recipient in either stflip or flip\n  @dev `pendingFee` is a piece of the pool. When fee is claimed in FLIP, the\n  pool's decrease in FLIP aligns with the decrease in `pendingFee`. Similarly,\n  when stFLIP is claimed, the increase in stFLIP supply corresponds to the decrease\n  in `pendingFee`. When `max` is true, the entire `pendingFee` is claimed and the\n  `amount` does not matter. \n  @param amount Amount of tokens to burn\n  @param max Whether or not to claim all pending fees\n  @param receiveFlip Whether or not to receive the fee in flip or stflip\n  @param operatorId the operator's ID that is claiming their fee"
            },
            "functionSelector": "109fc167",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimFee",
            "nameLocation": "15336:8:193",
            "parameters": {
              "id": 76737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76730,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "15354:6:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76844,
                  "src": "15346:14:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15346:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76732,
                  "mutability": "mutable",
                  "name": "max",
                  "nameLocation": "15367:3:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76844,
                  "src": "15362:8:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 76731,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15362:4:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76734,
                  "mutability": "mutable",
                  "name": "receiveFlip",
                  "nameLocation": "15377:11:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76844,
                  "src": "15372:16:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 76733,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15372:4:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76736,
                  "mutability": "mutable",
                  "name": "operatorId",
                  "nameLocation": "15398:10:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76844,
                  "src": "15390:18:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76735,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15390:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15345:64:193"
            },
            "returnParameters": {
              "id": 76738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15419:0:193"
            },
            "scope": 76966,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76917,
            "nodeType": "FunctionDefinition",
            "src": "16575:761:193",
            "nodes": [],
            "body": {
              "id": 76916,
              "nodeType": "Block",
              "src": "16682:654:193",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 76863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 76859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 76857,
                        "name": "max",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76849,
                        "src": "16697:3:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 76858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16704:5:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "16697:12:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 76862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 76860,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76847,
                        "src": "16713:6:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 76861,
                        "name": "servicePendingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75940,
                        "src": "16722:17:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "src": "16713:26:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "16697:42:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76867,
                  "nodeType": "IfStatement",
                  "src": "16693:74:193",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 76864,
                        "name": "ExcessiveFeeClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76017,
                        "src": "16748:17:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 76865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16748:19:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 76866,
                    "nodeType": "RevertStatement",
                    "src": "16741:26:193"
                  }
                },
                {
                  "assignments": [
                    76869
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76869,
                      "mutability": "mutable",
                      "name": "amountToClaim",
                      "nameLocation": "16788:13:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76916,
                      "src": "16780:21:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76868,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16780:7:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76874,
                  "initialValue": {
                    "condition": {
                      "id": 76870,
                      "name": "max",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76849,
                      "src": "16804:3:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 76872,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76847,
                      "src": "16830:6:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 76873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "16804:32:193",
                    "trueExpression": {
                      "id": 76871,
                      "name": "servicePendingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75940,
                      "src": "16810:17:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16780:56:193"
                },
                {
                  "expression": {
                    "id": 76880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76875,
                      "name": "servicePendingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75940,
                      "src": "16849:17:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 76878,
                          "name": "amountToClaim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76869,
                          "src": "16888:13:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 76876,
                          "name": "SafeCast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64104,
                          "src": "16870:8:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeCast_$64104_$",
                            "typeString": "type(library SafeCast)"
                          }
                        },
                        "id": 76877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16879:8:193",
                        "memberName": "toUint80",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63116,
                        "src": "16870:17:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint80_$",
                          "typeString": "function (uint256) pure returns (uint80)"
                        }
                      },
                      "id": 76879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16870:32:193",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      }
                    },
                    "src": "16849:53:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "id": 76881,
                  "nodeType": "ExpressionStatement",
                  "src": "16849:53:193"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 76884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 76882,
                      "name": "receiveFlip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76851,
                      "src": "16919:11:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 76883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16934:4:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "16919:19:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 76906,
                    "nodeType": "Block",
                    "src": "17046:65:193",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 76901,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "17073:3:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 76902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17077:6:193",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "17073:10:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 76903,
                              "name": "amountToClaim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76869,
                              "src": "17085:13:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 76898,
                              "name": "stflip",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75957,
                              "src": "17061:6:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_stFlip_$73252",
                                "typeString": "contract stFlip"
                              }
                            },
                            "id": 76900,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17068:4:193",
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72519,
                            "src": "17061:11:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 76904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17061:38:193",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 76905,
                        "nodeType": "ExpressionStatement",
                        "src": "17061:38:193"
                      }
                    ]
                  },
                  "id": 76907,
                  "nodeType": "IfStatement",
                  "src": "16915:196:193",
                  "trueBody": {
                    "id": 76897,
                    "nodeType": "Block",
                    "src": "16940:100:193",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 76890,
                                  "name": "wrappedOutputProxy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75948,
                                  "src": "16981:18:193",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OutputV1_$75869",
                                    "typeString": "contract OutputV1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OutputV1_$75869",
                                    "typeString": "contract OutputV1"
                                  }
                                ],
                                "id": 76889,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "16973:7:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 76888,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16973:7:193",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 76891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16973:27:193",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 76892,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "17002:3:193",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 76893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17006:6:193",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "17002:10:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 76894,
                              "name": "amountToClaim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76869,
                              "src": "17014:13:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 76885,
                              "name": "flip",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75954,
                              "src": "16955:4:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$57630",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 76887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16960:12:193",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57629,
                            "src": "16955:17:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 76895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16955:73:193",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 76896,
                        "nodeType": "ExpressionStatement",
                        "src": "16955:73:193"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 76909,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "17137:3:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 76910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17141:6:193",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17137:10:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76911,
                        "name": "amountToClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76869,
                        "src": "17149:13:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 76912,
                        "name": "receiveFlip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76851,
                        "src": "17164:11:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 76913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17177:1:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 76908,
                      "name": "FeeClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75979,
                      "src": "17128:8:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,bool,uint256)"
                      }
                    },
                    "id": 76914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17128:51:193",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76915,
                  "nodeType": "EmitStatement",
                  "src": "17123:56:193"
                }
              ]
            },
            "documentation": {
              "id": 76845,
              "nodeType": "StructuredDocumentation",
              "src": "16339:230:193",
              "text": " Claims the service's pendingFees\n @param amount Amount of fee to claim\n @param max Whether or not to claim all pending fees\n @param receiveFlip Whether to receive the fee in flip or stflip"
            },
            "functionSelector": "4754b7a1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 76854,
                    "name": "FEE_RECIPIENT_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75890,
                    "src": "16662:18:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 76855,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 76853,
                  "name": "onlyRole",
                  "nameLocations": [
                    "16653:8:193"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44971,
                  "src": "16653:8:193"
                },
                "nodeType": "ModifierInvocation",
                "src": "16653:28:193"
              }
            ],
            "name": "claimServiceFee",
            "nameLocation": "16584:15:193",
            "parameters": {
              "id": 76852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76847,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "16608:6:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76917,
                  "src": "16600:14:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76846,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16600:7:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76849,
                  "mutability": "mutable",
                  "name": "max",
                  "nameLocation": "16621:3:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76917,
                  "src": "16616:8:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 76848,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16616:4:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76851,
                  "mutability": "mutable",
                  "name": "receiveFlip",
                  "nameLocation": "16631:11:193",
                  "nodeType": "VariableDeclaration",
                  "scope": 76917,
                  "src": "16626:16:193",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 76850,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16626:4:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16599:44:193"
            },
            "returnParameters": {
              "id": 76856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16682:0:193"
            },
            "scope": 76966,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76965,
            "nodeType": "FunctionDefinition",
            "src": "17400:376:193",
            "nodes": [],
            "body": {
              "id": 76964,
              "nodeType": "Block",
              "src": "17466:310:193",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    76926
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76926,
                      "mutability": "mutable",
                      "name": "operatorCount",
                      "nameLocation": "17485:13:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76964,
                      "src": "17477:21:193",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 76925,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17477:7:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76930,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 76927,
                        "name": "wrappedOutputProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75948,
                        "src": "17501:18:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OutputV1_$75869",
                          "typeString": "contract OutputV1"
                        }
                      },
                      "id": 76928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17520:16:193",
                      "memberName": "getOperatorCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75636,
                      "src": "17501:35:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 76929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17501:37:193",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17477:61:193"
                },
                {
                  "assignments": [
                    76935
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76935,
                      "mutability": "mutable",
                      "name": "ret",
                      "nameLocation": "17567:3:193",
                      "nodeType": "VariableDeclaration",
                      "scope": 76964,
                      "src": "17549:21:193",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Operator_$75964_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct RebaserV1.Operator[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 76933,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 76932,
                            "name": "Operator",
                            "nameLocations": [
                              "17549:8:193"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 75964,
                            "src": "17549:8:193"
                          },
                          "referencedDeclaration": 75964,
                          "src": "17549:8:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Operator_$75964_storage_ptr",
                            "typeString": "struct RebaserV1.Operator"
                          }
                        },
                        "id": 76934,
                        "nodeType": "ArrayTypeName",
                        "src": "17549:10:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Operator_$75964_storage_$dyn_storage_ptr",
                          "typeString": "struct RebaserV1.Operator[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76942,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 76940,
                        "name": "operatorCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76926,
                        "src": "17588:13:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "17573:14:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Operator_$75964_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct RebaserV1.Operator memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 76937,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 76936,
                            "name": "Operator",
                            "nameLocations": [
                              "17577:8:193"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 75964,
                            "src": "17577:8:193"
                          },
                          "referencedDeclaration": 75964,
                          "src": "17577:8:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Operator_$75964_storage_ptr",
                            "typeString": "struct RebaserV1.Operator"
                          }
                        },
                        "id": 76938,
                        "nodeType": "ArrayTypeName",
                        "src": "17577:10:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Operator_$75964_storage_$dyn_storage_ptr",
                          "typeString": "struct RebaserV1.Operator[]"
                        }
                      }
                    },
                    "id": 76941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17573:29:193",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Operator_$75964_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct RebaserV1.Operator memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17549:53:193"
                },
                {
                  "body": {
                    "id": 76960,
                    "nodeType": "Block",
                    "src": "17680:66:193",
                    "statements": [
                      {
                        "expression": {
                          "id": 76958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 76952,
                              "name": "ret",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76935,
                              "src": "17695:3:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Operator_$75964_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct RebaserV1.Operator memory[] memory"
                              }
                            },
                            "id": 76954,
                            "indexExpression": {
                              "id": 76953,
                              "name": "operatorId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76944,
                              "src": "17699:10:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "17695:15:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Operator_$75964_memory_ptr",
                              "typeString": "struct RebaserV1.Operator memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 76955,
                              "name": "operators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75969,
                              "src": "17713:9:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Operator_$75964_storage_$",
                                "typeString": "mapping(uint256 => struct RebaserV1.Operator storage ref)"
                              }
                            },
                            "id": 76957,
                            "indexExpression": {
                              "id": 76956,
                              "name": "operatorId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76944,
                              "src": "17723:10:193",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17713:21:193",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Operator_$75964_storage",
                              "typeString": "struct RebaserV1.Operator storage ref"
                            }
                          },
                          "src": "17695:39:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Operator_$75964_memory_ptr",
                            "typeString": "struct RebaserV1.Operator memory"
                          }
                        },
                        "id": 76959,
                        "nodeType": "ExpressionStatement",
                        "src": "17695:39:193"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 76948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 76946,
                      "name": "operatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76944,
                      "src": "17638:10:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 76947,
                      "name": "operatorCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76926,
                      "src": "17651:13:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17638:26:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76961,
                  "initializationExpression": {
                    "assignments": [
                      76944
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 76944,
                        "mutability": "mutable",
                        "name": "operatorId",
                        "nameLocation": "17626:10:193",
                        "nodeType": "VariableDeclaration",
                        "scope": 76961,
                        "src": "17618:18:193",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 76943,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17618:7:193",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 76945,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "17618:18:193"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 76950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "17666:12:193",
                      "subExpression": {
                        "id": 76949,
                        "name": "operatorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76944,
                        "src": "17666:10:193",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 76951,
                    "nodeType": "ExpressionStatement",
                    "src": "17666:12:193"
                  },
                  "nodeType": "ForStatement",
                  "src": "17613:133:193"
                },
                {
                  "expression": {
                    "id": 76962,
                    "name": "ret",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 76935,
                    "src": "17765:3:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Operator_$75964_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct RebaserV1.Operator memory[] memory"
                    }
                  },
                  "functionReturnParameters": 76924,
                  "id": 76963,
                  "nodeType": "Return",
                  "src": "17758:10:193"
                }
              ]
            },
            "documentation": {
              "id": 76918,
              "nodeType": "StructuredDocumentation",
              "src": "17344:50:193",
              "text": " @notice Returns all operators"
            },
            "functionSelector": "27a099d8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOperators",
            "nameLocation": "17409:12:193",
            "parameters": {
              "id": 76919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17421:2:193"
            },
            "returnParameters": {
              "id": 76924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76923,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76965,
                  "src": "17447:17:193",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Operator_$75964_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct RebaserV1.Operator[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 76921,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 76920,
                        "name": "Operator",
                        "nameLocations": [
                          "17447:8:193"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 75964,
                        "src": "17447:8:193"
                      },
                      "referencedDeclaration": 75964,
                      "src": "17447:8:193",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Operator_$75964_storage_ptr",
                        "typeString": "struct RebaserV1.Operator"
                      }
                    },
                    "id": 76922,
                    "nodeType": "ArrayTypeName",
                    "src": "17447:10:193",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Operator_$75964_storage_$dyn_storage_ptr",
                      "typeString": "struct RebaserV1.Operator[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17446:19:193"
            },
            "scope": 76966,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 75924,
              "name": "Initializable",
              "nameLocations": [
                "935:13:193"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46033,
              "src": "935:13:193"
            },
            "id": 75925,
            "nodeType": "InheritanceSpecifier",
            "src": "935:13:193"
          },
          {
            "baseName": {
              "id": 75926,
              "name": "Ownership",
              "nameLocations": [
                "950:9:193"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 75911,
              "src": "950:9:193"
            },
            "id": 75927,
            "nodeType": "InheritanceSpecifier",
            "src": "950:9:193"
          }
        ],
        "canonicalName": "RebaserV1",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 75923,
          "nodeType": "StructuredDocumentation",
          "src": "652:259:193",
          "text": " @title Rebaser contract for stFLIP\n @notice Will be called by an offchain service to set the rebase factor.\n Has protections so the rebase can't be too large or small. Fees come from\n rebases, there is a fee claim function to claim fees."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          76966,
          75911,
          44917,
          45253,
          48943,
          48955,
          45840,
          45338,
          45411,
          47946,
          46033
        ],
        "name": "RebaserV1",
        "nameLocation": "922:9:193",
        "scope": 76967,
        "usedErrors": [
          76003,
          76007,
          76011,
          76013,
          76015,
          76017,
          76019
        ],
        "usedEvents": [
          45266,
          45269,
          45276,
          45279,
          45350,
          45359,
          45368,
          45879,
          75979,
          75989,
          75993,
          75997,
          76001
        ]
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 193
}