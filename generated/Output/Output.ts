// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DefaultAdminDelayChangeCanceled extends ethereum.Event {
  get params(): DefaultAdminDelayChangeCanceled__Params {
    return new DefaultAdminDelayChangeCanceled__Params(this);
  }
}

export class DefaultAdminDelayChangeCanceled__Params {
  _event: DefaultAdminDelayChangeCanceled;

  constructor(event: DefaultAdminDelayChangeCanceled) {
    this._event = event;
  }
}

export class DefaultAdminDelayChangeScheduled extends ethereum.Event {
  get params(): DefaultAdminDelayChangeScheduled__Params {
    return new DefaultAdminDelayChangeScheduled__Params(this);
  }
}

export class DefaultAdminDelayChangeScheduled__Params {
  _event: DefaultAdminDelayChangeScheduled;

  constructor(event: DefaultAdminDelayChangeScheduled) {
    this._event = event;
  }

  get newDelay(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get effectSchedule(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DefaultAdminTransferCanceled extends ethereum.Event {
  get params(): DefaultAdminTransferCanceled__Params {
    return new DefaultAdminTransferCanceled__Params(this);
  }
}

export class DefaultAdminTransferCanceled__Params {
  _event: DefaultAdminTransferCanceled;

  constructor(event: DefaultAdminTransferCanceled) {
    this._event = event;
  }
}

export class DefaultAdminTransferScheduled extends ethereum.Event {
  get params(): DefaultAdminTransferScheduled__Params {
    return new DefaultAdminTransferScheduled__Params(this);
  }
}

export class DefaultAdminTransferScheduled__Params {
  _event: DefaultAdminTransferScheduled;

  constructor(event: DefaultAdminTransferScheduled) {
    this._event = event;
  }

  get newAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get acceptSchedule(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OperatorAdded extends ethereum.Event {
  get params(): OperatorAdded__Params {
    return new OperatorAdded__Params(this);
  }
}

export class OperatorAdded__Params {
  _event: OperatorAdded;

  constructor(event: OperatorAdded) {
    this._event = event;
  }

  get name(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get serviceFeeBps(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get validatorFeeBps(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get validatorAllowance(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get manager(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class OperatorFeeUpdated extends ethereum.Event {
  get params(): OperatorFeeUpdated__Params {
    return new OperatorFeeUpdated__Params(this);
  }
}

export class OperatorFeeUpdated__Params {
  _event: OperatorFeeUpdated;

  constructor(event: OperatorFeeUpdated) {
    this._event = event;
  }

  get serviceFeeBps(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get validatorFeeBps(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get operatorId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OperatorWhitelistUpdated extends ethereum.Event {
  get params(): OperatorWhitelistUpdated__Params {
    return new OperatorWhitelistUpdated__Params(this);
  }
}

export class OperatorWhitelistUpdated__Params {
  _event: OperatorWhitelistUpdated;

  constructor(event: OperatorWhitelistUpdated) {
    this._event = event;
  }

  get operatorId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get whitelist(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ValidatorAllowanceUpdated extends ethereum.Event {
  get params(): ValidatorAllowanceUpdated__Params {
    return new ValidatorAllowanceUpdated__Params(this);
  }
}

export class ValidatorAllowanceUpdated__Params {
  _event: ValidatorAllowanceUpdated;

  constructor(event: ValidatorAllowanceUpdated) {
    this._event = event;
  }

  get newAllowance(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get operatorId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ValidatorsAdded extends ethereum.Event {
  get params(): ValidatorsAdded__Params {
    return new ValidatorsAdded__Params(this);
  }
}

export class ValidatorsAdded__Params {
  _event: ValidatorsAdded;

  constructor(event: ValidatorsAdded) {
    this._event = event;
  }

  get count(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get operatorId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ValidatorsFunded extends ethereum.Event {
  get params(): ValidatorsFunded__Params {
    return new ValidatorsFunded__Params(this);
  }
}

export class ValidatorsFunded__Params {
  _event: ValidatorsFunded;

  constructor(event: ValidatorsFunded) {
    this._event = event;
  }

  get count(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ValidatorsRedeemed extends ethereum.Event {
  get params(): ValidatorsRedeemed__Params {
    return new ValidatorsRedeemed__Params(this);
  }
}

export class ValidatorsRedeemed__Params {
  _event: ValidatorsRedeemed;

  constructor(event: ValidatorsRedeemed) {
    this._event = event;
  }

  get count(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ValidatorsStatusUpdated extends ethereum.Event {
  get params(): ValidatorsStatusUpdated__Params {
    return new ValidatorsStatusUpdated__Params(this);
  }
}

export class ValidatorsStatusUpdated__Params {
  _event: ValidatorsStatusUpdated;

  constructor(event: ValidatorsStatusUpdated) {
    this._event = event;
  }

  get count(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get whitelist(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get trackBalance(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class ValidatorsTrackBalanceUpdated extends ethereum.Event {
  get params(): ValidatorsTrackBalanceUpdated__Params {
    return new ValidatorsTrackBalanceUpdated__Params(this);
  }
}

export class ValidatorsTrackBalanceUpdated__Params {
  _event: ValidatorsTrackBalanceUpdated;

  constructor(event: ValidatorsTrackBalanceUpdated) {
    this._event = event;
  }

  get count(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get status(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class ValidatorsWhitelistUpdated extends ethereum.Event {
  get params(): ValidatorsWhitelistUpdated__Params {
    return new ValidatorsWhitelistUpdated__Params(this);
  }
}

export class ValidatorsWhitelistUpdated__Params {
  _event: ValidatorsWhitelistUpdated;

  constructor(event: ValidatorsWhitelistUpdated) {
    this._event = event;
  }

  get count(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get status(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Output__getOperatorAddressesResult {
  value0: Address;
  value1: Address;

  constructor(value0: Address, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }

  getValue0(): Address {
    return this.value0;
  }

  getValue1(): Address {
    return this.value1;
  }
}

export class Output__getOperatorInfoResult {
  value0: BigInt;
  value1: BigInt;
  value2: i32;
  value3: i32;

  constructor(value0: BigInt, value1: BigInt, value2: i32, value3: i32) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }

  getValue2(): i32 {
    return this.value2;
  }

  getValue3(): i32 {
    return this.value3;
  }
}

export class Output__getValidatorInfoResultValue0Struct extends ethereum.Tuple {
  get operatorId(): i32 {
    return this[0].toI32();
  }

  get trackBalance(): boolean {
    return this[1].toBoolean();
  }
}

export class Output__getValidatorInfoResult {
  value0: Array<Output__getValidatorInfoResultValue0Struct>;
  value1: BigInt;
  value2: boolean;

  constructor(
    value0: Array<Output__getValidatorInfoResultValue0Struct>,
    value1: BigInt,
    value2: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTupleArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    return map;
  }

  getValue0(): Array<Output__getValidatorInfoResultValue0Struct> {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }

  getValue2(): boolean {
    return this.value2;
  }
}

export class Output__operatorsResult {
  value0: BigInt;
  value1: BigInt;
  value2: i32;
  value3: i32;
  value4: boolean;
  value5: i32;
  value6: Address;
  value7: Address;
  value8: string;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: i32,
    value3: i32,
    value4: boolean,
    value5: i32,
    value6: Address,
    value7: Address,
    value8: string
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set(
      "value5",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value5))
    );
    map.set("value6", ethereum.Value.fromAddress(this.value6));
    map.set("value7", ethereum.Value.fromAddress(this.value7));
    map.set("value8", ethereum.Value.fromString(this.value8));
    return map;
  }

  getStaked(): BigInt {
    return this.value0;
  }

  getUnstaked(): BigInt {
    return this.value1;
  }

  getServiceFeeBps(): i32 {
    return this.value2;
  }

  getValidatorFeeBps(): i32 {
    return this.value3;
  }

  getWhitelisted(): boolean {
    return this.value4;
  }

  getValidatorAllowance(): i32 {
    return this.value5;
  }

  getManager(): Address {
    return this.value6;
  }

  getFeeRecipient(): Address {
    return this.value7;
  }

  getName(): string {
    return this.value8;
  }
}

export class Output__pendingDefaultAdminResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getNewAdmin(): Address {
    return this.value0;
  }

  getSchedule(): BigInt {
    return this.value1;
  }
}

export class Output__pendingDefaultAdminDelayResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getNewDelay(): BigInt {
    return this.value0;
  }

  getSchedule(): BigInt {
    return this.value1;
  }
}

export class Output__validatorsResult {
  value0: i32;
  value1: boolean;
  value2: boolean;

  constructor(value0: i32, value1: boolean, value2: boolean) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    return map;
  }

  getOperatorId(): i32 {
    return this.value0;
  }

  getWhitelisted(): boolean {
    return this.value1;
  }

  getTrackBalance(): boolean {
    return this.value2;
  }
}

export class Output extends ethereum.SmartContract {
  static bind(address: Address): Output {
    return new Output("Output", address);
  }

  BURNER_ROLE(): Bytes {
    let result = super.call("BURNER_ROLE", "BURNER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_BURNER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("BURNER_ROLE", "BURNER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  FEE_RECIPIENT_ROLE(): Bytes {
    let result = super.call(
      "FEE_RECIPIENT_ROLE",
      "FEE_RECIPIENT_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_FEE_RECIPIENT_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "FEE_RECIPIENT_ROLE",
      "FEE_RECIPIENT_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  GOVERNOR_ROLE(): Bytes {
    let result = super.call("GOVERNOR_ROLE", "GOVERNOR_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_GOVERNOR_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "GOVERNOR_ROLE",
      "GOVERNOR_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MANAGER_ROLE(): Bytes {
    let result = super.call("MANAGER_ROLE", "MANAGER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_MANAGER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("MANAGER_ROLE", "MANAGER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MINTER_ROLE(): Bytes {
    let result = super.call("MINTER_ROLE", "MINTER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_MINTER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("MINTER_ROLE", "MINTER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  PAUSER_ROLE(): Bytes {
    let result = super.call("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_PAUSER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  REBASER_ROLE(): Bytes {
    let result = super.call("REBASER_ROLE", "REBASER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_REBASER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("REBASER_ROLE", "REBASER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  computeValidatorHash(addresses: Array<Bytes>): Bytes {
    let result = super.call(
      "computeValidatorHash",
      "computeValidatorHash(bytes32[]):(bytes32)",
      [ethereum.Value.fromFixedBytesArray(addresses)]
    );

    return result[0].toBytes();
  }

  try_computeValidatorHash(
    addresses: Array<Bytes>
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "computeValidatorHash",
      "computeValidatorHash(bytes32[]):(bytes32)",
      [ethereum.Value.fromFixedBytesArray(addresses)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  defaultAdmin(): Address {
    let result = super.call("defaultAdmin", "defaultAdmin():(address)", []);

    return result[0].toAddress();
  }

  try_defaultAdmin(): ethereum.CallResult<Address> {
    let result = super.tryCall("defaultAdmin", "defaultAdmin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  defaultAdminDelay(): BigInt {
    let result = super.call(
      "defaultAdminDelay",
      "defaultAdminDelay():(uint48)",
      []
    );

    return result[0].toBigInt();
  }

  try_defaultAdminDelay(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "defaultAdminDelay",
      "defaultAdminDelay():(uint48)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  defaultAdminDelayIncreaseWait(): BigInt {
    let result = super.call(
      "defaultAdminDelayIncreaseWait",
      "defaultAdminDelayIncreaseWait():(uint48)",
      []
    );

    return result[0].toBigInt();
  }

  try_defaultAdminDelayIncreaseWait(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "defaultAdminDelayIncreaseWait",
      "defaultAdminDelayIncreaseWait():(uint48)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  flip(): Address {
    let result = super.call("flip", "flip():(address)", []);

    return result[0].toAddress();
  }

  try_flip(): ethereum.CallResult<Address> {
    let result = super.tryCall("flip", "flip():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getCountableValidators(): Array<Bytes> {
    let result = super.call(
      "getCountableValidators",
      "getCountableValidators():(bytes32[])",
      []
    );

    return result[0].toBytesArray();
  }

  try_getCountableValidators(): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "getCountableValidators",
      "getCountableValidators():(bytes32[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  getOperatorAddresses(id: BigInt): Output__getOperatorAddressesResult {
    let result = super.call(
      "getOperatorAddresses",
      "getOperatorAddresses(uint256):(address,address)",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );

    return new Output__getOperatorAddressesResult(
      result[0].toAddress(),
      result[1].toAddress()
    );
  }

  try_getOperatorAddresses(
    id: BigInt
  ): ethereum.CallResult<Output__getOperatorAddressesResult> {
    let result = super.tryCall(
      "getOperatorAddresses",
      "getOperatorAddresses(uint256):(address,address)",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Output__getOperatorAddressesResult(
        value[0].toAddress(),
        value[1].toAddress()
      )
    );
  }

  getOperatorCount(): BigInt {
    let result = super.call(
      "getOperatorCount",
      "getOperatorCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getOperatorCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getOperatorCount",
      "getOperatorCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOperatorInfo(id: BigInt): Output__getOperatorInfoResult {
    let result = super.call(
      "getOperatorInfo",
      "getOperatorInfo(uint256):(uint96,uint96,uint16,uint16)",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );

    return new Output__getOperatorInfoResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toI32(),
      result[3].toI32()
    );
  }

  try_getOperatorInfo(
    id: BigInt
  ): ethereum.CallResult<Output__getOperatorInfoResult> {
    let result = super.tryCall(
      "getOperatorInfo",
      "getOperatorInfo(uint256):(uint96,uint96,uint16,uint16)",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Output__getOperatorInfoResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toI32(),
        value[3].toI32()
      )
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getValidatorInfo(addresses: Array<Bytes>): Output__getValidatorInfoResult {
    let result = super.call(
      "getValidatorInfo",
      "getValidatorInfo(bytes32[]):((uint8,bool)[],uint256,bool)",
      [ethereum.Value.fromFixedBytesArray(addresses)]
    );

    return new Output__getValidatorInfoResult(
      result[0].toTupleArray<Output__getValidatorInfoResultValue0Struct>(),
      result[1].toBigInt(),
      result[2].toBoolean()
    );
  }

  try_getValidatorInfo(
    addresses: Array<Bytes>
  ): ethereum.CallResult<Output__getValidatorInfoResult> {
    let result = super.tryCall(
      "getValidatorInfo",
      "getValidatorInfo(bytes32[]):((uint8,bool)[],uint256,bool)",
      [ethereum.Value.fromFixedBytesArray(addresses)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Output__getValidatorInfoResult(
        value[0].toTupleArray<Output__getValidatorInfoResultValue0Struct>(),
        value[1].toBigInt(),
        value[2].toBoolean()
      )
    );
  }

  getValidators(): Array<Bytes> {
    let result = super.call("getValidators", "getValidators():(bytes32[])", []);

    return result[0].toBytesArray();
  }

  try_getValidators(): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "getValidators",
      "getValidators():(bytes32[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  operators(param0: BigInt): Output__operatorsResult {
    let result = super.call(
      "operators",
      "operators(uint256):(uint96,uint96,uint16,uint16,bool,uint8,address,address,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Output__operatorsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toI32(),
      result[3].toI32(),
      result[4].toBoolean(),
      result[5].toI32(),
      result[6].toAddress(),
      result[7].toAddress(),
      result[8].toString()
    );
  }

  try_operators(param0: BigInt): ethereum.CallResult<Output__operatorsResult> {
    let result = super.tryCall(
      "operators",
      "operators(uint256):(uint96,uint96,uint16,uint16,bool,uint8,address,address,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Output__operatorsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toI32(),
        value[3].toI32(),
        value[4].toBoolean(),
        value[5].toI32(),
        value[6].toAddress(),
        value[7].toAddress(),
        value[8].toString()
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pendingDefaultAdmin(): Output__pendingDefaultAdminResult {
    let result = super.call(
      "pendingDefaultAdmin",
      "pendingDefaultAdmin():(address,uint48)",
      []
    );

    return new Output__pendingDefaultAdminResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_pendingDefaultAdmin(): ethereum.CallResult<
    Output__pendingDefaultAdminResult
  > {
    let result = super.tryCall(
      "pendingDefaultAdmin",
      "pendingDefaultAdmin():(address,uint48)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Output__pendingDefaultAdminResult(
        value[0].toAddress(),
        value[1].toBigInt()
      )
    );
  }

  pendingDefaultAdminDelay(): Output__pendingDefaultAdminDelayResult {
    let result = super.call(
      "pendingDefaultAdminDelay",
      "pendingDefaultAdminDelay():(uint48,uint48)",
      []
    );

    return new Output__pendingDefaultAdminDelayResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_pendingDefaultAdminDelay(): ethereum.CallResult<
    Output__pendingDefaultAdminDelayResult
  > {
    let result = super.tryCall(
      "pendingDefaultAdminDelay",
      "pendingDefaultAdminDelay():(uint48,uint48)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Output__pendingDefaultAdminDelayResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  stateChainGateway(): Address {
    let result = super.call(
      "stateChainGateway",
      "stateChainGateway():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_stateChainGateway(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "stateChainGateway",
      "stateChainGateway():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  validatorAddressHash(): Bytes {
    let result = super.call(
      "validatorAddressHash",
      "validatorAddressHash():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_validatorAddressHash(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "validatorAddressHash",
      "validatorAddressHash():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  validatorAddresses(param0: BigInt): Bytes {
    let result = super.call(
      "validatorAddresses",
      "validatorAddresses(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBytes();
  }

  try_validatorAddresses(param0: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "validatorAddresses",
      "validatorAddresses(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  validators(param0: Bytes): Output__validatorsResult {
    let result = super.call(
      "validators",
      "validators(bytes32):(uint8,bool,bool)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new Output__validatorsResult(
      result[0].toI32(),
      result[1].toBoolean(),
      result[2].toBoolean()
    );
  }

  try_validators(param0: Bytes): ethereum.CallResult<Output__validatorsResult> {
    let result = super.tryCall(
      "validators",
      "validators(bytes32):(uint8,bool,bool)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Output__validatorsResult(
        value[0].toI32(),
        value[1].toBoolean(),
        value[2].toBoolean()
      )
    );
  }

  wrappedBurnerProxy(): Address {
    let result = super.call(
      "wrappedBurnerProxy",
      "wrappedBurnerProxy():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_wrappedBurnerProxy(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "wrappedBurnerProxy",
      "wrappedBurnerProxy():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  wrappedRebaserProxy(): Address {
    let result = super.call(
      "wrappedRebaserProxy",
      "wrappedRebaserProxy():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_wrappedRebaserProxy(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "wrappedRebaserProxy",
      "wrappedRebaserProxy():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptDefaultAdminTransferCall extends ethereum.Call {
  get inputs(): AcceptDefaultAdminTransferCall__Inputs {
    return new AcceptDefaultAdminTransferCall__Inputs(this);
  }

  get outputs(): AcceptDefaultAdminTransferCall__Outputs {
    return new AcceptDefaultAdminTransferCall__Outputs(this);
  }
}

export class AcceptDefaultAdminTransferCall__Inputs {
  _call: AcceptDefaultAdminTransferCall;

  constructor(call: AcceptDefaultAdminTransferCall) {
    this._call = call;
  }
}

export class AcceptDefaultAdminTransferCall__Outputs {
  _call: AcceptDefaultAdminTransferCall;

  constructor(call: AcceptDefaultAdminTransferCall) {
    this._call = call;
  }
}

export class AddOperatorCall extends ethereum.Call {
  get inputs(): AddOperatorCall__Inputs {
    return new AddOperatorCall__Inputs(this);
  }

  get outputs(): AddOperatorCall__Outputs {
    return new AddOperatorCall__Outputs(this);
  }
}

export class AddOperatorCall__Inputs {
  _call: AddOperatorCall;

  constructor(call: AddOperatorCall) {
    this._call = call;
  }

  get manager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get serviceFeeBps(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get validatorFeeBps(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get validatorAllowance(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class AddOperatorCall__Outputs {
  _call: AddOperatorCall;

  constructor(call: AddOperatorCall) {
    this._call = call;
  }
}

export class AddValidatorsCall extends ethereum.Call {
  get inputs(): AddValidatorsCall__Inputs {
    return new AddValidatorsCall__Inputs(this);
  }

  get outputs(): AddValidatorsCall__Outputs {
    return new AddValidatorsCall__Outputs(this);
  }
}

export class AddValidatorsCall__Inputs {
  _call: AddValidatorsCall;

  constructor(call: AddValidatorsCall) {
    this._call = call;
  }

  get addresses(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get operatorId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddValidatorsCall__Outputs {
  _call: AddValidatorsCall;

  constructor(call: AddValidatorsCall) {
    this._call = call;
  }
}

export class BeginDefaultAdminTransferCall extends ethereum.Call {
  get inputs(): BeginDefaultAdminTransferCall__Inputs {
    return new BeginDefaultAdminTransferCall__Inputs(this);
  }

  get outputs(): BeginDefaultAdminTransferCall__Outputs {
    return new BeginDefaultAdminTransferCall__Outputs(this);
  }
}

export class BeginDefaultAdminTransferCall__Inputs {
  _call: BeginDefaultAdminTransferCall;

  constructor(call: BeginDefaultAdminTransferCall) {
    this._call = call;
  }

  get newAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class BeginDefaultAdminTransferCall__Outputs {
  _call: BeginDefaultAdminTransferCall;

  constructor(call: BeginDefaultAdminTransferCall) {
    this._call = call;
  }
}

export class CancelDefaultAdminTransferCall extends ethereum.Call {
  get inputs(): CancelDefaultAdminTransferCall__Inputs {
    return new CancelDefaultAdminTransferCall__Inputs(this);
  }

  get outputs(): CancelDefaultAdminTransferCall__Outputs {
    return new CancelDefaultAdminTransferCall__Outputs(this);
  }
}

export class CancelDefaultAdminTransferCall__Inputs {
  _call: CancelDefaultAdminTransferCall;

  constructor(call: CancelDefaultAdminTransferCall) {
    this._call = call;
  }
}

export class CancelDefaultAdminTransferCall__Outputs {
  _call: CancelDefaultAdminTransferCall;

  constructor(call: CancelDefaultAdminTransferCall) {
    this._call = call;
  }
}

export class ChangeDefaultAdminDelayCall extends ethereum.Call {
  get inputs(): ChangeDefaultAdminDelayCall__Inputs {
    return new ChangeDefaultAdminDelayCall__Inputs(this);
  }

  get outputs(): ChangeDefaultAdminDelayCall__Outputs {
    return new ChangeDefaultAdminDelayCall__Outputs(this);
  }
}

export class ChangeDefaultAdminDelayCall__Inputs {
  _call: ChangeDefaultAdminDelayCall;

  constructor(call: ChangeDefaultAdminDelayCall) {
    this._call = call;
  }

  get newDelay(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ChangeDefaultAdminDelayCall__Outputs {
  _call: ChangeDefaultAdminDelayCall;

  constructor(call: ChangeDefaultAdminDelayCall) {
    this._call = call;
  }
}

export class FundValidatorsCall extends ethereum.Call {
  get inputs(): FundValidatorsCall__Inputs {
    return new FundValidatorsCall__Inputs(this);
  }

  get outputs(): FundValidatorsCall__Outputs {
    return new FundValidatorsCall__Outputs(this);
  }
}

export class FundValidatorsCall__Inputs {
  _call: FundValidatorsCall;

  constructor(call: FundValidatorsCall) {
    this._call = call;
  }

  get addresses(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class FundValidatorsCall__Outputs {
  _call: FundValidatorsCall;

  constructor(call: FundValidatorsCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get flip_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get burnerProxy_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get gov_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get manager_(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get stateChainGateway_(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get rebaser_(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RedeemValidatorsCall extends ethereum.Call {
  get inputs(): RedeemValidatorsCall__Inputs {
    return new RedeemValidatorsCall__Inputs(this);
  }

  get outputs(): RedeemValidatorsCall__Outputs {
    return new RedeemValidatorsCall__Outputs(this);
  }
}

export class RedeemValidatorsCall__Inputs {
  _call: RedeemValidatorsCall;

  constructor(call: RedeemValidatorsCall) {
    this._call = call;
  }

  get addresses(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class RedeemValidatorsCall__Outputs {
  _call: RedeemValidatorsCall;

  constructor(call: RedeemValidatorsCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class RollbackDefaultAdminDelayCall extends ethereum.Call {
  get inputs(): RollbackDefaultAdminDelayCall__Inputs {
    return new RollbackDefaultAdminDelayCall__Inputs(this);
  }

  get outputs(): RollbackDefaultAdminDelayCall__Outputs {
    return new RollbackDefaultAdminDelayCall__Outputs(this);
  }
}

export class RollbackDefaultAdminDelayCall__Inputs {
  _call: RollbackDefaultAdminDelayCall;

  constructor(call: RollbackDefaultAdminDelayCall) {
    this._call = call;
  }
}

export class RollbackDefaultAdminDelayCall__Outputs {
  _call: RollbackDefaultAdminDelayCall;

  constructor(call: RollbackDefaultAdminDelayCall) {
    this._call = call;
  }
}

export class SetOperatorFeeCall extends ethereum.Call {
  get inputs(): SetOperatorFeeCall__Inputs {
    return new SetOperatorFeeCall__Inputs(this);
  }

  get outputs(): SetOperatorFeeCall__Outputs {
    return new SetOperatorFeeCall__Outputs(this);
  }
}

export class SetOperatorFeeCall__Inputs {
  _call: SetOperatorFeeCall;

  constructor(call: SetOperatorFeeCall) {
    this._call = call;
  }

  get serviceFeeBps(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get validatorFeeBps(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get operatorId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetOperatorFeeCall__Outputs {
  _call: SetOperatorFeeCall;

  constructor(call: SetOperatorFeeCall) {
    this._call = call;
  }
}

export class SetOperatorValidatorAllowanceCall extends ethereum.Call {
  get inputs(): SetOperatorValidatorAllowanceCall__Inputs {
    return new SetOperatorValidatorAllowanceCall__Inputs(this);
  }

  get outputs(): SetOperatorValidatorAllowanceCall__Outputs {
    return new SetOperatorValidatorAllowanceCall__Outputs(this);
  }
}

export class SetOperatorValidatorAllowanceCall__Inputs {
  _call: SetOperatorValidatorAllowanceCall;

  constructor(call: SetOperatorValidatorAllowanceCall) {
    this._call = call;
  }

  get allowance(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get operatorId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetOperatorValidatorAllowanceCall__Outputs {
  _call: SetOperatorValidatorAllowanceCall;

  constructor(call: SetOperatorValidatorAllowanceCall) {
    this._call = call;
  }
}

export class SetOperatorWhitelistCall extends ethereum.Call {
  get inputs(): SetOperatorWhitelistCall__Inputs {
    return new SetOperatorWhitelistCall__Inputs(this);
  }

  get outputs(): SetOperatorWhitelistCall__Outputs {
    return new SetOperatorWhitelistCall__Outputs(this);
  }
}

export class SetOperatorWhitelistCall__Inputs {
  _call: SetOperatorWhitelistCall;

  constructor(call: SetOperatorWhitelistCall) {
    this._call = call;
  }

  get operatorId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get whitelist(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetOperatorWhitelistCall__Outputs {
  _call: SetOperatorWhitelistCall;

  constructor(call: SetOperatorWhitelistCall) {
    this._call = call;
  }
}

export class SetValidatorsStatusCall extends ethereum.Call {
  get inputs(): SetValidatorsStatusCall__Inputs {
    return new SetValidatorsStatusCall__Inputs(this);
  }

  get outputs(): SetValidatorsStatusCall__Outputs {
    return new SetValidatorsStatusCall__Outputs(this);
  }
}

export class SetValidatorsStatusCall__Inputs {
  _call: SetValidatorsStatusCall;

  constructor(call: SetValidatorsStatusCall) {
    this._call = call;
  }

  get addresses(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get whitelist(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }

  get trackBalance(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class SetValidatorsStatusCall__Outputs {
  _call: SetValidatorsStatusCall;

  constructor(call: SetValidatorsStatusCall) {
    this._call = call;
  }
}

export class SetValidatorsTrackBalanceCall extends ethereum.Call {
  get inputs(): SetValidatorsTrackBalanceCall__Inputs {
    return new SetValidatorsTrackBalanceCall__Inputs(this);
  }

  get outputs(): SetValidatorsTrackBalanceCall__Outputs {
    return new SetValidatorsTrackBalanceCall__Outputs(this);
  }
}

export class SetValidatorsTrackBalanceCall__Inputs {
  _call: SetValidatorsTrackBalanceCall;

  constructor(call: SetValidatorsTrackBalanceCall) {
    this._call = call;
  }

  get addresses(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get trackBalance(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetValidatorsTrackBalanceCall__Outputs {
  _call: SetValidatorsTrackBalanceCall;

  constructor(call: SetValidatorsTrackBalanceCall) {
    this._call = call;
  }
}

export class SetValidatorsWhitelistCall extends ethereum.Call {
  get inputs(): SetValidatorsWhitelistCall__Inputs {
    return new SetValidatorsWhitelistCall__Inputs(this);
  }

  get outputs(): SetValidatorsWhitelistCall__Outputs {
    return new SetValidatorsWhitelistCall__Outputs(this);
  }
}

export class SetValidatorsWhitelistCall__Inputs {
  _call: SetValidatorsWhitelistCall;

  constructor(call: SetValidatorsWhitelistCall) {
    this._call = call;
  }

  get addresses(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get whitelist(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetValidatorsWhitelistCall__Outputs {
  _call: SetValidatorsWhitelistCall;

  constructor(call: SetValidatorsWhitelistCall) {
    this._call = call;
  }
}
