type AddToDelegateCallAllowlist @entity(immutable: true) {
  id: Bytes!
  contractAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AddToSafeAllowlist @entity(immutable: true) {
  id: Bytes!
  safe: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EIP712DomainChanged @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProposalCanceled @entity(immutable: true) {
  id: Bytes!
  proposalId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProposalCreated @entity(immutable: true) {
  id: Bytes!
  proposalId: BigInt! # uint256
  proposer: Bytes! # address
  targets: [Bytes!]! # address[]
  values: [BigInt!]! # uint256[]
  signatures: [String!]! # string[]
  calldatas: [Bytes!]! # bytes[]
  voteStart: BigInt! # uint256
  voteEnd: BigInt! # uint256
  description: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProposalExecuted @entity(immutable: true) {
  id: Bytes!
  proposalId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProposalThresholdSet @entity(immutable: true) {
  id: Bytes!
  oldProposalThreshold: BigInt! # uint256
  newProposalThreshold: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type QuorumNumeratorUpdated @entity(immutable: true) {
  id: Bytes!
  oldQuorumNumerator: BigInt! # uint256
  newQuorumNumerator: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RemoveFromDelegateCallAllowlist @entity(immutable: true) {
  id: Bytes!
  contractAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RemoveFromSafeAllowlist @entity(immutable: true) {
  id: Bytes!
  safe: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SafeVotingPeriodSet @entity(immutable: true) {
  id: Bytes!
  safe: Bytes! # address
  oldSafeVotingPeriod: BigInt! # uint256
  newSafeVotingPeriod: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ShortCircuitNumeratorUpdated @entity(immutable: true) {
  id: Bytes!
  oldShortCircuitNumerator: BigInt! # uint256
  newShortCircuitNumerator: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransactionProposed @entity(immutable: true) {
  id: Bytes!
  safe: Bytes! # address
  nonce: BigInt! # uint256
  txHash: Bytes! # bytes32
  proposalId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VeFxsVotingDelegationSet @entity(immutable: true) {
  id: Bytes!
  oldVotingDelegation: Bytes! # address
  newVotingDelegation: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VoteCast @entity(immutable: true) {
  id: Bytes!
  voter: Bytes! # address
  proposalId: BigInt! # uint256
  support: Int! # uint8
  weight: BigInt! # uint256
  reason: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VoteCastWithParams @entity(immutable: true) {
  id: Bytes!
  voter: Bytes! # address
  proposalId: BigInt! # uint256
  support: Int! # uint8
  weight: BigInt! # uint256
  reason: String! # string
  params: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VotingDelayBlocksSet @entity(immutable: true) {
  id: Bytes!
  oldVotingDelayBlocks: BigInt! # uint256
  newVotingDelayBlocks: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VotingDelaySet @entity(immutable: true) {
  id: Bytes!
  oldVotingDelay: BigInt! # uint256
  newVotingDelay: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VotingPeriodSet @entity(immutable: true) {
  id: Bytes!
  oldVotingPeriod: BigInt! # uint256
  newVotingPeriod: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
